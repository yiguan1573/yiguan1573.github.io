<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>亿观的博客</title>
    <link>https://yiguan1573.github.io/</link>
    <description>Recent content on 亿观的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 17 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://yiguan1573.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>10、搜索查找类(Linux)</title>
      <link>https://yiguan1573.github.io/post/110%E6%90%9C%E7%B4%A2%E6%9F%A5%E6%89%BE%E7%B1%BB/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/110%E6%90%9C%E7%B4%A2%E6%9F%A5%E6%89%BE%E7%B1%BB/</guid>
      <description>find指令 find 指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件或者目录显示在终端 基本语法 find [搜索范围] [选项] 选项说明 案例 按文件</description>
    </item>
    
    <item>
      <title>11、压缩和解压缩(Linux)</title>
      <link>https://yiguan1573.github.io/post/111%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B%E7%BC%A9/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/111%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B%E7%BC%A9/</guid>
      <description>gzip/gunzip指令 gzip 用于压缩文件，gunzip用于解压的 基本语法 gzip 文件 （功能描述：压缩文件，只能将文件压缩为*.gz 文件） gunzip 文件.g</description>
    </item>
    
    <item>
      <title>12、组管理和权限管理(Linux)</title>
      <link>https://yiguan1573.github.io/post/112%E7%BB%84%E7%AE%A1%E7%90%86%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/112%E7%BB%84%E7%AE%A1%E7%90%86%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</guid>
      <description>Linux组基本介绍 在 linux 中的每个用户必须属于一个组，不能独立于组外。在 linux 中每个文件有所有者、所在组、其它组的概念 文件/目录所有者 一般为文件的</description>
    </item>
    
    <item>
      <title>13、crond任务调度(Linux)</title>
      <link>https://yiguan1573.github.io/post/113crond%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/113crond%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/</guid>
      <description>原理示意图 crontab 进行 定时任务的设置 概述 任务调度：是指系统在某个时间执行的特定的命令或程序 任务调度分类 系统工作：有些重要的工作必须周而复始地执行。</description>
    </item>
    
    <item>
      <title>9、时间日期类(Linux)</title>
      <link>https://yiguan1573.github.io/post/109%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E7%B1%BB/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/109%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E7%B1%BB/</guid>
      <description>date 指令-显示当前日期 基本语法 date （功能描述：显示当前时间） date +%Y （功能描述：显示当前年份） date +%m （功能描述：显示当前月份） date +%d （功能描述：显示当前</description>
    </item>
    
    <item>
      <title>4、关机重启注销(Linux)</title>
      <link>https://yiguan1573.github.io/post/104%E5%85%B3%E6%9C%BA%E9%87%8D%E5%90%AF%E6%B3%A8%E9%94%80/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/104%E5%85%B3%E6%9C%BA%E9%87%8D%E5%90%AF%E6%B3%A8%E9%94%80/</guid>
      <description>关机重启命令 shutdown shutdown -h now ，表示立即关机 shutdown -h 1 ，表示 1 分钟后关机 shutdown -r now: ，立即重启 halt，直接使用，效果等价于关机 reboot，重启系统 sync，</description>
    </item>
    
    <item>
      <title>5、用户管理(Linux)</title>
      <link>https://yiguan1573.github.io/post/105%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/105%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</guid>
      <description>创建用户指定密码 基本介绍 Linux系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以</description>
    </item>
    
    <item>
      <title>6、运行级别和找回root密码(Linux)</title>
      <link>https://yiguan1573.github.io/post/106%E8%BF%90%E8%A1%8C%E7%BA%A7%E5%88%AB%E5%92%8C%E6%89%BE%E5%9B%9Eroot%E5%AF%86%E7%A0%81/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/106%E8%BF%90%E8%A1%8C%E7%BA%A7%E5%88%AB%E5%92%8C%E6%89%BE%E5%9B%9Eroot%E5%AF%86%E7%A0%81/</guid>
      <description>指令运行级别 运行级别说明 0：关机 1：单用户【找回丢失密码】 2：多用户状态没有网络服务 3：多用户状态有网络服务 4：系统未使用保留给用户 5：图形</description>
    </item>
    
    <item>
      <title>7、帮助指令(Linux)</title>
      <link>https://yiguan1573.github.io/post/107%E5%B8%AE%E5%8A%A9%E6%8C%87%E4%BB%A4/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/107%E5%B8%AE%E5%8A%A9%E6%8C%87%E4%BB%A4/</guid>
      <description>使用man获得帮助信息 基本语法 man [命令或配置文件]（功能描述：获得帮助信息） help指令 基本语法 help 命令 （功能描述：获得 shell 内置命令的帮助信息）</description>
    </item>
    
    <item>
      <title>8、文件目录类(Linux)</title>
      <link>https://yiguan1573.github.io/post/108%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E7%B1%BB/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/108%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E7%B1%BB/</guid>
      <description>pwd指令 基本语法 pwd 功能描述：显示当前工作目录的绝对路径 ls指令 基本语法 ls [选项] [目录或是文件] -a，显示当前目录所有的文件和目录，包括隐</description>
    </item>
    
    <item>
      <title>21、DOM查询(JS)</title>
      <link>https://yiguan1573.github.io/post/21dom%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/21dom%E6%9F%A5%E8%AF%A2/</guid>
      <description>通过具体的元素节点来查询 元素.getElementsByTagName()，通过标签名查询当前元素的指定后代元素 元素.childNodes，</description>
    </item>
    
    <item>
      <title>22、DOM增删(JS)</title>
      <link>https://yiguan1573.github.io/post/22dom%E5%A2%9E%E5%88%A0/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/22dom%E5%A2%9E%E5%88%A0/</guid>
      <description>DOM修改 document.createElement()，可以根据标签名创建一个元素节点对象 document.createTextNode</description>
    </item>
    
    <item>
      <title>15、Date对象(JS)</title>
      <link>https://yiguan1573.github.io/post/15date%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/15date%E5%AF%B9%E8%B1%A1/</guid>
      <description>Data对象创建 日期的对象，在JS中通过Date对象来表示一个时间 创建一个当前的时间对象 var d = new Date(); console.log(d);//Thu Feb 13 2020 16:56:50 GMT+0800 (中国标准时间) 创建一个指定的</description>
    </item>
    
    <item>
      <title>16、Math(JS)</title>
      <link>https://yiguan1573.github.io/post/16math/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/16math/</guid>
      <description>简介 Math属于一个工具类，它不需要我们创建对象，它里边封装了属性运算相关的常量和方法，我们可以直接使用它来进行数学运算相关的操作 方法 Mat</description>
    </item>
    
    <item>
      <title>17、包装类(JS)</title>
      <link>https://yiguan1573.github.io/post/17%E5%8C%85%E8%A3%85%E7%B1%BB/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/17%E5%8C%85%E8%A3%85%E7%B1%BB/</guid>
      <description>在JS中为我们提供了三个包装类：String() Boolean() Number()，通过这三个包装类可以创建基本数据类型的对象 var num = new Number(2); var str = new String(&amp;quot;hello&amp;quot;); var bool = new Boolean(true);</description>
    </item>
    
    <item>
      <title>18、字符串的方法(JS)</title>
      <link>https://yiguan1573.github.io/post/18%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/18%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>在底层字符串都是以字符数组的形式保存的 length，获取字符串的长度 var str=&amp;quot;hello world&amp;quot;; console.log(str.length); console.log(str[4]); charAt()，根据索引获取指定的字符 charCodeAt(</description>
    </item>
    
    <item>
      <title>19、正则表达式(JS)</title>
      <link>https://yiguan1573.github.io/post/19%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/19%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>正则表达式的简介 正则用来定义一些字符串的规则，程序可以根据这些规则来判断一个字符串是否符合规则，也可以将一个字符串中符合规则的内容提取出来 创</description>
    </item>
    
    <item>
      <title>20、DOM(JS)</title>
      <link>https://yiguan1573.github.io/post/20dom/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/20dom/</guid>
      <description>DOM（Document Object Model）简介 文档对象模型，通过DOM可以来任意来修改网页中各个内容 文档——指网页，一个网页就是一个文档 对象——</description>
    </item>
    
    <item>
      <title>14、函数的方法(JS)</title>
      <link>https://yiguan1573.github.io/post/14%E5%87%BD%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/14%E5%87%BD%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>call()和apply() 当对函数调用call()和apply()都会调用函数执行 function fun(){ alert(this); } fun.apply(); fun.call(); fun(); var obj={}; fun.apply(obj); fun.call(obj); 通过两个方法可以直接调用函数，并且</description>
    </item>
    
    <item>
      <title>10、函数2(JS)</title>
      <link>https://yiguan1573.github.io/post/10%E5%87%BD%E6%95%B02/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/10%E5%87%BD%E6%95%B02/</guid>
      <description>使用工厂方法创建对象 使用工厂方法创建的对象，使用的构造函数都是Object，所以创建的对象都是Object这个类型，导致我们无法区分多种不同</description>
    </item>
    
    <item>
      <title>11、toString()(JS)</title>
      <link>https://yiguan1573.github.io/post/11tostring/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/11tostring/</guid>
      <description>toString() 当我们直接在页面中打印一个对象时，实际上是输出对象的toString()方法的返回值 function Person(name,age){ this.name = name; this.age = age; } var per=new Person(&amp;quot;孙悟空</description>
    </item>
    
    <item>
      <title>12、垃圾回收(JS)</title>
      <link>https://yiguan1573.github.io/post/12%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/12%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</guid>
      <description>垃圾回收（GC） 程序运行过程中会产生垃圾，垃圾积攒过多，会导致程序运行的速度变慢 当一个对象没有设置任何变量或属性对它进行引用，此时将无法操作</description>
    </item>
    
    <item>
      <title>13、数组(JS)</title>
      <link>https://yiguan1573.github.io/post/13%E6%95%B0%E7%BB%84/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/13%E6%95%B0%E7%BB%84/</guid>
      <description>数组简介 数组也是一个对象 创建数组对象 var arr = new Array();//或者var arr = []; 向数组中添加元素 数组对象[索引] = 值; arr[0] = 123; arr[1] = &amp;quot;hello&amp;quot;; 使用len</description>
    </item>
    
    <item>
      <title>3、vi和vim(Linux)</title>
      <link>https://yiguan1573.github.io/post/103vi%E5%92%8Cvim/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/103vi%E5%92%8Cvim/</guid>
      <description>vi和vim介绍 所有的 Linux 系统都会内建 vi 文本编辑器，Vim 具有程序编辑的能力，可以看做是 Vi 的增强版本，可以主动的以字体颜色辨别语法的正确性，方</description>
    </item>
    
    <item>
      <title>1、CentOS基础(Linux)</title>
      <link>https://yiguan1573.github.io/post/101centos%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/101centos%E5%9F%BA%E7%A1%80/</guid>
      <description>虚拟机的网络连接三种形式 桥连接：Linux可以和其他的系统通信，但是可能造成IP冲突 NAT：Linux可以访问外网，不会造成IP地址冲突 主机</description>
    </item>
    
    <item>
      <title>2、远程操作(Linux)</title>
      <link>https://yiguan1573.github.io/post/102%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/102%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C/</guid>
      <description>远程登录Linux需要的软件 XShell远程连接配置 XFTP 是一个基于 windows 平台的功能强大的 SFTP、FTP 文件传输软件。使用了 Xftp 以后，windows</description>
    </item>
    
    <item>
      <title>9、函数1(JS)</title>
      <link>https://yiguan1573.github.io/post/9%E5%87%BD%E6%95%B01/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/9%E5%87%BD%E6%95%B01/</guid>
      <description>函数（function）的简介 函数也是对象，函数中可以封装一些功能（代码） 创建并调用一个函数对象 var fun = new Function(&amp;quot;con</description>
    </item>
    
    <item>
      <title>7、流程控制语句(JS)</title>
      <link>https://yiguan1573.github.io/post/7%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/7%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</guid>
      <description>条件判断语句 条件判断语句也称为if语句 语法一： if(条件表达式){ 语句... } - 执行流程： if语句执行时，会先对条件表达式进行求值判断， 如果</description>
    </item>
    
    <item>
      <title>8、对象(JS)</title>
      <link>https://yiguan1573.github.io/post/8%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/8%E5%AF%B9%E8%B1%A1/</guid>
      <description>对象的简介 对象是一种复合数据类型，在对象中可以保存多个不同数据类型的属性 对象的分类 内建对象：由MS标准定义的对象，在任何的ES的实现中都可以</description>
    </item>
    
    <item>
      <title>4、强制类型转换(JS)</title>
      <link>https://yiguan1573.github.io/post/4%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/4%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</guid>
      <description>将其他的数据类型转换为Strig 调用被转换数据类型的toString()方法，该方法不会影响到原变量，它会将转换的结果返回；但是null和u</description>
    </item>
    
    <item>
      <title>5、运算符(JS)</title>
      <link>https://yiguan1573.github.io/post/5%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/5%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>算数运算符 字符串相加相当于将两个字符串拼接为一个字符串，与Java相同 任何值与字符串做加法运算都会被转换为字符串后再拼串 var a = &amp;quot;123&amp;quot; + 1;//结</description>
    </item>
    
    <item>
      <title>6、Unicode编码表(JS)</title>
      <link>https://yiguan1573.github.io/post/6unicode%E7%BC%96%E7%A0%81%E8%A1%A8/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/6unicode%E7%BC%96%E7%A0%81%E8%A1%A8/</guid>
      <description>在字符串中使用转义字符输入Unicode编码： \u四位编码 console.log(&amp;quot;\u0031&amp;quot;); 在网页中使用Unicode编码： &amp;amp;#编码 这里的编码为10进制数 &amp;lt;h1&amp;gt;&amp;amp;#2340&amp;lt;/h1&amp;gt;</description>
    </item>
    
    <item>
      <title>3、基本数据类型(JS)</title>
      <link>https://yiguan1573.github.io/post/3%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/3%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>数据类型 数据类型指的就是字面量的类型 在JS中一共六种数据类型 Number 数值 Boolean 布尔值 Null 空值 Undefined 未定义 Object 对象 String 字符串 其中String、Number、Boo</description>
    </item>
    
    <item>
      <title>2、变量(JS)</title>
      <link>https://yiguan1573.github.io/post/2%E5%8F%98%E9%87%8F/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/2%E5%8F%98%E9%87%8F/</guid>
      <description>字面量和变量 字面量 都是一些不可改变的量，比如：1 2 3，字面量可以直接使用字面量 变量 可以保存字面量，一般使用变量保存字面量 声明变量 在JS中使用</description>
    </item>
    
    <item>
      <title>1、JS语法基础(JS)</title>
      <link>https://yiguan1573.github.io/post/1js%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1js%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</guid>
      <description>JS的Hello World 该函数控制浏览器弹出警告框 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt; &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; alert(&amp;quot;Hello World&amp;quot;); &amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 该函数可以向body中输出内容 document.write(&amp;quot;Hello World&amp;quot;); 该函数可以向控制台输出一个内容</description>
    </item>
    
  </channel>
</rss>