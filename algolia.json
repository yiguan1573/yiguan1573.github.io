[{"author":null,"categories":["学习"],"content":"","date":1669939200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1669939200,"objectID":"d3ff69cda81d6c228cb9700addbaf4ed","permalink":"https://yiguan1573.github.io/post/1106%E5%9F%BA%E4%BA%8Emysql%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","publishdate":"2022-12-02T00:00:00Z","readingtime":1,"relpermalink":"/post/1106%E5%9F%BA%E4%BA%8Emysql%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","section":"post","summary":"基于MysQL关系型数据库实现:唯一键索引 redis:基于Key唯一性 zk:基于znode节点唯一性 简单实现 建表 思路 实现 问题 服务器宕机防死锁","tags":["分布式锁"],"title":"4、基于MySQL实现分布式锁（分布式锁）","type":"post","url":"/post/1106%E5%9F%BA%E4%BA%8Emysql%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","weight":0,"wordcount":132},{"author":null,"categories":["学习"],"content":"","date":1669852800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1669852800,"objectID":"aaa170a3f9be5e6b99b70dfc578dac97","permalink":"https://yiguan1573.github.io/post/1105%E5%9F%BA%E4%BA%8Ezookeeper%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","publishdate":"2022-12-01T00:00:00Z","readingtime":7,"relpermalink":"/post/1105%E5%9F%BA%E4%BA%8Ezookeeper%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","section":"post","summary":"zookeeper回顾 官方客户端 引入依赖 \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.apache.zookeeper\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;zookeeper\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;3.5.7\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; 代码 public class ZKTest { public static void main(String[] args) { ZooKeeper zooKeeper = null; //zookeeper获取连接是一个慢启动的过程 CountDownLatch countDownLatch = new CountDownLatch(1);","tags":["分布式锁"],"title":"3、基于zookeeper实现分布式锁（分布式锁）","type":"post","url":"/post/1105%E5%9F%BA%E4%BA%8Ezookeeper%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","weight":0,"wordcount":3358},{"author":null,"categories":["学习"],"content":"","date":1669766400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":4400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1669766400,"objectID":"5e45c2a362707f330d447c78ef8612aa","permalink":"https://yiguan1573.github.io/post/1104%E5%9F%BA%E4%BA%8Eredis%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","publishdate":"2022-11-30T00:00:00Z","readingtime":9,"relpermalink":"/post/1104%E5%9F%BA%E4%BA%8Eredis%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","section":"post","summary":"redis中的超卖现象 设置库存5000 修改代码 @Service public class StockService { @Autowired StockMapper stockMapper; @Autowired RedisTemplate redisTemplate; private ReentrantLock lock = new ReentrantLock(); // @Transactional public void reduce(){ //1.查询库存 Integer stock = (Integer) redisTemplate.opsForValue().get(\u0026#34;stock\u0026#34;); //2.判断库存是否充足","tags":["分布式锁"],"title":"2、基于redis实现分布式锁（分布式锁）","type":"post","url":"/post/1104%E5%9F%BA%E4%BA%8Eredis%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","weight":0,"wordcount":4386},{"author":null,"categories":["学习"],"content":"","date":1669680000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1669680000,"objectID":"71429f6b6a7649ecb66771b514130a48","permalink":"https://yiguan1573.github.io/post/1103jvm%E9%94%81%E5%92%8Cmysql%E9%94%81/","publishdate":"2022-11-29T00:00:00Z","readingtime":4,"relpermalink":"/post/1103jvm%E9%94%81%E5%92%8Cmysql%E9%94%81/","section":"post","summary":"搭建简单的库存项目 @Data public class Stock { private Integer stock = 5000; } //StockService为单例对象，所以里面创建的stock对象也为单例 @Service public class StockService { private Stock stock = new Stock(); public","tags":["分布式锁"],"title":"1、JVM锁和MySQL锁（分布式锁）","type":"post","url":"/post/1103jvm%E9%94%81%E5%92%8Cmysql%E9%94%81/","weight":0,"wordcount":1534},{"author":null,"categories":["学习"],"content":"","date":1669593600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1669593600,"objectID":"14a51aaba25128dadb282c013b3bbffb","permalink":"https://yiguan1573.github.io/post/1102dubbo%E6%96%B0%E7%89%88%E5%92%8C%E8%A1%A5%E5%85%85/","publishdate":"2022-11-28T00:00:00Z","readingtime":4,"relpermalink":"/post/1102dubbo%E6%96%B0%E7%89%88%E5%92%8C%E8%A1%A5%E5%85%85/","section":"post","summary":"补充和参考 远程调用 Dubbo 与 Feign 的区别 官方文档 spring-cloud-starter-dubbo dubbo-spring-boot-starter spring-cloud-starter-dubbo和dubbo-spring-boot-star","tags":["dubbo"],"title":"2、dubbo新版和补充（dubbo）","type":"post","url":"/post/1102dubbo%E6%96%B0%E7%89%88%E5%92%8C%E8%A1%A5%E5%85%85/","weight":0,"wordcount":1835},{"author":null,"categories":["学习"],"content":"","date":1669507200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":4000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1669507200,"objectID":"cc329e3efe5181dfa509bf0a285a98a6","permalink":"https://yiguan1573.github.io/post/1101dubbo%E6%97%A7%E7%89%88/","publishdate":"2022-11-27T00:00:00Z","readingtime":8,"relpermalink":"/post/1101dubbo%E6%97%A7%E7%89%88/","section":"post","summary":"dubbo核心概念 简介 Apache Dubbo (incubating) |ˈdʌbəʊ| 是一款高性能、轻量级的开源Java RPC框架，它提供了三大核心能力：面向接口的远程方法调用，智能","tags":["dubbo"],"title":"1、dubbo旧版（dubbo）","type":"post","url":"/post/1101dubbo%E6%97%A7%E7%89%88/","weight":0,"wordcount":3990},{"author":null,"categories":["学习"],"content":"","date":1669420800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":13400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1669420800,"objectID":"7fbb66e8d9490cd1f5353c98478aae5f","permalink":"https://yiguan1573.github.io/post/1096mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85mysql8%E5%85%B6%E4%BB%96%E6%96%B0%E7%89%B9%E6%80%A7/","publishdate":"2022-11-26T00:00:00Z","readingtime":27,"relpermalink":"/post/1096mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85mysql8%E5%85%B6%E4%BB%96%E6%96%B0%E7%89%B9%E6%80%A7/","section":"post","summary":"第18章_MySQL8其他新特性 1. MySQL8新特性概述 MySQL从5.7版本直接跳跃发布了8.0版本 ，可见这是一个令人兴奋的里程碑版本。M","tags":["mysql"],"title":"26、mysql基础补充(MySQL8其他新特性)","type":"post","url":"/post/1096mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85mysql8%E5%85%B6%E4%BB%96%E6%96%B0%E7%89%B9%E6%80%A7/","weight":0,"wordcount":13394},{"author":null,"categories":["学习"],"content":"","date":1669334400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1669334400,"objectID":"f3746843dce4e01f29db95101b37211f","permalink":"https://yiguan1573.github.io/post/1095mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E8%A7%A6%E5%8F%91%E5%99%A8/","publishdate":"2022-11-25T00:00:00Z","readingtime":6,"relpermalink":"/post/1095mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E8%A7%A6%E5%8F%91%E5%99%A8/","section":"post","summary":"第17章_触发器 在实际开发中，我们经常会遇到这样的情况：有 2 个或者多个相互关联的表，如 商品信息 和 库存信息 分 别存放在 2 个不同的数据表中，我们在","tags":["mysql"],"title":"25、mysql基础补充(触发器)","type":"post","url":"/post/1095mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E8%A7%A6%E5%8F%91%E5%99%A8/","weight":0,"wordcount":2748},{"author":null,"categories":["学习"],"content":"","date":1669248000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":9400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1669248000,"objectID":"741e9d2084373c61ed86b8f78b90cfe1","permalink":"https://yiguan1573.github.io/post/1094mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E5%8F%98%E9%87%8F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E4%B8%8E%E6%B8%B8%E6%A0%87/","publishdate":"2022-11-24T00:00:00Z","readingtime":19,"relpermalink":"/post/1094mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E5%8F%98%E9%87%8F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E4%B8%8E%E6%B8%B8%E6%A0%87/","section":"post","summary":"第16章_变量、流程控制与游标 在MySQL数据库的存储过程和函数中，可以使用变量来存储查询或计算的中间结果数据，或者输出最终的结果数据。 1. 变","tags":["mysql"],"title":"24、mysql基础补充(变量、流程控制与游标)","type":"post","url":"/post/1094mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E5%8F%98%E9%87%8F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E4%B8%8E%E6%B8%B8%E6%A0%87/","weight":0,"wordcount":9383},{"author":null,"categories":["学习"],"content":"","date":1669161600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":5300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1669161600,"objectID":"809e8e074c9c48d00b52e9b3a3694006","permalink":"https://yiguan1573.github.io/post/1093mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E4%B8%8E%E5%87%BD%E6%95%B0/","publishdate":"2022-11-23T00:00:00Z","readingtime":11,"relpermalink":"/post/1093mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E4%B8%8E%E5%87%BD%E6%95%B0/","section":"post","summary":"第15章_存储过程与函数 MySQL从5.0版本开始支持存储过程和函数。存储过程和函数能够将复杂的SQL逻辑封装在一起，应用程 序无须关注存储过","tags":["mysql"],"title":"23、mysql基础补充(存储过程与函数)","type":"post","url":"/post/1093mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E4%B8%8E%E5%87%BD%E6%95%B0/","weight":0,"wordcount":5269},{"author":null,"categories":["学习"],"content":"","date":1669075200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1669075200,"objectID":"d2239b94b6d33ab72a62fce121006ebc","permalink":"https://yiguan1573.github.io/post/1092mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E8%A7%86%E5%9B%BE/","publishdate":"2022-11-22T00:00:00Z","readingtime":6,"relpermalink":"/post/1092mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E8%A7%86%E5%9B%BE/","section":"post","summary":"第14章_视图 1. 常见的数据库对象 对象 描述 表(TABLE) 表是存储数据的逻辑单元，以行和列的形式存在，列就是字段，行就是记录 数据字典 就是系统表","tags":["mysql"],"title":"22、mysql基础补充(视图)","type":"post","url":"/post/1092mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E8%A7%86%E5%9B%BE/","weight":0,"wordcount":2998},{"author":null,"categories":["学习"],"content":"","date":1668988800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":15400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1668988800,"objectID":"587ca2c313afb78874dc0c88eb60e1aa","permalink":"https://yiguan1573.github.io/post/1091mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85ddl/","publishdate":"2022-11-21T00:00:00Z","readingtime":31,"relpermalink":"/post/1091mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85ddl/","section":"post","summary":"第十章_创建和管理表 1. 基础知识 1) 标识符命名规则 数据库名、表名不得超过30个字符，变量名限制为29个 必须只能包含 A–Z, a–z, 0–9, _共6","tags":["mysql"],"title":"21、mysql基础补充(DDL和数据类型)","type":"post","url":"/post/1091mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85ddl/","weight":0,"wordcount":15337},{"author":null,"categories":["学习"],"content":"","date":1668902400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":17300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1668902400,"objectID":"cdc5dbb71aa36ad1035973cb5d7a56c2","permalink":"https://yiguan1573.github.io/post/1090mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85dml/","publishdate":"2022-11-20T00:00:00Z","readingtime":35,"relpermalink":"/post/1090mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85dml/","section":"post","summary":"导入表的问题 导入数据时外键约束问题 数据导入指令： source d:\\xxx.sql 通过FOREIGN_KEY_CHECKS解决，用法如下： set FOREIGN_KEY_CHECKS=0; #在导入前设置为不检查外键约","tags":["mysql"],"title":"20、mysql基础补充(DML)","type":"post","url":"/post/1090mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85dml/","weight":0,"wordcount":17293},{"author":null,"categories":["学习"],"content":"","date":1667520000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":4100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1667520000,"objectID":"5ff33318fe5953ec98bac48dba2924eb","permalink":"https://yiguan1573.github.io/post/1099%E8%A7%86%E9%A2%91%E5%BC%B9%E5%B9%95%E9%A1%B9%E7%9B%AE/","publishdate":"2022-11-04T00:00:00Z","readingtime":9,"relpermalink":"/post/1099%E8%A7%86%E9%A2%91%E5%BC%B9%E5%B9%95%E9%A1%B9%E7%9B%AE/","section":"post","summary":"使用vueBaberrage实现网页弹幕报错 If you want to include a polyfill, you need to: - add a fallback 'resolve.fallback: { \u0026quot;timers\u0026quot;: require.resolve(\u0026quot;timers-browserify\u0026quot;) }' - install 'timers-browserify' 解决办法 监听video全屏事件 document.addEventListener('webkitfullscreenchange', () =\u0026gt; { if (checkIsFullScreen()) { } else { }","tags":["项目"],"title":"视频弹幕项目","type":"post","url":"/post/1099%E8%A7%86%E9%A2%91%E5%BC%B9%E5%B9%95%E9%A1%B9%E7%9B%AE/","weight":0,"wordcount":4060},{"author":null,"categories":["学习"],"content":"","date":1665792000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1665792000,"objectID":"09d19fe945cb92769bc1125986113d18","permalink":"https://yiguan1573.github.io/post/1098springsecurity%E5%92%8Coauth2%E8%B8%A9%E5%9D%91%E9%9B%86%E5%90%88/","publishdate":"2022-10-15T00:00:00Z","readingtime":2,"relpermalink":"/post/1098springsecurity%E5%92%8Coauth2%E8%B8%A9%E5%9D%91%E9%9B%86%E5%90%88/","section":"post","summary":"java.lang.IllegalArgumentException: There is no PasswordEncoder mapped for the id \u0026ldquo;null\u0026rdquo; auth2配置授权服务报错 @Override public void configure(ClientDetailsServiceConfigurer clients) throws Exception { //配置两个客户端,一个用于password认证一个用于client认证 clients.inMemory().withClient(\u0026#34;client_2\u0026#34;) .authorizedGrantTypes(\u0026#34;password\u0026#34;,\u0026#34;refresh_token\u0026#34;) .accessTokenValiditySeconds(3600)","tags":["SpringSecurity","项目"],"title":"6、SpringSecurity和oauth2踩坑集合（SpringSecurity）","type":"post","url":"/post/1098springsecurity%E5%92%8Coauth2%E8%B8%A9%E5%9D%91%E9%9B%86%E5%90%88/","weight":0,"wordcount":525},{"author":null,"categories":["学习"],"content":"","date":1665100800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1665100800,"objectID":"4242de8f1856e0c6eb8f014c9223bfd6","permalink":"https://yiguan1573.github.io/post/884dcoker%E5%AE%89%E8%A3%85%E5%91%BD%E4%BB%A4/","publishdate":"2022-10-07T00:00:00Z","readingtime":1,"relpermalink":"/post/884dcoker%E5%AE%89%E8%A3%85%E5%91%BD%E4%BB%A4/","section":"post","summary":"Redis docker run --restart=always --log-opt max-size=100m --log-opt max-file=2 -p 6379:6379 --name myredis -v /opt/redis/redis.conf:/etc/redis/redis.conf -v /opt/redis/data:/data -d redis redis-server /etc/redis/redis.conf --appendonly yes --requirepass 13594859505LW redis.conf文件 # bind 192.168.1.100 10.0.0.1 # bind 127.0.0.1 ::1 #bind 127.0.0.1 protected-mode no port 6379 tcp-backlog 511 requirepass 13594859505LW timeout 0 tcp-keepalive 300 daemonize no supervised no pidfile /var/run/redis_6379.pid loglevel notice logfile \u0026quot;\u0026quot; databases 16","tags":["java","Docker"],"title":"3、Doker安装命令（Docker）","type":"post","url":"/post/884dcoker%E5%AE%89%E8%A3%85%E5%91%BD%E4%BB%A4/","weight":0,"wordcount":180},{"author":null,"categories":["学习"],"content":"","date":1664755200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":11300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1664755200,"objectID":"3c330f29363f4a87658c4c07cb3962ea","permalink":"https://yiguan1573.github.io/post/1089%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/","publishdate":"2022-10-03T00:00:00Z","readingtime":23,"relpermalink":"/post/1089%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/","section":"post","summary":"1. 物理备份与逻辑备份 **物理备份：**备份数据文件，转储数据库物理文件到某一目录。物理备份恢复速度比较快，但占用空间比较大，MySQL中可以","tags":["mysql"],"title":"19、数据库备份与恢复（日志与备份篇）","type":"post","url":"/post/1089%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/","weight":0,"wordcount":11230},{"author":null,"categories":["学习"],"content":"","date":1664668800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":6900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1664668800,"objectID":"110ba95e717ac41eddaa53f37b98abad","permalink":"https://yiguan1573.github.io/post/1088%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/","publishdate":"2022-10-02T00:00:00Z","readingtime":14,"relpermalink":"/post/1088%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/","section":"post","summary":"1. 主从复制概述 1.1 如何提升数据库并发能力 在实际工作中，我们常常将Redis作为缓存与MySQL配合来使用，当有请求的时候，首先会从缓存中进行查","tags":["mysql"],"title":"18、主从复制（日志与备份篇）","type":"post","url":"/post/1088%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/","weight":0,"wordcount":6851},{"author":null,"categories":["学习"],"content":"","date":1664582400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":8200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1664582400,"objectID":"108c12af88ab85b242d5dcc17597c63a","permalink":"https://yiguan1573.github.io/post/1087%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A5%E5%BF%97/","publishdate":"2022-10-01T00:00:00Z","readingtime":17,"relpermalink":"/post/1087%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A5%E5%BF%97/","section":"post","summary":"千万不要小看日志。很多看似奇怪的问题，答案往往就藏在日志里。很多情况下，只有通过查看日志才 能发现问题的原因，真正解决问题。所以，一定要学会查","tags":["mysql"],"title":"17、其他数据库日志（日志与备份篇）","type":"post","url":"/post/1087%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A5%E5%BF%97/","weight":0,"wordcount":8100},{"author":null,"categories":["学习"],"content":"","date":1664409600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":5500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1664409600,"objectID":"c45841b01db06a405abb559e2a962b58","permalink":"https://yiguan1573.github.io/post/1086%E5%A4%9A%E7%89%88%E6%9C%AC%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6mvcc/","publishdate":"2022-09-29T00:00:00Z","readingtime":11,"relpermalink":"/post/1086%E5%A4%9A%E7%89%88%E6%9C%AC%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6mvcc/","section":"post","summary":"1. 什么是MVCC MVCC （Multiversion Concurrency Control），多版本并发控制。顾名思义，MVCC 是通过数据行的多个版本管理来实现数据库的 并","tags":["mysql"],"title":"16、多版本并发控制（事务篇）","type":"post","url":"/post/1086%E5%A4%9A%E7%89%88%E6%9C%AC%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6mvcc/","weight":0,"wordcount":5439},{"author":null,"categories":["学习"],"content":"","date":1664323200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":17600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1664323200,"objectID":"961ddbbc695c38d24910fe0d88cf3df8","permalink":"https://yiguan1573.github.io/post/1085%E9%94%81/","publishdate":"2022-09-28T00:00:00Z","readingtime":36,"relpermalink":"/post/1085%E9%94%81/","section":"post","summary":"1. 概述 在数据库中，除传统的计算资源（如CPU、RAM、I/O等）的争用以外，数据也是一种供许多用户共享的 资源。为保证数据的一致性，需要对 并发","tags":["mysql"],"title":"15、锁（事务篇）","type":"post","url":"/post/1085%E9%94%81/","weight":0,"wordcount":17588},{"author":null,"categories":["学习"],"content":"","date":1664236800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":8200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1664236800,"objectID":"eb425e2bf509b3afe949e23b6c84e91d","permalink":"https://yiguan1573.github.io/post/1084mysql%E4%BA%8B%E5%8A%A1%E6%97%A5%E5%BF%97/","publishdate":"2022-09-27T00:00:00Z","readingtime":17,"relpermalink":"/post/1084mysql%E4%BA%8B%E5%8A%A1%E6%97%A5%E5%BF%97/","section":"post","summary":"事务有4种特性：原子性、一致性、隔离性和持久性。那么事务的四种特性到底是基于什么机制实现呢？ 事务的隔离性由 锁机制 实现。 而事务的原子性、一致性","tags":["mysql"],"title":"14、MySQL事务日志（事务篇）","type":"post","url":"/post/1084mysql%E4%BA%8B%E5%8A%A1%E6%97%A5%E5%BF%97/","weight":0,"wordcount":8148},{"author":null,"categories":["学习"],"content":"","date":1664150400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":8100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1664150400,"objectID":"44ed90a5605376bb31aa3b6245001862","permalink":"https://yiguan1573.github.io/post/1083%E4%BA%8B%E5%8A%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/","publishdate":"2022-09-26T00:00:00Z","readingtime":17,"relpermalink":"/post/1083%E4%BA%8B%E5%8A%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/","section":"post","summary":"1. 数据库事务概述 1.1 存储引擎支持情况 SHOW ENGINES 命令来查看当前 MySQL 支持的存储引擎都有哪些，以及这些存储引擎是否支持事务。 能看出在 MySQL 中，只有InnoDB 是","tags":["mysql"],"title":"13、事务基础知识（事务篇）","type":"post","url":"/post/1083%E4%BA%8B%E5%8A%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/","weight":0,"wordcount":8079},{"author":null,"categories":["学习"],"content":"","date":1664064000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":9100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1664064000,"objectID":"d1458aafad88a77e61d821f87c3d0d17","permalink":"https://yiguan1573.github.io/post/1082%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B6%E4%BB%96%E8%B0%83%E4%BC%98%E7%AD%96%E7%95%A5/","publishdate":"2022-09-25T00:00:00Z","readingtime":19,"relpermalink":"/post/1082%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B6%E4%BB%96%E8%B0%83%E4%BC%98%E7%AD%96%E7%95%A5/","section":"post","summary":"1. 数据库调优的措施 1.1 调优的目标 尽可能节省系统资源 ，以便系统可以提供更大负荷的服务。（吞吐量更大） 合理的结构设计和参数调整，以提高用户操作响应","tags":["mysql"],"title":"12、数据库其他调优策略（索引与调优篇）","type":"post","url":"/post/1082%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B6%E4%BB%96%E8%B0%83%E4%BC%98%E7%AD%96%E7%95%A5/","weight":0,"wordcount":9083},{"author":null,"categories":["学习"],"content":"","date":1663977600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":17200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1663977600,"objectID":"5b7bf9fe97d328d64c0dbff06d82433c","permalink":"https://yiguan1573.github.io/post/1081%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/","publishdate":"2022-09-24T00:00:00Z","readingtime":35,"relpermalink":"/post/1081%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/","section":"post","summary":"1. 为什么需要数据库设计 2. 范 式 2.1 范式简介 在关系型数据库中，关于数据表设计的基本原则、规则就称为范式。可以理解为，一张数据表的设计结 构需要满足的","tags":["mysql"],"title":"11、数据库的设计规范（索引与调优篇）","type":"post","url":"/post/1081%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/","weight":0,"wordcount":17154},{"author":null,"categories":["学习"],"content":"","date":1663891200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":18100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1663891200,"objectID":"d8b444d8e28ce477c7eb73b72e572b10","permalink":"https://yiguan1573.github.io/post/1080%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E4%B8%8E%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/","publishdate":"2022-09-23T00:00:00Z","readingtime":36,"relpermalink":"/post/1080%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E4%B8%8E%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/","section":"post","summary":"都有哪些维度可以进行数据库调优？简言之： 索引失效、没有充分利用到索引——建立索引 关联查询太多JOIN（设计缺陷或不得已的需求）——SQL优化","tags":["mysql"],"title":"10、索引优化与查询优化（索引与调优篇）","type":"post","url":"/post/1080%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E4%B8%8E%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/","weight":0,"wordcount":18010},{"author":null,"categories":["学习"],"content":"","date":1663804800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":15300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1663804800,"objectID":"3afa8a0a47432a6ea90f812d55584621","permalink":"https://yiguan1573.github.io/post/1079%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/","publishdate":"2022-09-22T00:00:00Z","readingtime":31,"relpermalink":"/post/1079%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/","section":"post","summary":"在数据库调优中，我们的目标是 响应时间更快, 吞吐量更大 。利用宏观的监控工具和微观的日志分析可以帮我们快速找到调优的思路和方式。 1. 数据库服务器的","tags":["mysql"],"title":"9、性能分析工具的使用（索引与调优篇）","type":"post","url":"/post/1079%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/","weight":0,"wordcount":15288},{"author":null,"categories":["学习"],"content":"","date":1663718400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":8900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1663718400,"objectID":"c655ec2ba62ba347df4511c19a6df3da","permalink":"https://yiguan1573.github.io/post/1078%E7%B4%A2%E5%BC%95%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/","publishdate":"2022-09-21T00:00:00Z","readingtime":18,"relpermalink":"/post/1078%E7%B4%A2%E5%BC%95%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/","section":"post","summary":"1. 索引的声明与使用 1.1 索引的分类 MySQL的索引包括普通索引、唯一性索引、全文索引、单列索引、多列索引和空间索引等。 从 功能逻辑 上说，索引主要有","tags":["mysql"],"title":"8、索引的创建与设计原则（索引与调优篇）","type":"post","url":"/post/1078%E7%B4%A2%E5%BC%95%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/","weight":0,"wordcount":8890},{"author":null,"categories":["学习"],"content":"","date":1663632000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1663632000,"objectID":"0c75cb64563fa9d136e1cb49686eef17","permalink":"https://yiguan1573.github.io/post/1077innodb%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/","publishdate":"2022-09-20T00:00:00Z","readingtime":5,"relpermalink":"/post/1077innodb%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/","section":"post","summary":"1. 数据库的存储结构：页 1.1 磁盘与内存交互基本单位：页 1.2 页结构概述 1.3 页的大小 不同的数据库管理系统（简称DBMS）的页大小不同。比如在 MySQL 的 InnoDB 存储引","tags":["mysql"],"title":"7、InnoDB数据存储结构（索引与调优篇）","type":"post","url":"/post/1077innodb%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/","weight":0,"wordcount":2367},{"author":null,"categories":["学习"],"content":"","date":1663545600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":12500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1663545600,"objectID":"5fd888acc9a93da0859e577aed5837a2","permalink":"https://yiguan1573.github.io/post/1076%E7%B4%A2%E5%BC%95%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","publishdate":"2022-09-19T00:00:00Z","readingtime":25,"relpermalink":"/post/1076%E7%B4%A2%E5%BC%95%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","section":"post","summary":"1. 为什么使用索引 索引是存储引擎用于快速找到数据记录的一种数据结构，就好比一本教科书的目录部分，通过目录中找到对应文章的页码，便可快速定位到需","tags":["mysql"],"title":"6、索引的数据结构（索引与调优篇）","type":"post","url":"/post/1076%E7%B4%A2%E5%BC%95%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","weight":0,"wordcount":12496},{"author":null,"categories":["学习"],"content":"","date":1663459200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1663459200,"objectID":"805ff323effb718cea78904af8d864f0","permalink":"https://yiguan1573.github.io/post/1075%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/","publishdate":"2022-09-18T00:00:00Z","readingtime":5,"relpermalink":"/post/1075%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/","section":"post","summary":"1. 查看存储引擎 查看mysql提供什么存储引擎 show engines; 2. 设置系统默认的存储引擎 查看默认的存储引擎 show variables like \u0026#39;%storage_engine%\u0026#39;; #或 SELECT @@default_storage_engine; 修改默认的存储引擎 如果在创建表的语","tags":["mysql"],"title":"5、存储引擎（MySQL架构篇）","type":"post","url":"/post/1075%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/","weight":0,"wordcount":2392},{"author":null,"categories":["学习"],"content":"","date":1663372800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":7800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1663372800,"objectID":"018eca626f9a0739ddeadcfaac6b5921","permalink":"https://yiguan1573.github.io/post/1074%E9%80%BB%E8%BE%91%E6%9E%B6%E6%9E%84/","publishdate":"2022-09-17T00:00:00Z","readingtime":16,"relpermalink":"/post/1074%E9%80%BB%E8%BE%91%E6%9E%B6%E6%9E%84/","section":"post","summary":"1. 逻辑架构剖析 1.1 服务器处理客户端请求 首先MySQL是典型的C/S架构，即Clinet/Server 架构，服务端程序使用的mysqld。 不论客","tags":["mysql"],"title":"4、逻辑架构（MySQL架构篇）","type":"post","url":"/post/1074%E9%80%BB%E8%BE%91%E6%9E%B6%E6%9E%84/","weight":0,"wordcount":7725},{"author":null,"categories":["学习"],"content":"","date":1663286400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1663286400,"objectID":"b04c7b250fdf5d7720537b30f9888d45","permalink":"https://yiguan1573.github.io/post/1073%E7%94%A8%E6%88%B7%E4%B8%8E%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/","publishdate":"2022-09-16T00:00:00Z","readingtime":1,"relpermalink":"/post/1073%E7%94%A8%E6%88%B7%E4%B8%8E%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/","section":"post","summary":"用户管理 1.1 登录MySQL服务器 1.2 创建用户 1.3 修改用户 1.4 删除用户 1.5 设置当前用户密码 1.6 修改其它用户密码 1.7 MySQL8密码管理(了解) 权限管理 2.1 权限","tags":["mysql"],"title":"3、用户与权限管理（MySQL架构篇）","type":"post","url":"/post/1073%E7%94%A8%E6%88%B7%E4%B8%8E%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/","weight":0,"wordcount":252},{"author":null,"categories":["学习"],"content":"","date":1663200000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1663200000,"objectID":"9bcd2344124d03e193d7e1a915d2b750","permalink":"https://yiguan1573.github.io/post/1072mysql%E7%9A%84%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95/","publishdate":"2022-09-15T00:00:00Z","readingtime":1,"relpermalink":"/post/1072mysql%E7%9A%84%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95/","section":"post","summary":"MySQL8的主要目录结构 1.1 数据库文件的存放路径 1.2 相关命令目录 1.3 配置文件目录 数据库和文件系统的关系 2.1 查看默认数据库 2.2 数据库在文件系统中的表示","tags":["mysql"],"title":"2、MySQL的数据目录（MySQL架构篇）","type":"post","url":"/post/1072mysql%E7%9A%84%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95/","weight":0,"wordcount":84},{"author":null,"categories":["学习"],"content":"","date":1663113600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1663113600,"objectID":"9bee9942af8bf24ebb4784c89e258e5c","permalink":"https://yiguan1573.github.io/post/1071linux%E4%B8%8Bmysql%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/","publishdate":"2022-09-14T00:00:00Z","readingtime":1,"relpermalink":"/post/1071linux%E4%B8%8Bmysql%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/","section":"post","summary":"安装前说明 1.1 Linux系统及工具的准备 1.2 查看是否安装过MySQL 1.3 MySQL的卸载 MySQL的Linux版安装 2.1 MySQL的4大版本 2.2 下载M","tags":["mysql"],"title":"1、Linux下MySQL的安装与使用（MySQL架构篇）","type":"post","url":"/post/1071linux%E4%B8%8Bmysql%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/","weight":0,"wordcount":358},{"author":null,"categories":["学习"],"content":"","date":1663027200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1663027200,"objectID":"e39099ecf908fdae53efabd0514aee0e","permalink":"https://yiguan1573.github.io/post/1068redis6/","publishdate":"2022-09-13T00:00:00Z","readingtime":1,"relpermalink":"/post/1068redis6/","section":"post","summary":"Redis6笔记","tags":["redis"],"title":"11、Redis6（Redis）","type":"post","url":"/post/1068redis6/","weight":0,"wordcount":8},{"author":null,"categories":["学习"],"content":"","date":1662854400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1662854400,"objectID":"53e54e98ba0444ffd962edaa872aa989","permalink":"https://yiguan1573.github.io/post/1067%E4%BD%BF%E7%94%A8oql%E8%AF%AD%E8%A8%80%E6%9F%A5%E8%AF%A2%E5%AF%B9%E8%B1%A1%E4%BF%A1%E6%81%AF/","publishdate":"2022-09-11T00:00:00Z","readingtime":2,"relpermalink":"/post/1067%E4%BD%BF%E7%94%A8oql%E8%AF%AD%E8%A8%80%E6%9F%A5%E8%AF%A2%E5%AF%B9%E8%B1%A1%E4%BF%A1%E6%81%AF/","section":"post","summary":"MAT 支持一种类似于 SQL 的查询语言 OQL（Object Query Language）。OQL 使用类 SQL 语法，可以在堆中进行对象的查找和筛选。 1. SELECT 子句 在 MAT 中，S","tags":["JVM"],"title":"27、使用OQL语言查询对象信息（JVM）","type":"post","url":"/post/1067%E4%BD%BF%E7%94%A8oql%E8%AF%AD%E8%A8%80%E6%9F%A5%E8%AF%A2%E5%AF%B9%E8%B1%A1%E4%BF%A1%E6%81%AF/","weight":0,"wordcount":755},{"author":null,"categories":["学习"],"content":"","date":1662768000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":4700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1662768000,"objectID":"af25ccc4f53a4fc0e63741535df67398","permalink":"https://yiguan1573.github.io/post/1066%E6%B5%85%E5%A0%86%E6%B7%B1%E5%A0%86%E4%B8%8E%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2/","publishdate":"2022-09-10T00:00:00Z","readingtime":10,"relpermalink":"/post/1066%E6%B5%85%E5%A0%86%E6%B7%B1%E5%A0%86%E4%B8%8E%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2/","section":"post","summary":"1. 浅堆（Shallow Heap） 浅堆是指一个对象所消耗的内存。在 32 位系统中，一个对象引用会占据 4 个字节，一个 int 类型会占据 4 个字节，long 型","tags":["JVM"],"title":"26、OOM常见各种场景及解决方案（JVM）","type":"post","url":"/post/1066%E6%B5%85%E5%A0%86%E6%B7%B1%E5%A0%86%E4%B8%8E%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2/","weight":0,"wordcount":4672},{"author":null,"categories":["学习"],"content":"","date":1662681600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1662681600,"objectID":"a9e2cbdb11d2f0579786714bb40f08da","permalink":"https://yiguan1573.github.io/post/1065%E5%88%86%E6%9E%90gc%E6%97%A5%E5%BF%97/","publishdate":"2022-09-09T00:00:00Z","readingtime":4,"relpermalink":"/post/1065%E5%88%86%E6%9E%90gc%E6%97%A5%E5%BF%97/","section":"post","summary":"5.1. GC 分类 针对 HotSpot VM 的实现，它里面的 GC 按照回收区域又分为两大种类型：一种是部分收集（Partial GC），一种是整堆收集（Full GC） 部分收集","tags":["JVM"],"title":"25、分析GC日志（JVM）","type":"post","url":"/post/1065%E5%88%86%E6%9E%90gc%E6%97%A5%E5%BF%97/","weight":0,"wordcount":1723},{"author":null,"categories":["学习"],"content":"","date":1662595200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":5400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1662595200,"objectID":"ba793b8b18a950b459f50125990d4c65","permalink":"https://yiguan1573.github.io/post/1064jvm%E8%BF%90%E8%A1%8C%E6%97%B6%E5%8F%82%E6%95%B0/","publishdate":"2022-09-08T00:00:00Z","readingtime":11,"relpermalink":"/post/1064jvm%E8%BF%90%E8%A1%8C%E6%97%B6%E5%8F%82%E6%95%B0/","section":"post","summary":"4.1. JVM 参数选项 官网地址：https://docs.oracle.com/javase/8/docs/technotes/tools/windo","tags":["JVM"],"title":"24、JVM运行时参数（JVM）","type":"post","url":"/post/1064jvm%E8%BF%90%E8%A1%8C%E6%97%B6%E5%8F%82%E6%95%B0/","weight":0,"wordcount":5395},{"author":null,"categories":["学习"],"content":"","date":1662508800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":7600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1662508800,"objectID":"81b43fc8e8fefafa4b3ac4abd7b24c50","permalink":"https://yiguan1573.github.io/post/1063jvm%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7-gui/","publishdate":"2022-09-07T00:00:00Z","readingtime":15,"relpermalink":"/post/1063jvm%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7-gui/","section":"post","summary":"3.1. 工具概述 使用上一章命令行工具或组合能帮您获取目标 Java 应用性能相关的基础信息，但它们存在下列局限： 1．无法获取方法级别的分析数据，如方法间的调","tags":["JVM"],"title":"23、JVM监控及诊断工具-GUI（JVM）","type":"post","url":"/post/1063jvm%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7-gui/","weight":0,"wordcount":7507},{"author":null,"categories":["学习"],"content":"","date":1662422400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":5100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1662422400,"objectID":"9a905f2491e5801ea348a4916dbe3960","permalink":"https://yiguan1573.github.io/post/1062jvm%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7-%E5%91%BD%E4%BB%A4%E8%A1%8C/","publishdate":"2022-09-06T00:00:00Z","readingtime":11,"relpermalink":"/post/1062jvm%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7-%E5%91%BD%E4%BB%A4%E8%A1%8C/","section":"post","summary":"2.1. 概述 性能诊断是软件工程师在日常工作中需要经常面对和解决的问题，在用户体验至上的今天，解决好应用的性能问题能带来非常大的收益。 Java 作为最流行的","tags":["JVM"],"title":"22、JVM监控及诊断工具-命令行（JVM）","type":"post","url":"/post/1062jvm%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7-%E5%91%BD%E4%BB%A4%E8%A1%8C/","weight":0,"wordcount":5041},{"author":null,"categories":["学习"],"content":"","date":1662336000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1662336000,"objectID":"631c428f45c8eab316afe62c88ef8474","permalink":"https://yiguan1573.github.io/post/1061%E6%A6%82%E8%BF%B0%E7%AF%87/","publishdate":"2022-09-05T00:00:00Z","readingtime":3,"relpermalink":"/post/1061%E6%A6%82%E8%BF%B0%E7%AF%87/","section":"post","summary":"1.1. 大厂面试题 支付宝：支付宝三面：JVM 性能调优都做了什么？ 小米：有做过 JVM 内存优化吗？ 从 SQL、JVM、架构、数据库四个方面讲讲优化思路 蚂蚁金","tags":["JVM"],"title":"21、概述篇（JVM）","type":"post","url":"/post/1061%E6%A6%82%E8%BF%B0%E7%AF%87/","weight":0,"wordcount":1274},{"author":null,"categories":["学习"],"content":"","date":1662249600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":16200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1662249600,"objectID":"f58be5a794899e5ce65c53d73948c55c","permalink":"https://yiguan1573.github.io/post/1060%E5%86%8D%E8%B0%88%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E5%99%A8/","publishdate":"2022-09-04T00:00:00Z","readingtime":33,"relpermalink":"/post/1060%E5%86%8D%E8%B0%88%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E5%99%A8/","section":"post","summary":"概述 类加载器是 JVM 执行类加载机制的前提。 ClassLoader 的作用： ClassLoader 是 Java 的核心组件，所有的 Class 都是由 ClassLoader 进行加载的，ClassLoader 负责通过各种方式将 Class 信息","tags":["JVM"],"title":"20、再谈类的加载器（JVM）","type":"post","url":"/post/1060%E5%86%8D%E8%B0%88%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E5%99%A8/","weight":0,"wordcount":16149},{"author":null,"categories":["学习"],"content":"","date":1662163200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":12200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1662163200,"objectID":"09e30d6fe8548d77e8f1577f088e909d","permalink":"https://yiguan1573.github.io/post/1059%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3/","publishdate":"2022-09-03T00:00:00Z","readingtime":25,"relpermalink":"/post/1059%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3/","section":"post","summary":"概述 在 Java 中数据类型分为基本数据类型和引用数据类型。基本数据类型由虚拟机预先定义，引用数据类型则需要进行类的加载。 按照 Java 虚拟机规范，从 Class 文件到","tags":["JVM"],"title":"19、类的加载过程详解（JVM）","type":"post","url":"/post/1059%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3/","weight":0,"wordcount":12111},{"author":null,"categories":["学习"],"content":"","date":1662076800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":16000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1662076800,"objectID":"f00410f008547104757265850be60def","permalink":"https://yiguan1573.github.io/post/1058%E5%AD%97%E8%8A%82%E7%A0%81%E6%8C%87%E4%BB%A4%E9%9B%86%E4%B8%8E%E8%A7%A3%E6%9E%90%E4%B8%BE%E4%BE%8B/","publishdate":"2022-09-02T00:00:00Z","readingtime":32,"relpermalink":"/post/1058%E5%AD%97%E8%8A%82%E7%A0%81%E6%8C%87%E4%BB%A4%E9%9B%86%E4%B8%8E%E8%A7%A3%E6%9E%90%E4%B8%BE%E4%BE%8B/","section":"post","summary":"这章主要是方法体的内容，即Code属性 概述 Java 字节码对于虚拟机，就好像汇编语言对于计算机，属于基本执行命令。 Java 虚拟机的指令由一个字节长度的、代","tags":["JVM"],"title":"18、字节码指令集与解析举例（JVM）","type":"post","url":"/post/1058%E5%AD%97%E8%8A%82%E7%A0%81%E6%8C%87%E4%BB%A4%E9%9B%86%E4%B8%8E%E8%A7%A3%E6%9E%90%E4%B8%BE%E4%BE%8B/","weight":0,"wordcount":15964},{"author":null,"categories":["学习"],"content":"","date":1661990400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":13100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1661990400,"objectID":"4d69387c26bab96ef59d1bd776425c80","permalink":"https://yiguan1573.github.io/post/1057class%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/","publishdate":"2022-09-01T00:00:00Z","readingtime":27,"relpermalink":"/post/1057class%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/","section":"post","summary":"引言 笔记来源JVM中篇 概述 字节码文件的跨平台性 Java 语言：跨平台的语言（write once, run anywhere） 当Java源代码成功编译成字节码之后，如","tags":["JVM"],"title":"17、Class文件结构（JVM）","type":"post","url":"/post/1057class%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/","weight":0,"wordcount":13088},{"author":null,"categories":["学习"],"content":"","date":1656979200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":21700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1656979200,"objectID":"afe14878b732cf78753d2a517e3f22f5","permalink":"https://yiguan1573.github.io/post/1056%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8/","publishdate":"2022-07-05T00:00:00Z","readingtime":44,"relpermalink":"/post/1056%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8/","section":"post","summary":"GC 分类与性能指标 垃圾回收器概述 垃圾收集器没有在规范中进行过多的规定，可以由不同的厂商、不同版本的JVM来实现。 由于JDK的版本处于高速迭代过","tags":["JVM"],"title":"16、垃圾回收器（JVM）","type":"post","url":"/post/1056%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8/","weight":0,"wordcount":21624},{"author":null,"categories":["学习"],"content":"","date":1656892800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":12900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1656892800,"objectID":"16e0db6c2ab7360405820098271ab96b","permalink":"https://yiguan1573.github.io/post/1055%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/","publishdate":"2022-07-04T00:00:00Z","readingtime":26,"relpermalink":"/post/1055%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/","section":"post","summary":"System.gc() 的理解 在默认情况下，通过System.gc()者Runtime.getRuntime().gc() 的调用，会显式触发Full GC，同时对老","tags":["JVM"],"title":"15、垃圾回收相关概念（JVM）","type":"post","url":"/post/1055%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/","weight":0,"wordcount":12824},{"author":null,"categories":["学习"],"content":"","date":1656806400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":12700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1656806400,"objectID":"3ea5406b9e324da6a0e93d9d74ac8f20","permalink":"https://yiguan1573.github.io/post/1054%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%A6%82%E8%BF%B0%E5%92%8C%E7%9B%B8%E5%85%B3%E7%AE%97%E6%B3%95/","publishdate":"2022-07-03T00:00:00Z","readingtime":26,"relpermalink":"/post/1054%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%A6%82%E8%BF%B0%E5%92%8C%E7%9B%B8%E5%85%B3%E7%AE%97%E6%B3%95/","section":"post","summary":"垃圾回收概述 Java 和 C++语言的区别，就在于垃圾收集技术和内存动态分配上，C++语言没有垃圾收集技术，需要程序员手动的收集。 垃圾收集，不是Jav","tags":["JVM"],"title":"14、垃圾回收概述和相关算法（JVM）","type":"post","url":"/post/1054%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%A6%82%E8%BF%B0%E5%92%8C%E7%9B%B8%E5%85%B3%E7%AE%97%E6%B3%95/","weight":0,"wordcount":12681},{"author":null,"categories":["学习"],"content":"","date":1656720000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":9600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1656720000,"objectID":"4dd99b885fef17ba38976403da03c615","permalink":"https://yiguan1573.github.io/post/1053stringtable%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E9%87%8F%E6%B1%A0/","publishdate":"2022-07-02T00:00:00Z","readingtime":20,"relpermalink":"/post/1053stringtable%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E9%87%8F%E6%B1%A0/","section":"post","summary":"String的基本特性 String：字符串，使用一对 “” 引起来表示 String s1 = \u0026#34;atguigu\u0026#34; ; // 字面量的定义方式 String s2 = new String(\u0026#34;hello\u0026#34;); // new 对象的方式 String被声明为f","tags":["JVM"],"title":"13、StringTable(字符串常量池)（JVM）","type":"post","url":"/post/1053stringtable%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E9%87%8F%E6%B1%A0/","weight":0,"wordcount":9543},{"author":null,"categories":["学习"],"content":"","date":1656633600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":7900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1656633600,"objectID":"abd0f3005a84a347f09e2346bd25c239","permalink":"https://yiguan1573.github.io/post/1052%E6%89%A7%E8%A1%8C%E5%BC%95%E6%93%8E/","publishdate":"2022-07-01T00:00:00Z","readingtime":16,"relpermalink":"/post/1052%E6%89%A7%E8%A1%8C%E5%BC%95%E6%93%8E/","section":"post","summary":"执行引擎概述 执行引擎概述 执行引擎是Java虚拟机核心的组成部分之一。 “虚拟机”是一个相对于“物理机”的概念，这两种机器都有代码执行能力，其区","tags":["JVM"],"title":"12、执行引擎（JVM）","type":"post","url":"/post/1052%E6%89%A7%E8%A1%8C%E5%BC%95%E6%93%8E/","weight":0,"wordcount":7818},{"author":null,"categories":["学习"],"content":"","date":1656547200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1656547200,"objectID":"33e56d12e1c0551ac2c76d0d371d9a1b","permalink":"https://yiguan1573.github.io/post/1051%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98/","publishdate":"2022-06-30T00:00:00Z","readingtime":2,"relpermalink":"/post/1051%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98/","section":"post","summary":"直接内存概述 不是虚拟机运行时数据区的一部分，也不是《Java虚拟机规范》中定义的内存区域。 直接内存是在Java堆外的、直接向系统申请的内存区","tags":["JVM"],"title":"11、直接内存（JVM）","type":"post","url":"/post/1051%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98/","weight":0,"wordcount":738},{"author":null,"categories":["学习"],"content":"","date":1656460800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1656460800,"objectID":"9b71dc1f3bdc2d855b3a754b38c31334","permalink":"https://yiguan1573.github.io/post/1050%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80%E4%B8%8E%E8%AE%BF%E9%97%AE%E5%AE%9A%E4%BD%8D/","publishdate":"2022-06-29T00:00:00Z","readingtime":5,"relpermalink":"/post/1050%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80%E4%B8%8E%E8%AE%BF%E9%97%AE%E5%AE%9A%E4%BD%8D/","section":"post","summary":"对象的实例化 大厂面试题 美团： 对象在JVM中是怎么存储的？ 对象头信息里面有哪些东西？ 蚂蚁金服： 二面：java对象头里有什么 对象创建的方式 new","tags":["JVM"],"title":"10、对象的实例化内存布局与访问定位（JVM）","type":"post","url":"/post/1050%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80%E4%B8%8E%E8%AE%BF%E9%97%AE%E5%AE%9A%E4%BD%8D/","weight":0,"wordcount":2371},{"author":null,"categories":["学习"],"content":"","date":1656374400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":11000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1656374400,"objectID":"7e458d345f913226e20365f34f01c6b7","permalink":"https://yiguan1573.github.io/post/1049%E6%96%B9%E6%B3%95%E5%8C%BA/","publishdate":"2022-06-28T00:00:00Z","readingtime":22,"relpermalink":"/post/1049%E6%96%B9%E6%B3%95%E5%8C%BA/","section":"post","summary":"栈、堆、方法区的交互关系 从线程共享与否的角度来看 ThreadLocal：如何保证多个线程在并发环境下的安全性？典型场景就是数据库连接管理，以","tags":["JVM"],"title":"9、方法区（JVM）","type":"post","url":"/post/1049%E6%96%B9%E6%B3%95%E5%8C%BA/","weight":0,"wordcount":10910},{"author":null,"categories":["学习"],"content":"","date":1656288000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":13100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1656288000,"objectID":"464b06f2022c305ab882f9262885fef9","permalink":"https://yiguan1573.github.io/post/1048%E5%A0%86/","publishdate":"2022-06-27T00:00:00Z","readingtime":27,"relpermalink":"/post/1048%E5%A0%86/","section":"post","summary":"堆的核心概述 堆与进程 堆针对一个JVM进程来说是唯一的。也就是一个进程只有一个JVM实例，一个JVM实例中就有一个运行时数据区，一个运行时数据","tags":["JVM"],"title":"8、堆（JVM）","type":"post","url":"/post/1048%E5%A0%86/","weight":0,"wordcount":13081},{"author":null,"categories":["学习"],"content":"","date":1656201600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1656201600,"objectID":"681aaaa7bf72166985e3c6ca3d2014bf","permalink":"https://yiguan1573.github.io/post/1047%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88/","publishdate":"2022-06-26T00:00:00Z","readingtime":2,"relpermalink":"/post/1047%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88/","section":"post","summary":"本地方法栈 Java虚拟机栈于管理Java方法的调用，而本地方法栈用于管理本地方法的调用。 本地方法栈，也是线程私有的。 允许被实现成固定或者是可","tags":["JVM"],"title":"7、本地方法栈（JVM）","type":"post","url":"/post/1047%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88/","weight":0,"wordcount":576},{"author":null,"categories":["学习"],"content":"","date":1656115200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1656115200,"objectID":"6e3a9d251d8e5d2b02fe1af06cc3c98d","permalink":"https://yiguan1573.github.io/post/1046%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%8E%A5%E5%8F%A3/","publishdate":"2022-06-25T00:00:00Z","readingtime":3,"relpermalink":"/post/1046%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%8E%A5%E5%8F%A3/","section":"post","summary":"本地方法 简单地讲，一个Native Method是一个Java调用非Java代码的接囗一个Native Method是这样一个Java方法：该方","tags":["JVM"],"title":"6、本地方法接口（JVM）","type":"post","url":"/post/1046%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%8E%A5%E5%8F%A3/","weight":0,"wordcount":1243},{"author":null,"categories":["学习"],"content":"","date":1656028800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":12600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1656028800,"objectID":"5d74ede23781a2266f95d0fa9f0e1ccc","permalink":"https://yiguan1573.github.io/post/1045%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88/","publishdate":"2022-06-24T00:00:00Z","readingtime":26,"relpermalink":"/post/1045%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88/","section":"post","summary":"简介 虚拟机栈的出现背景 由于跨平台性的设计，Java的指令都是根据栈来设计的。不同平台CPU架构不同，所以不能设计为基于寄存器的【如果设计成基","tags":["JVM"],"title":"5、虚拟机栈（JVM）","type":"post","url":"/post/1045%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88/","weight":0,"wordcount":12573},{"author":null,"categories":["学习"],"content":"","date":1655942400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1655942400,"objectID":"08df8af18a8df6041e58d3ba42818035","permalink":"https://yiguan1573.github.io/post/1044%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8/","publishdate":"2022-06-23T00:00:00Z","readingtime":4,"relpermalink":"/post/1044%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8/","section":"post","summary":"PC寄存器介绍 官方文档网址：https://docs.oracle.com/javase/specs/jvms/se8/html/index","tags":["JVM"],"title":"4、程序计数器（JVM）","type":"post","url":"/post/1044%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8/","weight":0,"wordcount":1763},{"author":null,"categories":["学习"],"content":"","date":1655856000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1655856000,"objectID":"92842bc38ac86f464dac9cecee0993bc","permalink":"https://yiguan1573.github.io/post/1043%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA/","publishdate":"2022-06-22T00:00:00Z","readingtime":3,"relpermalink":"/post/1043%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA/","section":"post","summary":"此章把运行时数据区里比较少的地方讲一下。虚拟机栈，堆，方法区这些地方后续再讲。 运行时数据区概述及线程 前言 本节主要讲的是运行时数据区，也就是下","tags":["JVM"],"title":"3、运行时数据区（JVM）","type":"post","url":"/post/1043%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA/","weight":0,"wordcount":1317},{"author":null,"categories":["学习"],"content":"","date":1655769600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":7500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1655769600,"objectID":"33764283f5ce31a1459d392cc57546a0","permalink":"https://yiguan1573.github.io/post/1042%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%AD%90%E7%B3%BB%E7%BB%9F/","publishdate":"2022-06-21T00:00:00Z","readingtime":15,"relpermalink":"/post/1042%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%AD%90%E7%B3%BB%E7%BB%9F/","section":"post","summary":"内存结构概述 简图 详细图 英文版 中文版 注意：方法区只有HotSpot虚拟机有，J9，JRockit都没有 如果自己想手写一个Java虚拟机的话，主","tags":["JVM"],"title":"2、类加载子系统（JVM）","type":"post","url":"/post/1042%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%AD%90%E7%B3%BB%E7%BB%9F/","weight":0,"wordcount":7492},{"author":null,"categories":["学习"],"content":"","date":1655683200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":9600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1655683200,"objectID":"34156724536fdf95959601612058d74f","permalink":"https://yiguan1573.github.io/post/1041jvm%E4%B8%8Ejava%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/","publishdate":"2022-06-20T00:00:00Z","readingtime":20,"relpermalink":"/post/1041jvm%E4%B8%8Ejava%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/","section":"post","summary":"前言 你是否也遇到过这些问题？ 运行着的线上系统突然卡死，系统无法访问，甚至直接OOM！ 想解决线上JVM GC问题，但却无从下手。 新项目上线，对各","tags":["JVM"],"title":"1、JVM与Java体系结构（JVM）","type":"post","url":"/post/1041jvm%E4%B8%8Ejava%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/","weight":0,"wordcount":9537},{"author":null,"categories":["学习"],"content":"","date":1655510400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1655510400,"objectID":"0f0a323c01e7c77ec60808c2e2d26196","permalink":"https://yiguan1573.github.io/post/1039elasticsearch/","publishdate":"2022-06-18T00:00:00Z","readingtime":1,"relpermalink":"/post/1039elasticsearch/","section":"post","summary":"Elasticsearch学习笔记","tags":["ElasticSearch"],"title":"1、ElasticSearch（ElasticSearch）","type":"post","url":"/post/1039elasticsearch/","weight":0,"wordcount":17},{"author":null,"categories":["学习"],"content":"","date":1652832000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":7600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1652832000,"objectID":"7a05dd902343dd54800c14ffef02a75f","permalink":"https://yiguan1573.github.io/post/1038netty%E4%BC%98%E5%8C%96%E5%92%8C%E6%BA%90%E7%A0%81/","publishdate":"2022-05-18T00:00:00Z","readingtime":16,"relpermalink":"/post/1038netty%E4%BC%98%E5%8C%96%E5%92%8C%E6%BA%90%E7%A0%81/","section":"post","summary":"1. 优化 1.1 扩展序列化算法 序列化，反序列化主要用在消息正文的转换上 序列化时，需要将 Java 对象变为要传输的数据（可以是 byte[]，或 json 等，最终都需要","tags":["Netty"],"title":"4、Netty优化和源码（Netty）","type":"post","url":"/post/1038netty%E4%BC%98%E5%8C%96%E5%92%8C%E6%BA%90%E7%A0%81/","weight":0,"wordcount":7548},{"author":null,"categories":["学习"],"content":"","date":1652745600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":9300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1652745600,"objectID":"6a29a471b00ca968e1785ed7c4d1e68a","permalink":"https://yiguan1573.github.io/post/1037netty%E8%BF%9B%E9%98%B6/","publishdate":"2022-05-17T00:00:00Z","readingtime":19,"relpermalink":"/post/1037netty%E8%BF%9B%E9%98%B6/","section":"post","summary":"1. 粘包与半包 1.1 粘包现象 服务端代码 public class HelloWorldServer { static final Logger log = LoggerFactory.getLogger(HelloWorldServer.class); void start() { NioEventLoopGroup boss = new NioEventLoopGroup(1); NioEventLoopGroup worker = new NioEventLoopGroup(); try { ServerBootstrap serverBootstrap = new ServerBootstrap(); serverBootstrap.channel(NioServerSocketChannel.class); serverBootstrap.group(boss, worker); serverBootstrap.childHandler(new ChannelInitializer\u0026lt;SocketChannel\u0026gt;() { @Override protected void initChannel(SocketChannel ch) throws Exception { ch.pipeline().addLast(new LoggingHandler(LogLevel.DEBUG)); ch.pipeline().addLast(new ChannelInboundHandlerAdapter() { @Override public void channelActive(ChannelHandlerContext ctx)","tags":["Netty"],"title":"3、Netty进阶（Netty）","type":"post","url":"/post/1037netty%E8%BF%9B%E9%98%B6/","weight":0,"wordcount":9284},{"author":null,"categories":["学习"],"content":"","date":1652659200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":10000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1652659200,"objectID":"6e0eda409eda1136bd0c24ea7560e307","permalink":"https://yiguan1573.github.io/post/1036netty%E5%85%A5%E9%97%A8/","publishdate":"2022-05-16T00:00:00Z","readingtime":20,"relpermalink":"/post/1036netty%E5%85%A5%E9%97%A8/","section":"post","summary":"1. 概述 1.1 Netty 是什么？ Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers \u0026amp; clients. Netty 是一个异步的、基于事件驱动的网络应用框架，用于快速开发可维护、高性能的网络服务器和","tags":["Netty"],"title":"2、Netty入门（Netty）","type":"post","url":"/post/1036netty%E5%85%A5%E9%97%A8/","weight":0,"wordcount":9941},{"author":null,"categories":["学习"],"content":"","date":1652486400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":10700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1652486400,"objectID":"fb4c4b61828843bd0fb7447069d4e6ed","permalink":"https://yiguan1573.github.io/post/1035nio/","publishdate":"2022-05-14T00:00:00Z","readingtime":22,"relpermalink":"/post/1035nio/","section":"post","summary":"1. 三大组件 non-blocking io 非阻塞 IO 1.1 Channel \u0026amp; Buffer channel 有一点类似于 stream，它就是读写数据的双向通道，可以从 channel 将数据读入 buffer，也可以将 buffer 的数据写入 ch","tags":["Netty"],"title":"1、NIO（Netty）","type":"post","url":"/post/1035nio/","weight":0,"wordcount":10681},{"author":null,"categories":["学习"],"content":"","date":1652400000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1652400000,"objectID":"5445f8db6d775b387849200b896cba1c","permalink":"https://yiguan1573.github.io/post/1034springsecurity-oauth2/","publishdate":"2022-05-13T00:00:00Z","readingtime":1,"relpermalink":"/post/1034springsecurity-oauth2/","section":"post","summary":"简单介绍和使用 Oauth2是什么\u0026amp;怎么用 基于spring-security-oauth2实现oauth2 SpringBoot + Spring Security OAuth2基本使用","tags":["SpringSecurity"],"title":"5、SpringSecurity oauth2（SpringSecurity）","type":"post","url":"/post/1034springsecurity-oauth2/","weight":0,"wordcount":265},{"author":null,"categories":["学习"],"content":"","date":1652313600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1652313600,"objectID":"9637de3da4c995082c417334f2187a84","permalink":"https://yiguan1573.github.io/post/1033springsecurity-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90%E6%96%B9%E6%A1%88/","publishdate":"2022-05-12T00:00:00Z","readingtime":5,"relpermalink":"/post/1033springsecurity-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90%E6%96%B9%E6%A1%88/","section":"post","summary":"微服务认证与授权实现思路 认证授权过程分析 如果是基于 Session，那么 Spring-security 会对 cookie 里的 sessionid 进行解析，找到服务器存储的 session 信息，然后判断当前用户是否符","tags":["SpringSecurity"],"title":"4、SpringSecurity 微服务权限方案（SpringSecurity）","type":"post","url":"/post/1033springsecurity-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90%E6%96%B9%E6%A1%88/","weight":0,"wordcount":2391},{"author":null,"categories":["学习"],"content":"","date":1652227200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1652227200,"objectID":"f2c14cf04fb22f56ffcec67a93407b07","permalink":"https://yiguan1573.github.io/post/1032springsecurity-web-%E6%9D%83%E9%99%90%E6%96%B9%E6%A1%88/","publishdate":"2022-05-11T00:00:00Z","readingtime":7,"relpermalink":"/post/1032springsecurity-web-%E6%9D%83%E9%99%90%E6%96%B9%E6%A1%88/","section":"post","summary":"设置登录系统的账号、密码 方式一：在 application.properties spring.security.user.name=atguigu spring.security.user.password=atguigu 方式二：编写类实现接口 package com.atguigu.config; @Configuration public class SecurityConfig { // 注入 PasswordEncoder 类到 spring 容器中 @Bean public PasswordEncoder passwordEncoder(){ return new BCryptPasswordEncoder(); } } package com.atguigu.service; @Service public class LoginService implements UserDetailsService { @Override public UserDetails loadUserByUsername(String","tags":["SpringSecurity"],"title":"3、SpringSecurity Web权限方案（SpringSecurity）","type":"post","url":"/post/1032springsecurity-web-%E6%9D%83%E9%99%90%E6%96%B9%E6%A1%88/","weight":0,"wordcount":3476},{"author":null,"categories":["学习"],"content":"","date":1652140800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1652140800,"objectID":"be0a5720452af27399726c42b79df005","permalink":"https://yiguan1573.github.io/post/1031springsecurity-%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B/","publishdate":"2022-05-10T00:00:00Z","readingtime":3,"relpermalink":"/post/1031springsecurity-%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B/","section":"post","summary":"创建项目 新建springboot工程 增加依赖 \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-security\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; 添加一个配置类： @Configuration public class SecurityConfigextends WebSecurityConfigurerAdapter { @Override protected void configure(HttpSecurity http) throws Exception { http.formLogin() // 表单登录 .and() .authorizeRequests() // 认证配置 .anyRequest() // 任何请求 .authenticated(); // 都","tags":["SpringSecurity"],"title":"2、SpringSecurity 入门案例（SpringSecurity）","type":"post","url":"/post/1031springsecurity-%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B/","weight":0,"wordcount":1316},{"author":null,"categories":["学习"],"content":"","date":1652054400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1652054400,"objectID":"9c250960aebf00b4667823232d4adc55","permalink":"https://yiguan1573.github.io/post/1030springsecurity%E6%A1%86%E6%9E%B6%E6%A6%82%E8%BF%B0/","publishdate":"2022-05-09T00:00:00Z","readingtime":5,"relpermalink":"/post/1030springsecurity%E6%A1%86%E6%9E%B6%E6%A6%82%E8%BF%B0/","section":"post","summary":"概要 Spring 是非常流行和成功的 Java 应用开发框架，Spring Security 正是 Spring 家族中的成员。Spring Security 基于 Spring 框架，提供了一套 Web 应用安全性的完整解决方案。 关","tags":["SpringSecurity"],"title":"1、SpringSecurity 框架简介（SpringSecurity）","type":"post","url":"/post/1030springsecurity%E6%A1%86%E6%9E%B6%E6%A6%82%E8%BF%B0/","weight":0,"wordcount":2095},{"author":null,"categories":["学习"],"content":"","date":1651968000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1651968000,"objectID":"cd45792d84109b4cecdc8d180befa4a3","permalink":"https://yiguan1573.github.io/post/1029mysql%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/","publishdate":"2022-05-08T00:00:00Z","readingtime":3,"relpermalink":"/post/1029mysql%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/","section":"post","summary":"前言 公司很久以前的一个库查询太慢，需要做主从复制和读写分离，但是这个库数据量大几百G而且不能停机，所以需要将数据热备份到从库后再做其他操作 DataX","tags":["DataX","mysql","项目"],"title":"mysql数据备份","type":"post","url":"/post/1029mysql%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/","weight":0,"wordcount":1278},{"author":null,"categories":["学习"],"content":"","date":1651881600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1651881600,"objectID":"52f8eee81edb94925898a6a2439fdb15","permalink":"https://yiguan1573.github.io/post/1027%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/","publishdate":"2022-05-07T00:00:00Z","readingtime":5,"relpermalink":"/post/1027%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/","section":"post","summary":"异步投递 异步投递是什么 官网介绍 此处的异步是指生产者和broker之间发送消息的异步。不是指生产者和消费者之间异步 对于一个Slow Consum","tags":["ActiveMQ"],"title":"11、高级特性（ActiveMQ）","type":"post","url":"/post/1027%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/","weight":0,"wordcount":2202},{"author":null,"categories":["学习"],"content":"","date":1651881600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1651881600,"objectID":"7990de69517dff86698b217c5a3893e2","permalink":"https://yiguan1573.github.io/post/1028datax/","publishdate":"2022-05-07T00:00:00Z","readingtime":1,"relpermalink":"/post/1028datax/","section":"post","summary":"安装和使用 安装 前提-需要有java8以及Python2.7以上的环境 wget http://datax-opensource.oss-cn-hangzhou.aliyuncs.com/datax.tar.gz tar -zxvf datax.tar.gz 可能遇到的问题 运行官方案例 bin/datax.py /job/job.json 直接报错，说找不到plugin,","tags":["DataX","java"],"title":"1、DataX（DataX）","type":"post","url":"/post/1028datax/","weight":0,"wordcount":394},{"author":null,"categories":["学习"],"content":"","date":1651795200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1651795200,"objectID":"0343628427c337d873c9e68d26ae0b97","permalink":"https://yiguan1573.github.io/post/1026activemq%E5%A4%9A%E8%8A%82%E7%82%B9%E9%9B%86%E7%BE%A4/","publishdate":"2022-05-06T00:00:00Z","readingtime":3,"relpermalink":"/post/1026activemq%E5%A4%9A%E8%8A%82%E7%82%B9%E9%9B%86%E7%BE%A4/","section":"post","summary":"ActiveMQ多节点集群 引入消息中间件后如何保证其高可用——搭建集群 基于zookeeper和LevelDB搭建ActiveMQ集群。集群仅","tags":["ActiveMQ"],"title":"10、ActiveMQ多节点集群（ActiveMQ）","type":"post","url":"/post/1026activemq%E5%A4%9A%E8%8A%82%E7%82%B9%E9%9B%86%E7%BE%A4/","weight":0,"wordcount":1264},{"author":null,"categories":["学习"],"content":"","date":1651708800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1651708800,"objectID":"35322ad29f41454d1108a094ffe1466f","permalink":"https://yiguan1573.github.io/post/1025activemq%E7%9A%84%E6%B6%88%E6%81%AF%E5%AD%98%E5%82%A8%E5%92%8C%E6%8C%81%E4%B9%85%E5%8C%96/","publishdate":"2022-05-05T00:00:00Z","readingtime":7,"relpermalink":"/post/1025activemq%E7%9A%84%E6%B6%88%E6%81%AF%E5%AD%98%E5%82%A8%E5%92%8C%E6%8C%81%E4%B9%85%E5%8C%96/","section":"post","summary":"介绍 此处持久化和之前的持久化的区别 MQ高可用：事务、可持久、签收，是属于MQ自身特性，自带的。这里的持久化是外力，是外部插件。之前讲的持久化","tags":["ActiveMQ"],"title":"9、ActiveMQ的消息存储和持久化（ActiveMQ）","type":"post","url":"/post/1025activemq%E7%9A%84%E6%B6%88%E6%81%AF%E5%AD%98%E5%82%A8%E5%92%8C%E6%8C%81%E4%B9%85%E5%8C%96/","weight":0,"wordcount":3236},{"author":null,"categories":["学习"],"content":"","date":1651622400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1651622400,"objectID":"0a3d98a6fa838d5e80845001f008be85","permalink":"https://yiguan1573.github.io/post/1024activemq%E7%9A%84%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/","publishdate":"2022-05-04T00:00:00Z","readingtime":4,"relpermalink":"/post/1024activemq%E7%9A%84%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/","section":"post","summary":"简介 ActiveMQ支持的client-broker通讯协议有：TVP、NIO、UDP、SSL、Http(s)、VM。其中配置Transpo","tags":["ActiveMQ"],"title":"8、ActiveMQ的传输协议（ActiveMQ）","type":"post","url":"/post/1024activemq%E7%9A%84%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/","weight":0,"wordcount":1921},{"author":null,"categories":["学习"],"content":"","date":1651536000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1651536000,"objectID":"dde355a843498d27bf0e14872032b1eb","permalink":"https://yiguan1573.github.io/post/1023springboot%E6%95%B4%E5%90%88activemq/","publishdate":"2022-05-03T00:00:00Z","readingtime":2,"relpermalink":"/post/1023springboot%E6%95%B4%E5%90%88activemq/","section":"post","summary":"queue生产者 pom.xml \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;project xmlns=\u0026#34;http://maven.apache.org/POM/4.0.0\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xsi:schemaLocation=\u0026#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\u0026#34;\u0026gt; \u0026lt;modelVersion\u0026gt;4.0.0\u0026lt;/modelVersion\u0026gt; \u0026lt;parent\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-parent\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.1.5.RELEASE\u0026lt;/version\u0026gt; \u0026lt;relativePath/\u0026gt; \u0026lt;!--lookup parent from repository --\u0026gt; \u0026lt;/parent\u0026gt; \u0026lt;groupId\u0026gt;com.at.boot.activemq\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;boot_mq_produce\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;1.0-SNAPSHOT\u0026lt;/version\u0026gt; \u0026lt;properties\u0026gt; \u0026lt;project.build.sourceEncoding\u0026gt;UTF-8\u0026lt;/project.build.sourceEncoding\u0026gt; \u0026lt;maven.compiler.source\u0026gt;1.8\u0026lt;/maven.compiler.source\u0026gt; \u0026lt;maven.compiler.target\u0026gt;1.8\u0026lt;/maven.compiler.target\u0026gt; \u0026lt;/properties\u0026gt; \u0026lt;dependencies\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-test\u0026lt;/artifactId\u0026gt; \u0026lt;scope\u0026gt;test\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-web\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!--spring boot整合activemq的jar","tags":["ActiveMQ"],"title":"7、SpringBoot整合ActiveMQ（ActiveMQ）","type":"post","url":"/post/1023springboot%E6%95%B4%E5%90%88activemq/","weight":0,"wordcount":960},{"author":null,"categories":["学习"],"content":"","date":1651449600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1651449600,"objectID":"a3bcf461b49a79cb6f95c0f9c77d89ec","permalink":"https://yiguan1573.github.io/post/1022spring%E6%95%B4%E5%90%88activemq/","publishdate":"2022-05-02T00:00:00Z","readingtime":2,"relpermalink":"/post/1022spring%E6%95%B4%E5%90%88activemq/","section":"post","summary":"pom.xml添加依赖 \u0026lt;dependencies\u0026gt; \u0026lt;!--activemq核心依赖包 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.apache.activemq\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;activemq-all\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;5.10.0\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!--嵌入式activemq的broker所需要的依赖包","tags":["ActiveMQ"],"title":"6、Spring整合ActiveMQ（ActiveMQ）","type":"post","url":"/post/1022spring%E6%95%B4%E5%90%88activemq/","weight":0,"wordcount":684},{"author":null,"categories":["学习"],"content":"","date":1651363200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1651363200,"objectID":"a11859cd5d4126b0d05e602ba4b72735","permalink":"https://yiguan1573.github.io/post/1021activemq%E7%9A%84broker/","publishdate":"2022-05-01T00:00:00Z","readingtime":1,"relpermalink":"/post/1021activemq%E7%9A%84broker/","section":"post","summary":"broker是什么 相当于一个ActiveMQ服务器实例。说白了，Broker其实就是实现了用代码的形式启动ActiveMQ将MQ嵌入到Jav","tags":["ActiveMQ"],"title":"5、ActiveMQ的broker（ActiveMQ）","type":"post","url":"/post/1021activemq%E7%9A%84broker/","weight":0,"wordcount":408},{"author":null,"categories":["学习"],"content":"","date":1651276800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":6200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1651276800,"objectID":"945c4b432879dddd03ff6fd194e9be70","permalink":"https://yiguan1573.github.io/post/1020jms%E8%A7%84%E8%8C%83/","publishdate":"2022-04-30T00:00:00Z","readingtime":13,"relpermalink":"/post/1020jms%E8%A7%84%E8%8C%83/","section":"post","summary":"JMS是什么 什么是Java消息服务？ Java消息服务指的是两个应用程序之间进行异步通信的API，它为标准协议和消息服务提供了一组通用接口，包","tags":["ActiveMQ"],"title":"4、JMS规范（ActiveMQ）","type":"post","url":"/post/1020jms%E8%A7%84%E8%8C%83/","weight":0,"wordcount":6196},{"author":null,"categories":["学习"],"content":"","date":1651190400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1651190400,"objectID":"8a90c89dad00f6204f6aaa6e51fa347d","permalink":"https://yiguan1573.github.io/post/1019%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8Bmq%E6%A0%87%E5%87%86api%E8%AF%A6%E8%A7%A3/","publishdate":"2022-04-29T00:00:00Z","readingtime":6,"relpermalink":"/post/1019%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8Bmq%E6%A0%87%E5%87%86api%E8%AF%A6%E8%A7%A3/","section":"post","summary":"pom.xml导入依赖 \u0026lt;dependencies\u0026gt; \u0026lt;!--activemq 所需要的jar 包--\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.apache.activemq\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;activemq-all\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;5.15.9\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!--activemq 和 spring 整合的基础包 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.apache.xbean\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;xbean-spring\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;3.16\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;/dependencies\u0026gt; JMS编码总体规范 Destination简介","tags":["ActiveMQ"],"title":"3、入门案例、MQ标准、API详解（ActiveMQ）","type":"post","url":"/post/1019%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8Bmq%E6%A0%87%E5%87%86api%E8%AF%A6%E8%A7%A3/","weight":0,"wordcount":2527},{"author":null,"categories":["学习"],"content":"","date":1651104000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1651104000,"objectID":"411f41572f0892e3aef8fc8bdce7b818","permalink":"https://yiguan1573.github.io/post/1018activemq%E5%AE%89%E8%A3%85%E5%92%8C%E6%8E%A7%E5%88%B6%E5%8F%B0/","publishdate":"2022-04-28T00:00:00Z","readingtime":1,"relpermalink":"/post/1018activemq%E5%AE%89%E8%A3%85%E5%92%8C%E6%8E%A7%E5%88%B6%E5%8F%B0/","section":"post","summary":"ActiveMQ安装 官方下载 官网地址： http://activemq.apache.org/ 安装步骤 参考文档 启动activemq cd /opt mkdir activemq cd activemq #上传文件 rz tar -xzvf apache-activemq-5.14.3-bin.tar.gz cd bin #启动 ./activemq start #关闭 ./activemq stop 查看进程 #","tags":["ActiveMQ"],"title":"2、ActiveMQ安装和控制台（ActiveMQ）","type":"post","url":"/post/1018activemq%E5%AE%89%E8%A3%85%E5%92%8C%E6%8E%A7%E5%88%B6%E5%8F%B0/","weight":0,"wordcount":207},{"author":null,"categories":["学习"],"content":"","date":1651104000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":9600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1651104000,"objectID":"bfdde282b9e1065363be621ea0ca4c8b","permalink":"https://yiguan1573.github.io/post/987mongodb%E5%9F%BA%E7%A1%80/","publishdate":"2022-04-28T00:00:00Z","readingtime":20,"relpermalink":"/post/987mongodb%E5%9F%BA%E7%A1%80/","section":"post","summary":"1 MongoDB相关概念 1.1 业务应用场景 传统的关系型数据库（如MySQL），在数据操作的“三高”需求以及应对Web2.0的网站需求面前，显得力","tags":["MongoDB"],"title":"2、MongoDB基础（MongoDB）","type":"post","url":"/post/987mongodb%E5%9F%BA%E7%A1%80/","weight":0,"wordcount":9534},{"author":null,"categories":["学习"],"content":"","date":1651017600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":11700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1651017600,"objectID":"9a38aa36ce08ad18fe1d0f6ac9cad001","permalink":"https://yiguan1573.github.io/post/985mongodb%E7%9A%84%E4%BD%BF%E7%94%A8%E7%AE%80%E5%8C%96%E7%89%88/","publishdate":"2022-04-27T00:00:00Z","readingtime":24,"relpermalink":"/post/985mongodb%E7%9A%84%E4%BD%BF%E7%94%A8%E7%AE%80%E5%8C%96%E7%89%88/","section":"post","summary":"MongoDB 官方文档：https://docs.mongodb.com/manual/mongo/ 中文社区：https://mongoing.com 官","tags":["MongoDB"],"title":"1、MongoDB的使用简化版（MongoDB）","type":"post","url":"/post/985mongodb%E7%9A%84%E4%BD%BF%E7%94%A8%E7%AE%80%E5%8C%96%E7%89%88/","weight":0,"wordcount":11611},{"author":null,"categories":["学习"],"content":"","date":1651017600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1651017600,"objectID":"50395b461162089e0f03e663d0f0c6c1","permalink":"https://yiguan1573.github.io/post/1017%E5%85%A5%E9%97%A8%E6%A6%82%E8%BF%B0/","publishdate":"2022-04-27T00:00:00Z","readingtime":3,"relpermalink":"/post/1017%E5%85%A5%E9%97%A8%E6%A6%82%E8%BF%B0/","section":"post","summary":"MQ的产品种类和对比 MQ就是消息中间件。MQ是一种理念，ActiveMQ是MQ的落地产品。不管是哪款消息中间件，都有如下一些技术维度： kafka 编程","tags":["ActiveMQ"],"title":"1、入门概述（ActiveMQ）","type":"post","url":"/post/1017%E5%85%A5%E9%97%A8%E6%A6%82%E8%BF%B0/","weight":0,"wordcount":1110},{"author":null,"categories":["学习"],"content":"","date":1650585600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1650585600,"objectID":"4bce83d34853db8107d963f2a4f62594","permalink":"https://yiguan1573.github.io/post/986%E5%A4%A7%E8%A1%A8excel%E8%AF%BB%E5%8F%96/","publishdate":"2022-04-22T00:00:00Z","readingtime":1,"relpermalink":"/post/986%E5%A4%A7%E8%A1%A8excel%E8%AF%BB%E5%8F%96/","section":"post","summary":"使用xlsx-streamer读取 maven引入 \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.monitorjbl\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;xlsx-streamer\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;1.2.1\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; 测试数据为12W条 正常读取 使用xlsx-streamer 使用 Workbook wb = StreamingReader.builder() .rowCacheSize(50000) //缓存到内","tags":["java"],"title":"10、大表excel读取（Java）","type":"post","url":"/post/986%E5%A4%A7%E8%A1%A8excel%E8%AF%BB%E5%8F%96/","weight":0,"wordcount":255},{"author":null,"categories":["学习"],"content":"","date":1650412800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1650412800,"objectID":"49257b1425a9280abd65213d4f8c7d4c","permalink":"https://yiguan1573.github.io/post/984quartz/","publishdate":"2022-04-20T00:00:00Z","readingtime":1,"relpermalink":"/post/984quartz/","section":"post","summary":"Quartz Java 实现定时任务的三种方法 但是都不能动态地控制定时时间 quartz的持久化数据库 quartz的持久化数据库简化版 几种定时器 Quartz持久化","tags":["java"],"title":"9、Quartz（Java）","type":"post","url":"/post/984quartz/","weight":0,"wordcount":365},{"author":null,"categories":["学习"],"content":"","date":1648684800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1648684800,"objectID":"cd6cfa570a206764f1238fb1179b97b4","permalink":"https://yiguan1573.github.io/post/983minio%E7%9A%84javaapi/","publishdate":"2022-03-31T00:00:00Z","readingtime":2,"relpermalink":"/post/983minio%E7%9A%84javaapi/","section":"post","summary":"参考 官网中文站点 分布式MinIO快速入门 Java Client API参考文档 springboot集成minio完全版（避坑必看） minio - 服务的搭建和使用 MinIO","tags":["minio"],"title":"2、MinIO的JavaApi（MinIO）","type":"post","url":"/post/983minio%E7%9A%84javaapi/","weight":0,"wordcount":694},{"author":null,"categories":["学习"],"content":"","date":1648598400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1648598400,"objectID":"4e05f175450418d7049c80c05a333c24","permalink":"https://yiguan1573.github.io/post/982minio%E5%AE%89%E8%A3%85/","publishdate":"2022-03-30T00:00:00Z","readingtime":2,"relpermalink":"/post/982minio%E5%AE%89%E8%A3%85/","section":"post","summary":"第一步 创建文件夹 cd /opt mikdir MinIO #用于存放数据 mikdir -p MinIO/data cd MinIO #日志 touch minio.log 第二步 wget下载安装包 wget https://dl.min.io/server/minio/release/linux-amd64/minio 这时虚拟机报错如下 要么安装证书要么加入参数 wget --no-check-certificate https://dl.min.io/server/minio/release/linux-amd64/minio 下载完","tags":["minio"],"title":"1、MinIO安装（MinIO）","type":"post","url":"/post/982minio%E5%AE%89%E8%A3%85/","weight":0,"wordcount":863},{"author":null,"categories":["学习"],"content":"","date":1647907200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1647907200,"objectID":"4383cc4003aced9526609a85daf790b0","permalink":"https://yiguan1573.github.io/post/1010%E4%BC%81%E4%B8%9A%E7%BA%A7%E8%B0%83%E4%BC%98/","publishdate":"2022-03-22T00:00:00Z","readingtime":5,"relpermalink":"/post/1010%E4%BC%81%E4%B8%9A%E7%BA%A7%E8%B0%83%E4%BC%98/","section":"post","summary":"执行计划（Explain） 基本语法 EXPLAIN [EXTENDED | DEPENDENCY | AUTHORIZATION] query 案例实操 Fetch 抓取 Fetch 抓取是指，Hive 中对某些情况的查询可以不必使用 MapReduce 计算。例如：SELECT *","tags":["Hive"],"title":"10、企业级调优（Hive）","type":"post","url":"/post/1010%E4%BC%81%E4%B8%9A%E7%BA%A7%E8%B0%83%E4%BC%98/","weight":0,"wordcount":2208},{"author":null,"categories":["学习"],"content":"","date":1647820800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1647820800,"objectID":"950a205f4bcc8ef296b53d188712b849","permalink":"https://yiguan1573.github.io/post/1009%E5%8E%8B%E7%BC%A9%E5%92%8C%E5%AD%98%E5%82%A8/","publishdate":"2022-03-21T00:00:00Z","readingtime":1,"relpermalink":"/post/1009%E5%8E%8B%E7%BC%A9%E5%92%8C%E5%AD%98%E5%82%A8/","section":"post","summary":"Hadoop 压缩配置 MR支持的压缩编码 压缩参数配置 开启 Map 输出阶段压缩（MR引擎） 开启 Reduce 输出阶段压缩 文件存储格式 Hive 支持的存储数据的格式主要有：TEXTF","tags":["Hive"],"title":"9、压缩和存储（Hive）","type":"post","url":"/post/1009%E5%8E%8B%E7%BC%A9%E5%92%8C%E5%AD%98%E5%82%A8/","weight":0,"wordcount":386},{"author":null,"categories":["学习"],"content":"","date":1646870400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1646870400,"objectID":"63e58aab3376e998c5bc6262d8811779","permalink":"https://yiguan1573.github.io/post/1016hbase-%E5%AE%9E%E6%88%98%E4%B9%8B%E8%B0%B7%E7%B2%92%E5%BE%AE%E5%8D%9A/","publishdate":"2022-03-10T00:00:00Z","readingtime":7,"relpermalink":"/post/1016hbase-%E5%AE%9E%E6%88%98%E4%B9%8B%E8%B0%B7%E7%B2%92%E5%BE%AE%E5%8D%9A/","section":"post","summary":"需求分析 微博内容的浏览，数据库表设计 用户社交体现：关注用户，取关用户 拉取关注的人的微博内容 代码实现 代码设计总览： 创建命名空间以及表名的定义 创","tags":["HBase"],"title":"6、HBase 实战之谷粒微博（HBase）","type":"post","url":"/post/1016hbase-%E5%AE%9E%E6%88%98%E4%B9%8B%E8%B0%B7%E7%B2%92%E5%BE%AE%E5%8D%9A/","weight":0,"wordcount":3014},{"author":null,"categories":["学习"],"content":"","date":1646784000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1646784000,"objectID":"ecc00a8dac6a36ac2b808860a5b8f871","permalink":"https://yiguan1573.github.io/post/1015hbase%E4%BC%98%E5%8C%96/","publishdate":"2022-03-09T00:00:00Z","readingtime":6,"relpermalink":"/post/1015hbase%E4%BC%98%E5%8C%96/","section":"post","summary":"高可用 ​ 在HBase中HMaster负责监控HRegionServer的生命周期，均衡RegionServer的负载，如果HMaster挂掉","tags":["HBase"],"title":"5、HBase优化（HBase）","type":"post","url":"/post/1015hbase%E4%BC%98%E5%8C%96/","weight":0,"wordcount":2684},{"author":null,"categories":["学习"],"content":"","date":1646784000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1646784000,"objectID":"a82d8b3058cff9fb438a9821ef62d6e8","permalink":"https://yiguan1573.github.io/post/1008%E5%87%BD%E6%95%B0/","publishdate":"2022-03-09T00:00:00Z","readingtime":4,"relpermalink":"/post/1008%E5%87%BD%E6%95%B0/","section":"post","summary":"系统内置函数 常用内置函数 空字段赋值 CASE WHEN THEN ELSE END 行转列 列转行 窗口函数（开窗函数） 窗口函数partition by name order by date后面不需要加窗口的位置","tags":["Hive"],"title":"8、函数（Hive）","type":"post","url":"/post/1008%E5%87%BD%E6%95%B0/","weight":0,"wordcount":1543},{"author":null,"categories":["学习"],"content":"","date":1646697600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1646697600,"objectID":"eda71d0eee4842736c611f32561fed3c","permalink":"https://yiguan1573.github.io/post/1014hbase-api/","publishdate":"2022-03-08T00:00:00Z","readingtime":7,"relpermalink":"/post/1014hbase-api/","section":"post","summary":"环境准备 新建项目后在 pom.xml 中添加依赖： \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.apache.hbase\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;hbase-server\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;1.3.1\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.apache.hbase\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;hbase-client\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;1.3.1\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; HBaseAPI 获取 Configuration 对象 public static Configuration conf; static{ //使用 HBaseConfiguration 的单例方法实例化 conf = HBaseConfiguration.create(); conf.set(\u0026#34;hbase.zookeeper.quorum\u0026#34;, \u0026#34;192.166.9.102\u0026#34;); conf.set(\u0026#34;hbase.zookeeper.property.clientPort\u0026#34;, \u0026#34;2181\u0026#34;); } 判断表是否存在 public static boolean isTableExist(String","tags":["HBase"],"title":"4、HBase API（HBase）","type":"post","url":"/post/1014hbase-api/","weight":0,"wordcount":3031},{"author":null,"categories":["学习"],"content":"","date":1646697600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1646697600,"objectID":"f25f071dbd023677eb3693d530a7aadf","permalink":"https://yiguan1573.github.io/post/1007%E5%88%86%E5%8C%BA%E8%A1%A8%E5%92%8C%E5%88%86%E6%A1%B6%E8%A1%A8/","publishdate":"2022-03-08T00:00:00Z","readingtime":1,"relpermalink":"/post/1007%E5%88%86%E5%8C%BA%E8%A1%A8%E5%92%8C%E5%88%86%E6%A1%B6%E8%A1%A8/","section":"post","summary":"分区表 分区表实际上就是对应一个 HDFS 文件系统上的独立的文件夹，该文件夹下是该分区所有的数据文件。Hive 中的分区就是分目录，把一个大的数据集根据","tags":["Hive"],"title":"7、分区表和分桶表（Hive）","type":"post","url":"/post/1007%E5%88%86%E5%8C%BA%E8%A1%A8%E5%92%8C%E5%88%86%E6%A1%B6%E8%A1%A8/","weight":0,"wordcount":475},{"author":null,"categories":["学习"],"content":"","date":1646611200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1646611200,"objectID":"d6b7307375b3aa2667762a242baccb37","permalink":"https://yiguan1573.github.io/post/1013hbase%E8%BF%9B%E9%98%B6/","publishdate":"2022-03-07T00:00:00Z","readingtime":4,"relpermalink":"/post/1013hbase%E8%BF%9B%E9%98%B6/","section":"post","summary":"架构原理 1 ）StoreFile ​ 保存实际数据的物理文件，StoreFile以HFile的形式存储在HDFS上。每个Store会有一个或多个S","tags":["HBase"],"title":"3、HBase进阶（HBase）","type":"post","url":"/post/1013hbase%E8%BF%9B%E9%98%B6/","weight":0,"wordcount":1697},{"author":null,"categories":["学习"],"content":"","date":1646611200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1646611200,"objectID":"08ca7b4f8cf2a29037cc5ae1af7a4dbe","permalink":"https://yiguan1573.github.io/post/1006%E6%9F%A5%E8%AF%A2/","publishdate":"2022-03-07T00:00:00Z","readingtime":2,"relpermalink":"/post/1006%E6%9F%A5%E8%AF%A2/","section":"post","summary":"基本查询（Select…From） 查询语句语法： SELECT [ALL | DISTINCT] select_expr, select_expr, ... FROM table_reference [WHERE where_condition] [GROUP BY col_list] [ORDER BY col_list] [CLUSTER BY col_list | [DISTRIBUTE BY col_list] [SORT BY col_list] ] [LIMIT number] 全表和特定列查询 数据准备 全表查询","tags":["Hive"],"title":"6、查询（Hive）","type":"post","url":"/post/1006%E6%9F%A5%E8%AF%A2/","weight":0,"wordcount":922},{"author":null,"categories":["学习"],"content":"","date":1646524800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1646524800,"objectID":"2ed2c59913f75940a9127989a301c152","permalink":"https://yiguan1573.github.io/post/1012hbase%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","publishdate":"2022-03-06T00:00:00Z","readingtime":2,"relpermalink":"/post/1012hbase%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","section":"post","summary":"HBase 安装部署 Zookeeper 正常部署 首先保证 Zookeeper 集群的正常部署，并启动之： [atguigu@hadoop102 zookeeper-3.4.10]$ bin/zkServer.sh start [atguigu@hadoop103 zookeeper-3.4.10]$ bin/zkServer.sh start [atguigu@hadoop104 zookeeper-3.4.10]$ bin/zkServer.sh start Hadoop 正常部署 Hadoop 集群的正常部署并启动： [atguigu@hadoop102 hadoop-2.7.2]$ sbin/start-dfs.sh [atguigu@hadoop103 hadoop-2.7.2]$ sbin/start-yarn.sh HBase 的解压 解压 Hbase","tags":["HBase"],"title":"2、HBase快速入门（HBase）","type":"post","url":"/post/1012hbase%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","weight":0,"wordcount":866},{"author":null,"categories":["学习"],"content":"","date":1646438400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1646438400,"objectID":"790f3c4a132bc008331131002ba31949","permalink":"https://yiguan1573.github.io/post/1011hbase%E7%AE%80%E4%BB%8B/","publishdate":"2022-03-05T00:00:00Z","readingtime":3,"relpermalink":"/post/1011hbase%E7%AE%80%E4%BB%8B/","section":"post","summary":"HBase定义 HBase 是一种分布式、可扩展、支持海量数据存储的 NoSQL 数据库 HBase数据模型 逻辑上，HBase 的数据模型同关系型数据库很类似，数据存储","tags":["HBase"],"title":"1、HBase简介（HBase）","type":"post","url":"/post/1011hbase%E7%AE%80%E4%BB%8B/","weight":0,"wordcount":1100},{"author":null,"categories":["学习"],"content":"","date":1646438400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1646438400,"objectID":"50e0ab6cac332b551de890c90ce2c6bc","permalink":"https://yiguan1573.github.io/post/1005dml%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/","publishdate":"2022-03-05T00:00:00Z","readingtime":2,"relpermalink":"/post/1005dml%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/","section":"post","summary":"数据导入 向表中装载数据（Load） 语法 例子 hive\u0026gt; load data [local] inpath \u0026#39;数据的 path\u0026#39; [overwrite] into table student [partition (partcol1=val1,…)]; load data:表示加载数","tags":["Hive"],"title":"5、DML数据操作（Hive）","type":"post","url":"/post/1005dml%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/","weight":0,"wordcount":887},{"author":null,"categories":["学习"],"content":"","date":1646352000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1646352000,"objectID":"ebc87a916167d1364c6a280bc4594f90","permalink":"https://yiguan1573.github.io/post/1004ddl%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89/","publishdate":"2022-03-04T00:00:00Z","readingtime":5,"relpermalink":"/post/1004ddl%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89/","section":"post","summary":"创建数据库 CREATE DATABASE [IF NOT EXISTS] database_name [COMMENT database_comment] [LOCATION hdfs_path] [WITH DBPROPERTIES (property_name=property_value, ...)]; 创建一个数据库，数据库在 HDFS 上的默认存储路径是/user/hive/warehouse/*.db hive (default)\u0026gt; create database","tags":["Hive"],"title":"4、DDL数据定义（Hive）","type":"post","url":"/post/1004ddl%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89/","weight":0,"wordcount":2205},{"author":null,"categories":["学习"],"content":"","date":1646265600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1646265600,"objectID":"0306693f87a2eb38b0da06e99d944872","permalink":"https://yiguan1573.github.io/post/1003hive%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","publishdate":"2022-03-03T00:00:00Z","readingtime":2,"relpermalink":"/post/1003hive%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","section":"post","summary":"基本数据类型 集合数据类型 案例实操 假设某表有如下一行，我们用 JSON 格式来表示其数据结构。在 Hive 下访问的格式为 { \u0026#34;name\u0026#34;: \u0026#34;songsong\u0026#34;, \u0026#34;friends\u0026#34;: [\u0026#34;bingbing\u0026#34; , \u0026#34;lili\u0026#34;] , //列表 Array, \u0026#34;children\u0026#34;: { //键值 Map,","tags":["Hive"],"title":"3、Hive数据类型（Hive）","type":"post","url":"/post/1003hive%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","weight":0,"wordcount":750},{"author":null,"categories":["学习"],"content":"","date":1646179200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1646179200,"objectID":"14f735ffa8f0077a6811b3501b8283ba","permalink":"https://yiguan1573.github.io/post/1002hive%E5%AE%89%E8%A3%85/","publishdate":"2022-03-02T00:00:00Z","readingtime":4,"relpermalink":"/post/1002hive%E5%AE%89%E8%A3%85/","section":"post","summary":"Hive 安装地址 Hive 官网地址 http://hive.apache.org/ 文档查看地址 https://cwiki.apache.org/confluence/display/Hive/GettingStarted 下载地址 http://archive.apache.org/dist/hive/ github 地址 https://github.com/apache/hive Hive 安装部署 安装 Hive 把 apache-hive-3.1.2-bin.tar.gz 上传到 linux 的/opt/software 目录下 解压 apache-hive-3.1.2-bin.tar.gz 到/opt/mod","tags":["Hive"],"title":"2、Hive安装（Hive）","type":"post","url":"/post/1002hive%E5%AE%89%E8%A3%85/","weight":0,"wordcount":1940},{"author":null,"categories":["学习"],"content":"","date":1646092800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1646092800,"objectID":"08ea20249d87a2536caa87986a9f6669","permalink":"https://yiguan1573.github.io/post/1001hive%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/","publishdate":"2022-03-01T00:00:00Z","readingtime":3,"relpermalink":"/post/1001hive%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/","section":"post","summary":"什么是 Hive hive 简介 Hive：由 Facebook 开源用于解决海量结构化日志的数据统计工具。 Hive 是基于 Hadoop 的一个数据仓库工具，可以将结构化的数据文件映射为一张表，并提","tags":["Hive"],"title":"1、Hive基本概念（Hive）","type":"post","url":"/post/1001hive%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/","weight":0,"wordcount":1473},{"author":null,"categories":["学习"],"content":"","date":1638835200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":9800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1638835200,"objectID":"cdcda0797c16586920e27ea841feb009","permalink":"https://yiguan1573.github.io/post/944sparkstreaming/","publishdate":"2021-12-07T00:00:00Z","readingtime":20,"relpermalink":"/post/944sparkstreaming/","section":"post","summary":"SparkStreaming 概述 Spark Streaming 是什么 Spark 流使得构建可扩展的容错流应用程序变得更加容易。 **Spark Streaming 用于流式数据的处理。**Spark Streaming 支持的数据输入源很多，例如：Kafk","tags":["Spark"],"title":"4、SparkStreaming（Spark）","type":"post","url":"/post/944sparkstreaming/","weight":0,"wordcount":9742},{"author":null,"categories":["学习"],"content":"","date":1638662400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":10100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1638662400,"objectID":"04b0933eb4e094d7e2deba0238638258","permalink":"https://yiguan1573.github.io/post/943sparksql/","publishdate":"2021-12-05T00:00:00Z","readingtime":21,"relpermalink":"/post/943sparksql/","section":"post","summary":"SparkSQL 概述 SparkSQL 是什么 Spark SQL 是 Spark 用于结构化数据(structured data)处理的 Spark 模块。 Hive and SparkSQL SparkSQL 的前身是 Shark，给熟悉 RDBMS 但又不理解 MapReduce 的技术人员","tags":["Spark"],"title":"3、SparkSql（Spark）","type":"post","url":"/post/943sparksql/","weight":0,"wordcount":10078},{"author":null,"categories":["学习"],"content":"","date":1638489600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":12200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1638489600,"objectID":"90775de69171e8f3c0357b0b51c06e75","permalink":"https://yiguan1573.github.io/post/942sparkcore%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/","publishdate":"2021-12-03T00:00:00Z","readingtime":25,"relpermalink":"/post/942sparkcore%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/","section":"post","summary":"Spark 计算框架为了能够进行高并发和高吞吐的数据处理，封装了三大数据结构，用于处理不同的应用场景。三大数据结构分别是： RDD : 弹性分布式数据集 累加器：","tags":["Spark"],"title":"2、SparkCore核心编程（Spark）","type":"post","url":"/post/942sparkcore%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/","weight":0,"wordcount":12160},{"author":null,"categories":["学习"],"content":"","date":1638403200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":7100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1638403200,"objectID":"6a60e6eb0c008504a1a73c0b1a5e7a30","permalink":"https://yiguan1573.github.io/post/941sparkcore/","publishdate":"2021-12-02T00:00:00Z","readingtime":15,"relpermalink":"/post/941sparkcore/","section":"post","summary":"Spark概述 Spark 是什么 Spark 是一种基于内存的快速、通用、可扩展的大数据分析计算引擎。 Spark and Hadoop 首先从时间节点上来看: Hadoop 2006 年 1 月，Doug Cutting 加入Yah","tags":["Spark"],"title":"1、SparkCore（Spark）","type":"post","url":"/post/941sparkcore/","weight":0,"wordcount":7042},{"author":null,"categories":["学习"],"content":"","date":1638230400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1638230400,"objectID":"72c6fb3137e0a3df25cb273a6de75b94","permalink":"https://yiguan1573.github.io/post/910completablefuture/","publishdate":"2021-11-30T00:00:00Z","readingtime":1,"relpermalink":"/post/910completablefuture/","section":"post","summary":"JDK1.8新特性CompletableFuture总结 理解Java8里面CompletableFuture异步编程 Future和Compl","tags":["JUC"],"title":"11、CompletableFuture（JUC）","type":"post","url":"/post/910completablefuture/","weight":0,"wordcount":149},{"author":null,"categories":["学习"],"content":"","date":1637971200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1637971200,"objectID":"ad2fbb3255a688b5eacf7f764c84a10a","permalink":"https://yiguan1573.github.io/post/932scala%E8%A1%A5%E5%85%85/","publishdate":"2021-11-27T00:00:00Z","readingtime":0,"relpermalink":"/post/932scala%E8%A1%A5%E5%85%85/","section":"post","summary":"","tags":["Scala"],"title":"2、Scala补充（Scala）","type":"post","url":"/post/932scala%E8%A1%A5%E5%85%85/","weight":0,"wordcount":0},{"author":null,"categories":["学习"],"content":"","date":1637884800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":37000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1637884800,"objectID":"939259450225e35ab251f8f0af189b38","permalink":"https://yiguan1573.github.io/post/931scala/","publishdate":"2021-11-26T00:00:00Z","readingtime":74,"relpermalink":"/post/931scala/","section":"post","summary":"Scala语言入门 Scala（发音为/ˈskɑːlə, ˈskeɪlə/）是一门多范式的编程语言，设计初衷是要集成面向对象编程和函数式编程的各","tags":["Scala"],"title":"1、Scala（Scala）","type":"post","url":"/post/931scala/","weight":0,"wordcount":36909},{"author":null,"categories":["学习"],"content":"","date":1637798400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1637798400,"objectID":"26bb3864b1ddb6e9f28bee8c9e16a20c","permalink":"https://yiguan1573.github.io/post/927hadoop%E8%A1%A5%E5%85%85/","publishdate":"2021-11-25T00:00:00Z","readingtime":1,"relpermalink":"/post/927hadoop%E8%A1%A5%E5%85%85/","section":"post","summary":"Hadoop中DBInputFormat和DBOutputFormat使用 Hadoop中的DBInputFormat 使用DBInputFor","tags":["Hadoop"],"title":"7、Hadoop补充（Hadoop）","type":"post","url":"/post/927hadoop%E8%A1%A5%E5%85%85/","weight":0,"wordcount":80},{"author":null,"categories":["学习"],"content":"","date":1637625600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1637625600,"objectID":"a76f0904f7dcac26e6786f22a4ab6188","permalink":"https://yiguan1573.github.io/post/981scheduled%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/","publishdate":"2021-11-23T00:00:00Z","readingtime":1,"relpermalink":"/post/981scheduled%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/","section":"post","summary":"@Scheduled注解 Spring中@Scheduled注解的使用 SpringBoot中使用@Scheduled注解 Spring中配置该注","tags":["java"],"title":"8、Scheduled定时任务（Java）","type":"post","url":"/post/981scheduled%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/","weight":0,"wordcount":71},{"author":null,"categories":["学习"],"content":"","date":1635120000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1635120000,"objectID":"a47b9e1245c9a043edadb52866af0da0","permalink":"https://yiguan1573.github.io/post/926%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/","publishdate":"2021-10-25T00:00:00Z","readingtime":0,"relpermalink":"/post/926%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/","section":"post","summary":"","tags":["Hadoop"],"title":"6、源码解析（Hadoop）","type":"post","url":"/post/926%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/","weight":0,"wordcount":0},{"author":null,"categories":["学习"],"content":"","date":1635033600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1635033600,"objectID":"6202fc524c430a2d83da41bebde25f54","permalink":"https://yiguan1573.github.io/post/925%E7%94%9F%E4%BA%A7%E8%B0%83%E4%BC%98/","publishdate":"2021-10-24T00:00:00Z","readingtime":7,"relpermalink":"/post/925%E7%94%9F%E4%BA%A7%E8%B0%83%E4%BC%98/","section":"post","summary":"HDFS—核心参数 NameNode内存生产配置 NameNode心跳并发配置 ​ 开启回收站配置 开启回收站功能，可以将删除的文件在不超时的情况下，","tags":["Hadoop"],"title":"5、生产调优（Hadoop）","type":"post","url":"/post/925%E7%94%9F%E4%BA%A7%E8%B0%83%E4%BC%98/","weight":0,"wordcount":3273},{"author":null,"categories":["学习"],"content":"","date":1634947200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":5700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1634947200,"objectID":"324d5f8d6db133bc348ad22b96abe54c","permalink":"https://yiguan1573.github.io/post/924yarn/","publishdate":"2021-10-23T00:00:00Z","readingtime":12,"relpermalink":"/post/924yarn/","section":"post","summary":"Yarn调度器 Yarn是一个资源调度平台，负责为运算程序提供服务器运算资源，相当于一个分布式的操作系统平台，而MapReduce等运算程序则","tags":["Hadoop"],"title":"4、Yarn（Hadoop）","type":"post","url":"/post/924yarn/","weight":0,"wordcount":5671},{"author":null,"categories":["学习"],"content":"","date":1634860800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":12800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1634860800,"objectID":"dade38644cd0237e7cc61ea5ef90a1ff","permalink":"https://yiguan1573.github.io/post/923mapreduce/","publishdate":"2021-10-22T00:00:00Z","readingtime":26,"relpermalink":"/post/923mapreduce/","section":"post","summary":"MapReduce概述 定义 MapReduce是一个分布式运算程序的编程框架，是用户开发“基于Hadoop的数据分析应用”的核心框架。 MapR","tags":["Hadoop"],"title":"3、MapReduce（Hadoop）","type":"post","url":"/post/923mapreduce/","weight":0,"wordcount":12780},{"author":null,"categories":["学习"],"content":"","date":1634774400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":4300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1634774400,"objectID":"92f5fda9dcf5ef296eb1f891a3f1e9b2","permalink":"https://yiguan1573.github.io/post/922hdfs/","publishdate":"2021-10-21T00:00:00Z","readingtime":9,"relpermalink":"/post/922hdfs/","section":"post","summary":"HDFS概述 背景及定义 HDFS产生背景 随着数据量越来越大，在一个操作系统存不下所有的数据，那么就分配到更多的操作系统管理的磁盘中，但是不方便","tags":["Hadoop"],"title":"2、HDFS（Hadoop）","type":"post","url":"/post/922hdfs/","weight":0,"wordcount":4204},{"author":null,"categories":["学习"],"content":"","date":1634688000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1634688000,"objectID":"724b040881cb66405710b11d771a04fb","permalink":"https://yiguan1573.github.io/post/921hadoop%E5%85%A5%E9%97%A8/","publishdate":"2021-10-20T00:00:00Z","readingtime":4,"relpermalink":"/post/921hadoop%E5%85%A5%E9%97%A8/","section":"post","summary":"Hadoop概述 Hadoop是什么 Hadoop是一个由Apache基金 会所开发的分布式系统基础架构。 主要解决，海量数据的存储和海量数据的分析","tags":["Hadoop"],"title":"1、Hadoop入门（Hadoop）","type":"post","url":"/post/921hadoop%E5%85%A5%E9%97%A8/","weight":0,"wordcount":1908},{"author":null,"categories":["学习"],"content":"","date":1634256000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1634256000,"objectID":"89bc8b9935d071a2451ad80563358931","permalink":"https://yiguan1573.github.io/post/909future/","publishdate":"2021-10-15T00:00:00Z","readingtime":3,"relpermalink":"/post/909future/","section":"post","summary":"简介 Future是java 1.5引入的一个interface，可以方便的用于异步结果的获取。 方法 get（）方法可以当任务结束后返回一个结果，","tags":["JUC"],"title":"10、Future（JUC）","type":"post","url":"/post/909future/","weight":0,"wordcount":1273},{"author":null,"categories":["学习"],"content":"","date":1634256000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1634256000,"objectID":"daf92d9fcd3d28d07cce6e31120bda0a","permalink":"https://yiguan1573.github.io/post/916kafka%E7%9B%91%E6%8E%A7/","publishdate":"2021-10-15T00:00:00Z","readingtime":1,"relpermalink":"/post/916kafka%E7%9B%91%E6%8E%A7/","section":"post","summary":"Kafka Eagle Kafka Eagle是开源可视化和管理软件。它允许您查询、可视化、提醒和探索您的指标，无论它们存储在哪里。简单地说，它为您提供了将kafka集群","tags":["Kafka"],"title":"6、Kafka监控（Kafka）","type":"post","url":"/post/916kafka%E7%9B%91%E6%8E%A7/","weight":0,"wordcount":428},{"author":null,"categories":["学习"],"content":"","date":1634169600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1634169600,"objectID":"0979b38232e5e23b61f50bb6973dd8f6","permalink":"https://yiguan1573.github.io/post/915%E8%87%AA%E5%AE%9A%E4%B9%89-interceptor/","publishdate":"2021-10-14T00:00:00Z","readingtime":3,"relpermalink":"/post/915%E8%87%AA%E5%AE%9A%E4%B9%89-interceptor/","section":"post","summary":"原理 Producer 拦截器(interceptor)是在 Kafka 0.10 版本被引入的，主要用于实现 clients 端的定制化控制逻辑。 对于 producer 而言， interceptor 使得用户在消息发送前以及 producer 回调逻","tags":["Kafka"],"title":"5、自定义 Interceptor（Kafka）","type":"post","url":"/post/915%E8%87%AA%E5%AE%9A%E4%B9%89-interceptor/","weight":0,"wordcount":1097},{"author":null,"categories":["学习"],"content":"","date":1634083200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1634083200,"objectID":"61356977c4276ae564897de8e27029ef","permalink":"https://yiguan1573.github.io/post/914kafka-api/","publishdate":"2021-10-13T00:00:00Z","readingtime":6,"relpermalink":"/post/914kafka-api/","section":"post","summary":"xsync Producer API 消息发送流程 Kafka 的 Producer 发送消息采用的是异步发送的方式。在消息发送的过程中，涉及到了两个线程——main 线程和 Sender 线程，以及一个线程共享变量—","tags":["Kafka"],"title":"4、Kafka API（Kafka）","type":"post","url":"/post/914kafka-api/","weight":0,"wordcount":2600},{"author":null,"categories":["学习"],"content":"","date":1634083200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1634083200,"objectID":"d4cbd2bdd1bba0a5d5091e409717aef8","permalink":"https://yiguan1573.github.io/post/897juc%E8%BE%85%E5%8A%A9%E7%B1%BB/","publishdate":"2021-10-13T00:00:00Z","readingtime":3,"relpermalink":"/post/897juc%E8%BE%85%E5%8A%A9%E7%B1%BB/","section":"post","summary":"减少计数CountDownLatch CountDownLatch(int count)构造一个用给定计数初始化的CountDownLatch在这里插入代码片 两个常用的主要方法 await()","tags":["JUC"],"title":"7、JUC辅助类（JUC）","type":"post","url":"/post/897juc%E8%BE%85%E5%8A%A9%E7%B1%BB/","weight":0,"wordcount":1049},{"author":null,"categories":["学习"],"content":"","date":1634083200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1634083200,"objectID":"e99022f4f319ee2c6e5cc661e03131af","permalink":"https://yiguan1573.github.io/post/917kafka%E8%A1%A5%E5%85%85/","publishdate":"2021-10-13T00:00:00Z","readingtime":1,"relpermalink":"/post/917kafka%E8%A1%A5%E5%85%85/","section":"post","summary":"SpringBoot集成Kafka 最全面的案例 简单案例 Kafka connect 命令行使用方法 Kafka connect介绍、部署及开发 kafka connect java客户端的使用 Kafka Stream 简单案例","tags":["Kafka"],"title":"7、Kafka补充（Kafka）","type":"post","url":"/post/917kafka%E8%A1%A5%E5%85%85/","weight":0,"wordcount":80},{"author":null,"categories":["学习"],"content":"","date":1634083200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1634083200,"objectID":"48827c71f9184fe3a7d04c435f913686","permalink":"https://yiguan1573.github.io/post/898%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97/","publishdate":"2021-10-13T00:00:00Z","readingtime":2,"relpermalink":"/post/898%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97/","section":"post","summary":"BlockingQueue 简介 阻塞队列是共享队列（多线程操作），一端输入，一端输出 不能无限放队列，满了之后就会进入阻塞，取出也同理 当队列是空的，从队列中获取元素的操","tags":["JUC"],"title":"8、阻塞队列（JUC）","type":"post","url":"/post/898%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97/","weight":0,"wordcount":645},{"author":null,"categories":["学习"],"content":"","date":1634083200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1634083200,"objectID":"fb9b0cd01bfcedf36d9733ef0f8faf18","permalink":"https://yiguan1573.github.io/post/899%E7%BA%BF%E7%A8%8B%E6%B1%A0/","publishdate":"2021-10-13T00:00:00Z","readingtime":3,"relpermalink":"/post/899%E7%BA%BF%E7%A8%8B%E6%B1%A0/","section":"post","summary":"概述 线程池（英语：thread pool）：一种线程使用模式。线程过多会带来调度开销，进而影响缓存局部性和整体性能。而线程池维护着多个线程，等","tags":["JUC"],"title":"9、线程池（JUC）","type":"post","url":"/post/899%E7%BA%BF%E7%A8%8B%E6%B1%A0/","weight":0,"wordcount":1348},{"author":null,"categories":["学习"],"content":"","date":1633996800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":6100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633996800,"objectID":"adbc884ede65092c532c3177d7335cc9","permalink":"https://yiguan1573.github.io/post/913kafka%E6%9E%B6%E6%9E%84%E6%B7%B1%E5%85%A5/","publishdate":"2021-10-12T00:00:00Z","readingtime":13,"relpermalink":"/post/913kafka%E6%9E%B6%E6%9E%84%E6%B7%B1%E5%85%A5/","section":"post","summary":"Kafka工作流程及文件存储机制 工作流程 Kafka 中消息是以 topic 进行分类的， producer生产消息，consumer消费消息，都是面向 topic的。","tags":["Kafka"],"title":"3、Kafka 架构深入（Kafka）","type":"post","url":"/post/913kafka%E6%9E%B6%E6%9E%84%E6%B7%B1%E5%85%A5/","weight":0,"wordcount":6032},{"author":null,"categories":["学习"],"content":"","date":1633996800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633996800,"objectID":"9545f885b7a4c14974db17f210624e04","permalink":"https://yiguan1573.github.io/post/896callable%E6%8E%A5%E5%8F%A3/","publishdate":"2021-10-12T00:00:00Z","readingtime":2,"relpermalink":"/post/896callable%E6%8E%A5%E5%8F%A3/","section":"post","summary":"简介 创建线程的多种方式： 继承Thread类 实现Runnable接口 Callable接口 线程池 Runnable 缺少的一项功能是，当线程终止时（即 run（）完","tags":["JUC"],"title":"6、Callable接口（JUC）","type":"post","url":"/post/896callable%E6%8E%A5%E5%8F%A3/","weight":0,"wordcount":784},{"author":null,"categories":["学习"],"content":"","date":1633910400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633910400,"objectID":"c71dea17639428f9c108e229efba7a34","permalink":"https://yiguan1573.github.io/post/912kafka%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","publishdate":"2021-10-11T00:00:00Z","readingtime":2,"relpermalink":"/post/912kafka%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","section":"post","summary":"安装部署 集群规划 hadoop102 hadoop103 hadoop104 zk zk zk kafka kafka kafka jar包下载 官网下载 集群部署 解压安装包 [atguigu@hadoop102 software]$ tar -zxvf kafka_2.11-0.11.0.0.tgz -C /opt/module/ 修改解压后的文件名称 [atguigu@hadoop102 module]$ mv kafka_2.11-0.11.0.0/ kafka 在/opt/module","tags":["Kafka"],"title":"2、Kafka快速入门（Kafka）","type":"post","url":"/post/912kafka%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","weight":0,"wordcount":743},{"author":null,"categories":["学习"],"content":"","date":1633910400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":16200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633910400,"objectID":"1fd244e5af789eb53f17489cc3a04981","permalink":"https://yiguan1573.github.io/post/895%E5%A4%9A%E7%BA%BF%E7%A8%8B%E9%94%81/","publishdate":"2021-10-11T00:00:00Z","readingtime":33,"relpermalink":"/post/895%E5%A4%9A%E7%BA%BF%E7%A8%8B%E9%94%81/","section":"post","summary":"Synchronized锁的作用域 synchronized实现同步的基础:Java中的每一个对象都可以作为锁，具体表现为以下3种形式。 对于普","tags":["JUC"],"title":"5、多线程锁（JUC）","type":"post","url":"/post/895%E5%A4%9A%E7%BA%BF%E7%A8%8B%E9%94%81/","weight":0,"wordcount":16155},{"author":null,"categories":["学习"],"content":"","date":1633824000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633824000,"objectID":"2bd64fdf915205bd68c5b0e43d676288","permalink":"https://yiguan1573.github.io/post/911kafka%E6%A6%82%E8%BF%B0/","publishdate":"2021-10-10T00:00:00Z","readingtime":3,"relpermalink":"/post/911kafka%E6%A6%82%E8%BF%B0/","section":"post","summary":"官网 官方中文文档 官方最新文档 中文教程 定义 Kafka 是一个分布式的基于发布/订阅模式的消息队列（Message Queue），主要应用于大数据实时处理领","tags":["Kafka"],"title":"1、Kafka概述（Kafka）","type":"post","url":"/post/911kafka%E6%A6%82%E8%BF%B0/","weight":0,"wordcount":1205},{"author":null,"categories":["学习"],"content":"","date":1633824000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633824000,"objectID":"fbffc888da46fb6082b0ec33eedd918e","permalink":"https://yiguan1573.github.io/post/894%E9%9B%86%E5%90%88%E7%9A%84%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8/","publishdate":"2021-10-10T00:00:00Z","readingtime":2,"relpermalink":"/post/894%E9%9B%86%E5%90%88%E7%9A%84%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8/","section":"post","summary":"前沿 创建集合 List\u0026lt;String\u0026gt; list = new ArrayList\u0026lt;\u0026gt;(); 创建30个线程向集合中添加元素 for (int i = 0; i \u0026lt;30; i++) { new Thread(()-\u0026gt;{ //向集合添加内容 list.add(UUID.randomUUID().toString().substring(0,8)); System.out.println(list); },String.valueOf(i)).start(); } java.util.Concurrent","tags":["JUC"],"title":"4、集合的线程安全（JUC）","type":"post","url":"/post/894%E9%9B%86%E5%90%88%E7%9A%84%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8/","weight":0,"wordcount":763},{"author":null,"categories":["学习"],"content":"","date":1633737600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633737600,"objectID":"ac80c405147e4c543df2245af50a56d1","permalink":"https://yiguan1573.github.io/post/893%E7%BA%BF%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/","publishdate":"2021-10-09T00:00:00Z","readingtime":4,"relpermalink":"/post/893%E7%BA%BF%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/","section":"post","summary":"概述 线程间通信的模型有两种：共享内存和消息传递 线程间的通信具体步骤 创建资源类，在资源类中船舰属性和操作方法 在资源类操作方法：判断、操作、通知","tags":["JUC"],"title":"3、线程间通信（JUC）","type":"post","url":"/post/893%E7%BA%BF%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/","weight":0,"wordcount":1830},{"author":null,"categories":["学习"],"content":"","date":1633651200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633651200,"objectID":"bec1266267bb451c6c6a48909092a865","permalink":"https://yiguan1573.github.io/post/892lock%E6%8E%A5%E5%8F%A3/","publishdate":"2021-10-08T00:00:00Z","readingtime":6,"relpermalink":"/post/892lock%E6%8E%A5%E5%8F%A3/","section":"post","summary":"Synchronized synchronized 是 Java 中的关键字，是一种同步锁。它修饰的对象有以下几种： 修饰一个代码块，被修饰的代码块称为同步语句块，其作用的范围是大括号{}括起来的代码","tags":["JUC"],"title":"2、Lock接口（JUC）","type":"post","url":"/post/892lock%E6%8E%A5%E5%8F%A3/","weight":0,"wordcount":2741},{"author":null,"categories":["学习"],"content":"","date":1633564800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633564800,"objectID":"e2fcdcbf8b916284c49fa9bf2fa7690d","permalink":"https://yiguan1573.github.io/post/891juc%E6%A6%82%E8%BF%B0/","publishdate":"2021-10-07T00:00:00Z","readingtime":5,"relpermalink":"/post/891juc%E6%A6%82%E8%BF%B0/","section":"post","summary":"简介 在 Java 中，线程部分是一个重点，本篇文章说的 JUC 也是关于线程的。JUC 就是 java.util .concurrent 工具包的简称。这是一个处理线程的工具包，JDK 1.5 开始出现的。 进程","tags":["JUC"],"title":"1、JUC概述（JUC）","type":"post","url":"/post/891juc%E6%A6%82%E8%BF%B0/","weight":0,"wordcount":2028},{"author":null,"categories":["学习"],"content":"","date":1633564800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633564800,"objectID":"cdf697cfcbba52a6182d06a053678b4e","permalink":"https://yiguan1573.github.io/post/877%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/","publishdate":"2021-10-07T00:00:00Z","readingtime":1,"relpermalink":"/post/877%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/","section":"post","summary":"算法基础 Paxos算法 造成这种情况的原因是系统中有一个以上的 Proposer，多个 Proposers 相互争夺 Acceptor，造成迟迟无法达成一致的情况。*","tags":["Zookeeper"],"title":"7、源码解析（Zookeeper）","type":"post","url":"/post/877%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/","weight":0,"wordcount":438},{"author":null,"categories":["学习"],"content":"","date":1633478400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633478400,"objectID":"72f1729ee79698cfc3d1e6f1215af154","permalink":"https://yiguan1573.github.io/post/876%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/","publishdate":"2021-10-06T00:00:00Z","readingtime":1,"relpermalink":"/post/876%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/","section":"post","summary":"选举机制 生产集群安装多少 zk 合适 常用命令 ls、get、create、delete","tags":["Zookeeper"],"title":"6、面试问题（Zookeeper）","type":"post","url":"/post/876%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/","weight":0,"wordcount":39},{"author":null,"categories":["学习"],"content":"","date":1633392000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633392000,"objectID":"61286ee0a896c82ffcc19596e1374815","permalink":"https://yiguan1573.github.io/post/875zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","publishdate":"2021-10-05T00:00:00Z","readingtime":2,"relpermalink":"/post/875zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","section":"post","summary":"概念 比如说\u0026quot;进程 1\u0026quot;在使用该资源的时候，会先去获得锁，\u0026ldquo;进程 1\u0026quot;获得锁以后会对该资源 保持独占，这样","tags":["Zookeeper"],"title":"5、ZooKeeper 分布式（Zookeeper）","type":"post","url":"/post/875zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","weight":0,"wordcount":998},{"author":null,"categories":["学习"],"content":"","date":1633305600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633305600,"objectID":"32792812f35cc81094fbc73caa903407","permalink":"https://yiguan1573.github.io/post/874%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A8%E6%80%81%E4%B8%8A%E4%B8%8B%E7%BA%BF%E7%9B%91%E5%90%AC%E6%A1%88%E4%BE%8B/","publishdate":"2021-10-04T00:00:00Z","readingtime":2,"relpermalink":"/post/874%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A8%E6%80%81%E4%B8%8A%E4%B8%8B%E7%BA%BF%E7%9B%91%E5%90%AC%E6%A1%88%E4%BE%8B/","section":"post","summary":"需求 某分布式系统中，主节点可以有多台，可以动态上下线，任意一台客户端都能实时感知 到主节点服务器的上下线。 需求分析 服务器动态上下线 具体实现 先在","tags":["Zookeeper"],"title":"4、服务器动态上下线监听案例（Zookeeper）","type":"post","url":"/post/874%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A8%E6%80%81%E4%B8%8A%E4%B8%8B%E7%BA%BF%E7%9B%91%E5%90%AC%E6%A1%88%E4%BE%8B/","weight":0,"wordcount":710},{"author":null,"categories":["学习"],"content":"","date":1633219200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633219200,"objectID":"ad416ea964a948cf2a521f8a6c412da1","permalink":"https://yiguan1573.github.io/post/873zookeeper%E9%9B%86%E7%BE%A4%E6%93%8D%E4%BD%9C/","publishdate":"2021-10-03T00:00:00Z","readingtime":6,"relpermalink":"/post/873zookeeper%E9%9B%86%E7%BE%A4%E6%93%8D%E4%BD%9C/","section":"post","summary":"集群操作 集群安装 集群规划 在 hadoop102、hadoop103 和 hadoop104 三个节点上都部署 Zookeeper。 解压安装 在 hadoop102 解压 Zookeeper 安装包到/opt/","tags":["Zookeeper"],"title":"3、Zookeeper集群操作（Zookeeper）","type":"post","url":"/post/873zookeeper%E9%9B%86%E7%BE%A4%E6%93%8D%E4%BD%9C/","weight":0,"wordcount":2942},{"author":null,"categories":["学习"],"content":"","date":1633132800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633132800,"objectID":"e7f5ca80b7584553269298460f880bc4","permalink":"https://yiguan1573.github.io/post/872zookeeper%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85/","publishdate":"2021-10-02T00:00:00Z","readingtime":1,"relpermalink":"/post/872zookeeper%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85/","section":"post","summary":"本地模式安装 安装前准备 安装 JDK 拷贝 apache-zookeeper-3.5.7-bin.tar.gz 安装包到 Linux 系统下 解压到指定目录 [atguigu@hadoop102 software]$ tar -zxvf apache-zookeeper-3.5.7-bin.tar.gz -C /opt/module/ 修改名称 [atguigu@hadoop102 module]$ mv apache-zookeeper-3.5.7-bin zookeeper-3.5.7 配置修改 将/opt/module/zooke","tags":["Zookeeper"],"title":"2、Zookeeper本地安装（Zookeeper）","type":"post","url":"/post/872zookeeper%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85/","weight":0,"wordcount":394},{"author":null,"categories":["学习"],"content":"","date":1633046400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633046400,"objectID":"d0824025b27affc6d18d86f88fd49ffc","permalink":"https://yiguan1573.github.io/post/871zookeeper%E5%85%A5%E9%97%A8/","publishdate":"2021-10-01T00:00:00Z","readingtime":1,"relpermalink":"/post/871zookeeper%E5%85%A5%E9%97%A8/","section":"post","summary":"概述 Zookeeper 是一个开源的分布式的，为分布式框架提供协调服务的 Apache 项目。 工作机制：Zookeeper从设计模式角度来理解：是一个基 于观察者模式设计的分","tags":["Zookeeper"],"title":"1、Zookeeper入门（Zookeeper）","type":"post","url":"/post/871zookeeper%E5%85%A5%E9%97%A8/","weight":0,"wordcount":328},{"author":null,"categories":["学习"],"content":"","date":1631232000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":7000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1631232000,"objectID":"c9454cf31646fb20b829159355876110","permalink":"https://yiguan1573.github.io/post/883docker%E8%AF%A6%E8%A7%A3/","publishdate":"2021-09-10T00:00:00Z","readingtime":14,"relpermalink":"/post/883docker%E8%AF%A6%E8%A7%A3/","section":"post","summary":"概述 开发需要清楚的告诉运维部署团队，用的全部配置文件+所有软件环境。不过，即便如此，仍然常常发生部署失败的状况。Docker镜 像的设计，使得","tags":["java","Docker"],"title":"2、Doker详解（Docker）","type":"post","url":"/post/883docker%E8%AF%A6%E8%A7%A3/","weight":0,"wordcount":6987},{"author":null,"categories":["学习"],"content":"","date":1631145600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":6200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1631145600,"objectID":"4b7315a0848f795199f7bef8c8ee24ab","permalink":"https://yiguan1573.github.io/post/882java8%E6%96%B0%E7%89%B9%E6%80%A7/","publishdate":"2021-09-09T00:00:00Z","readingtime":13,"relpermalink":"/post/882java8%E6%96%B0%E7%89%B9%E6%80%A7/","section":"post","summary":"概述 生态 Lambda 表达式 函数式接口 方法引用 / 构造器引用 Stream API 接口中的默认方法 / 静态方法 新时间日期 API 其他新特性 新特性 速度更快 代码更少 强大的 Stream API 便于并行 最","tags":["java"],"title":"2、Java8新特性（Java8）","type":"post","url":"/post/882java8%E6%96%B0%E7%89%B9%E6%80%A7/","weight":0,"wordcount":6166},{"author":null,"categories":["学习"],"content":"","date":1631059200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1631059200,"objectID":"414d70a15953f526c8f001045ca1f8e2","permalink":"https://yiguan1573.github.io/post/881java7%E6%96%B0%E7%89%B9%E6%80%A7/","publishdate":"2021-09-08T00:00:00Z","readingtime":1,"relpermalink":"/post/881java7%E6%96%B0%E7%89%B9%E6%80%A7/","section":"post","summary":"概述 泛型实例的创建可以通过类型推断来简化，可以去掉后面new部分的泛型类型，只用\u0026lt;\u0026gt;就可以了。 并发工具增强： fork-join框","tags":["java"],"title":"2、Java7新特性（Java7）","type":"post","url":"/post/881java7%E6%96%B0%E7%89%B9%E6%80%A7/","weight":0,"wordcount":492},{"author":null,"categories":["学习"],"content":"","date":1627430400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1627430400,"objectID":"ced9dd82b5f867d5dc845944fb28d5d8","permalink":"https://yiguan1573.github.io/post/852springcloud%E8%B8%A9%E5%9D%91%E6%88%96%E7%BB%8F%E9%AA%8C%E8%AE%B0%E5%BD%95/","publishdate":"2021-07-28T00:00:00Z","readingtime":2,"relpermalink":"/post/852springcloud%E8%B8%A9%E5%9D%91%E6%88%96%E7%BB%8F%E9%AA%8C%E8%AE%B0%E5%BD%95/","section":"post","summary":"引入OpenFeign启动项目报错 Error creating bean with name \u0026lsquo;com.yiguan.service.users.TestService\u0026rsquo;: FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Method has too many Body parameters: public abstract java.lang.String com.yiguan.service.users.TestService.getConfig(java.lang.String,java.lang.String) 原来是在@FeignClient()接口类中，使用@R","tags":["SpringCloud","项目"],"title":"2、springcloud踩坑或经验记录（SpringCloud）","type":"post","url":"/post/852springcloud%E8%B8%A9%E5%9D%91%E6%88%96%E7%BB%8F%E9%AA%8C%E8%AE%B0%E5%BD%95/","weight":0,"wordcount":979},{"author":null,"categories":["学习"],"content":"","date":1626739200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1626739200,"objectID":"8d3e8210d578f4984f3734e547cb01c0","permalink":"https://yiguan1573.github.io/post/908%E6%89%A9%E5%B1%95/","publishdate":"2021-07-20T00:00:00Z","readingtime":6,"relpermalink":"/post/908%E6%89%A9%E5%B1%95/","section":"post","summary":"1. setState setState更新状态的2种写法 (1). setState(stateChange, [callback])------对象式的setState 1.stateChange为状态改变对象","tags":["React"],"title":"8、React扩展（React）","type":"post","url":"/post/908%E6%89%A9%E5%B1%95/","weight":0,"wordcount":2550},{"author":null,"categories":["学习"],"content":"","date":1626652800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1626652800,"objectID":"b47367c57c8a2abbe886cf48ffae01e6","permalink":"https://yiguan1573.github.io/post/907redux/","publishdate":"2021-07-19T00:00:00Z","readingtime":6,"relpermalink":"/post/907redux/","section":"post","summary":"简介 redux是一个专门用于做状态管理的JS库(不是react插件库)，它可以用在react, angular, vue等项目中, 但基本与react配合使用，","tags":["React"],"title":"7、redux（React）","type":"post","url":"/post/907redux/","weight":0,"wordcount":2832},{"author":null,"categories":["学习"],"content":"","date":1626480000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1626480000,"objectID":"246c55624405b41c7ed4351c070b527b","permalink":"https://yiguan1573.github.io/post/906react-ui%E7%BB%84%E4%BB%B6%E5%BA%93/","publishdate":"2021-07-17T00:00:00Z","readingtime":1,"relpermalink":"/post/906react-ui%E7%BB%84%E4%BB%B6%E5%BA%93/","section":"post","summary":"antd的按需引入+自定主题 安装依赖：yarn add react-app-rewired customize-cra babel-plugin-import less less-loader 修改package.json \u0026quot;scripts\u0026quot;: { \u0026quot;start\u0026quot;: \u0026quot;react-app-rewired start\u0026quot;, \u0026quot;build\u0026quot;: \u0026quot;react-app-rewired build\u0026quot;, \u0026quot;test\u0026quot;: \u0026quot;react-app-rewired test\u0026quot;, \u0026quot;eject\u0026quot;: \u0026quot;react-scripts eject\u0026quot; }, 根目录下创建config","tags":["React"],"title":"6、React UI组件库（React）","type":"post","url":"/post/906react-ui%E7%BB%84%E4%BB%B6%E5%BA%93/","weight":0,"wordcount":179},{"author":null,"categories":["学习"],"content":"","date":1626393600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1626393600,"objectID":"207b4108622703229e0e31bb96ff0710","permalink":"https://yiguan1573.github.io/post/905react%E8%B7%AF%E7%94%B1/","publishdate":"2021-07-16T00:00:00Z","readingtime":5,"relpermalink":"/post/905react%E8%B7%AF%E7%94%B1/","section":"post","summary":"简介 理解：一个路由就是一个映射关系(key:value)，key为路径, value可能是function或component。 后端路由： 理解","tags":["React"],"title":"5、React路由（React）","type":"post","url":"/post/905react%E8%B7%AF%E7%94%B1/","weight":0,"wordcount":2023},{"author":null,"categories":["学习"],"content":"","date":1626307200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1626307200,"objectID":"d106f05082b912ed8de210326896fe57","permalink":"https://yiguan1573.github.io/post/904react%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/","publishdate":"2021-07-15T00:00:00Z","readingtime":2,"relpermalink":"/post/904react%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/","section":"post","summary":"简介 React本身只关注于界面, 并不包含发送ajax请求的代码，react应用中需要集成第三方ajax库(或自己封装) 常用的ajax请求库 jQuery:","tags":["React"],"title":"4、React网络请求（React）","type":"post","url":"/post/904react%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/","weight":0,"wordcount":507},{"author":null,"categories":["学习"],"content":"","date":1626220800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1626220800,"objectID":"9c7e3690569a5c4e0eb026592dc6ef73","permalink":"https://yiguan1573.github.io/post/903react%E5%BA%94%E7%94%A8/","publishdate":"2021-07-14T00:00:00Z","readingtime":3,"relpermalink":"/post/903react%E5%BA%94%E7%94%A8/","section":"post","summary":"使用create-react-app创建react应用 创建项目并启动 第一步，全局安装：npm i -g create-react-app 第二步，切换到想创项目的目录，使用命令：c","tags":["React"],"title":"3、React应用（React）","type":"post","url":"/post/903react%E5%BA%94%E7%94%A8/","weight":0,"wordcount":1008},{"author":null,"categories":["学习"],"content":"","date":1626134400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":12100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1626134400,"objectID":"8f2ef5464d1020992c3d95e806be393d","permalink":"https://yiguan1573.github.io/post/902react%E9%9D%A2%E5%90%91%E7%BB%84%E4%BB%B6%E7%BC%96%E7%A8%8B/","publishdate":"2021-07-13T00:00:00Z","readingtime":24,"relpermalink":"/post/902react%E9%9D%A2%E5%90%91%E7%BB%84%E4%BB%B6%E7%BC%96%E7%A8%8B/","section":"post","summary":"基本理解和使用 注意：组件名必须首字母大写、虚拟DOM元素只能有一个根元素、虚拟DOM元素必须有结束标签。 函数式组件 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;ti","tags":["React"],"title":"2、React面向组件编程（React）","type":"post","url":"/post/902react%E9%9D%A2%E5%90%91%E7%BB%84%E4%BB%B6%E7%BC%96%E7%A8%8B/","weight":0,"wordcount":12000},{"author":null,"categories":["学习"],"content":"","date":1626048000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1626048000,"objectID":"4c3fd476df2543cee1eb7c5ed5753f30","permalink":"https://yiguan1573.github.io/post/901react%E5%85%A5%E9%97%A8/","publishdate":"2021-07-12T00:00:00Z","readingtime":4,"relpermalink":"/post/901react%E5%85%A5%E9%97%A8/","section":"post","summary":"React简介 描述 用于动态构建用户界面的 JavaScript 库(只关注于视图) 由Facebook开源 特点 声明式编码 组件化编码 React Native 编写原生应用 高效（优秀的Dif","tags":["React"],"title":"1、React入门（React）","type":"post","url":"/post/901react%E5%85%A5%E9%97%A8/","weight":0,"wordcount":1916},{"author":null,"categories":["学习"],"content":"","date":1625616000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1625616000,"objectID":"71b7a2c5118dd5c47c6b7c05574abb8b","permalink":"https://yiguan1573.github.io/post/862%E7%B4%A2%E5%BC%95/","publishdate":"2021-07-07T00:00:00Z","readingtime":1,"relpermalink":"/post/862%E7%B4%A2%E5%BC%95/","section":"post","summary":"索引","tags":["MySQL"],"title":"2、索引（MySQL）","type":"post","url":"/post/862%E7%B4%A2%E5%BC%95/","weight":0,"wordcount":2},{"author":null,"categories":["学习"],"content":"","date":1625529600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1625529600,"objectID":"99c279a465e611fd2b82aebe9be5eac4","permalink":"https://yiguan1573.github.io/post/861%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/","publishdate":"2021-07-06T00:00:00Z","readingtime":4,"relpermalink":"/post/861%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/","section":"post","summary":"环境介绍 LNMP（centos7，mysql5.6） vmware workstation pro配置了3个虚拟机，均安装了LNMP环境： master： 192.168.0.105 slave： 192.168.0.106 、192","tags":["MySQL"],"title":"1、主从复制（MySQL）","type":"post","url":"/post/861%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/","weight":0,"wordcount":1589},{"author":null,"categories":["学习"],"content":"","date":1617494400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1617494400,"objectID":"cdc8fe774e8b123665112dbaeccc4748","permalink":"https://yiguan1573.github.io/post/824%E7%BB%8F%E6%B5%8E%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/","publishdate":"2021-04-04T00:00:00Z","readingtime":3,"relpermalink":"/post/824%E7%BB%8F%E6%B5%8E%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/","section":"post","summary":"docker安装postgreSQL Linux环境下使用Docker安装Postgresql12 postgreSQL设置主键自增 postgr","tags":["项目"],"title":"4、经济管理系统","type":"post","url":"/post/824%E7%BB%8F%E6%B5%8E%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/","weight":0,"wordcount":1072},{"author":null,"categories":["学习"],"content":"","date":1616457600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1616457600,"objectID":"9ae5ff2001116e83641d05440df4d3e4","permalink":"https://yiguan1573.github.io/post/851springcloud/","publishdate":"2021-03-23T00:00:00Z","readingtime":1,"relpermalink":"/post/851springcloud/","section":"post","summary":"springcloud课程笔记","tags":["SpringCloud"],"title":"1、springcloud笔记（SpringCloud）","type":"post","url":"/post/851springcloud/","weight":0,"wordcount":15},{"author":null,"categories":["学习"],"content":"","date":1614729600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1614729600,"objectID":"676b7b5fc10862df4d692b2aaf9a9659","permalink":"https://yiguan1573.github.io/post/823%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E6%8B%BC%E8%BD%A6app%E5%AE%A2%E6%88%B7%E7%AB%AF/","publishdate":"2021-03-03T00:00:00Z","readingtime":6,"relpermalink":"/post/823%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E6%8B%BC%E8%BD%A6app%E5%AE%A2%E6%88%B7%E7%AB%AF/","section":"post","summary":"正则表达式验证密码问题 问题：js正则表达式test第一次为true，第二次为false 解决办法：重新创建一个正则表达式 原因：为什么使用正则t","tags":["项目"],"title":"3、毕业设计（拼车app客户端）","type":"post","url":"/post/823%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E6%8B%BC%E8%BD%A6app%E5%AE%A2%E6%88%B7%E7%AB%AF/","weight":0,"wordcount":2969},{"author":null,"categories":["学习"],"content":"","date":1612224000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1612224000,"objectID":"0801c8eec3cbb1c9a565d013bc14e792","permalink":"https://yiguan1573.github.io/post/662mybatis-plus/","publishdate":"2021-02-02T00:00:00Z","readingtime":1,"relpermalink":"/post/662mybatis-plus/","section":"post","summary":"官方文档 条件构造器","tags":["MyBatis-plus"],"title":"12、Mybatis-plus(MyBatis)","type":"post","url":"/post/662mybatis-plus/","weight":0,"wordcount":9},{"author":null,"categories":["学习"],"content":"","date":1612137600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1612137600,"objectID":"c7f6e4026c0182620b1e57b6a02b1841","permalink":"https://yiguan1573.github.io/post/617spring-boot2/","publishdate":"2021-02-01T00:00:00Z","readingtime":1,"relpermalink":"/post/617spring-boot2/","section":"post","summary":"springboot2资料","tags":["SpringBoot"],"title":"17、Spring Boot2(SpringBoot)","type":"post","url":"/post/617spring-boot2/","weight":0,"wordcount":13},{"author":null,"categories":["学习"],"content":"","date":1611446400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1611446400,"objectID":"eac14bbb3dbfb257954ba5090919cafd","permalink":"https://yiguan1573.github.io/post/822%E6%89%AB%E4%B9%A6%E9%A1%B9%E7%9B%AE-%E5%90%8E%E7%AB%AF/","publishdate":"2021-01-24T00:00:00Z","readingtime":5,"relpermalink":"/post/822%E6%89%AB%E4%B9%A6%E9%A1%B9%E7%9B%AE-%E5%90%8E%E7%AB%AF/","section":"post","summary":"警告：Establishing SSL connection without server’s identity verification is not recommended SpringBoot启动时报红 Mon Jun 04 00:53:48 CST 2018 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+","tags":["项目"],"title":"2、后端(扫书项目)","type":"post","url":"/post/822%E6%89%AB%E4%B9%A6%E9%A1%B9%E7%9B%AE-%E5%90%8E%E7%AB%AF/","weight":0,"wordcount":2459},{"author":null,"categories":["学习"],"content":"","date":1609977600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1609977600,"objectID":"6438bed4777296edecbdd26d6e7702ad","permalink":"https://yiguan1573.github.io/post/819shiro%E5%85%B6%E4%BB%96/","publishdate":"2021-01-07T00:00:00Z","readingtime":0,"relpermalink":"/post/819shiro%E5%85%B6%E4%BB%96/","section":"post","summary":"","tags":["Shiro","JWT"],"title":"2、Shiro其他(Shiro)","type":"post","url":"/post/819shiro%E5%85%B6%E4%BB%96/","weight":0,"wordcount":0},{"author":null,"categories":["学习"],"content":"","date":1609891200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1609891200,"objectID":"741737fe498a88cd35cdd19e4b8b561d","permalink":"https://yiguan1573.github.io/post/818shiro/","publishdate":"2021-01-06T00:00:00Z","readingtime":1,"relpermalink":"/post/818shiro/","section":"post","summary":"Shiro Shiro中文文档 SpringBoot整合Shiro Shiro认证流程 Springboot +Shiro +VUE 前后端分离式权限管理系统 登录拦截 JWT 概念 使用 JWT 生成 Token 代码示例 使用","tags":["Shiro","JWT"],"title":"1、Shiro+JWT(Shiro)","type":"post","url":"/post/818shiro/","weight":0,"wordcount":168},{"author":null,"categories":["学习"],"content":"","date":1606176000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":4500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1606176000,"objectID":"c0d6d312ef8684d2de3b245d2d421b76","permalink":"https://yiguan1573.github.io/post/821%E6%89%AB%E4%B9%A6%E9%A1%B9%E7%9B%AE-%E5%89%8D%E7%AB%AF/","publishdate":"2020-11-24T00:00:00Z","readingtime":9,"relpermalink":"/post/821%E6%89%AB%E4%B9%A6%E9%A1%B9%E7%9B%AE-%E5%89%8D%E7%AB%AF/","section":"post","summary":"el-popover点击里面的文本时 文本会有一个框 解决：在显示的标签盒子加以下属性 Vue 引用 animate.css 动画不生效 不能安装最新版本 npm install animate.css@3.5.1 --save Vue文件中全局","tags":["项目"],"title":"1、前端(扫书项目)","type":"post","url":"/post/821%E6%89%AB%E4%B9%A6%E9%A1%B9%E7%9B%AE-%E5%89%8D%E7%AB%AF/","weight":0,"wordcount":4453},{"author":null,"categories":["学习"],"content":"","date":1601769600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1601769600,"objectID":"35c417f8015eb173a9b6a8d1c6e7d7d7","permalink":"https://yiguan1573.github.io/post/817nginx%E5%8E%9F%E7%90%86/","publishdate":"2020-10-04T00:00:00Z","readingtime":1,"relpermalink":"/post/817nginx%E5%8E%9F%E7%90%86/","section":"post","summary":"Nginx原理 mater 和 worker worker 如何进行工作的 一个 master 和多个 woker 有好处 可以使用 nginx –s reload 热部署，利用 nginx 进行热部署操作 每个 woker 是独立的进程，如果有其中的一个 woker 出","tags":["Nginx"],"title":"7、nginx原理(Nginx)","type":"post","url":"/post/817nginx%E5%8E%9F%E7%90%86/","weight":0,"wordcount":247},{"author":null,"categories":["学习"],"content":"","date":1601683200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1601683200,"objectID":"587ff573bced1fdb2eb243351020194b","permalink":"https://yiguan1573.github.io/post/816nginx%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/","publishdate":"2020-10-03T00:00:00Z","readingtime":1,"relpermalink":"/post/816nginx%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/","section":"post","summary":"nginx 高可用 原理如下，当主master宕机后使用备用的nginx 需要两台 nginx 服务器 需要 keepalived 需要虚拟 ip 配置高可用的准备工作 需要两台服务器 192.168.17.129 和 192.168.17.131 在两台服","tags":["Nginx"],"title":"6、nginx配置高可用的集群(Nginx)","type":"post","url":"/post/816nginx%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/","weight":0,"wordcount":481},{"author":null,"categories":["学习"],"content":"","date":1601596800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1601596800,"objectID":"07e4123c07e04b22d848f2f8c6402126","permalink":"https://yiguan1573.github.io/post/815%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/","publishdate":"2020-10-02T00:00:00Z","readingtime":1,"relpermalink":"/post/815%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/","section":"post","summary":"动静分离 Nginx 动静分离简单来说就是把动态跟静态请求分开，不能理解成只是单纯的把动态页面和静态页面物理分离。严格意义上说应该是动态请求跟静态请求分","tags":["Nginx"],"title":"5、nginx动静分离(Nginx)","type":"post","url":"/post/815%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/","weight":0,"wordcount":373},{"author":null,"categories":["学习"],"content":"","date":1601510400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1601510400,"objectID":"149834859de28f09dc94aa3d4a8a5924","permalink":"https://yiguan1573.github.io/post/814nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/","publishdate":"2020-10-01T00:00:00Z","readingtime":1,"relpermalink":"/post/814nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/","section":"post","summary":"负载均衡 实现效果，浏览器地址栏输入地址 http://192.168.17.129/edu/a.html，负载均衡效果，平均8080和8081","tags":["Nginx"],"title":"4、nginx负载均衡(Nginx)","type":"post","url":"/post/814nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/","weight":0,"wordcount":404},{"author":null,"categories":["学习"],"content":"","date":1601251200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1601251200,"objectID":"ca4bd9784bee35cd203d7595d46a5b6f","permalink":"https://yiguan1573.github.io/post/813nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/","publishdate":"2020-09-28T00:00:00Z","readingtime":2,"relpermalink":"/post/813nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/","section":"post","summary":"反向代理实例一 实现效果，打开浏览器，在浏览器地址栏输入地址 www.123.com，跳转到 liunx 系统 tomcat 主页面中 准备工作，安装并启动tomcat服务","tags":["Nginx"],"title":"3、nginx反向代理(Nginx)","type":"post","url":"/post/813nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/","weight":0,"wordcount":512},{"author":null,"categories":["学习"],"content":"","date":1601164800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1601164800,"objectID":"eb3ddf7a2da9ebad774c4c0268d2a8fe","permalink":"https://yiguan1573.github.io/post/812nginx%E5%AE%89%E8%A3%85/","publishdate":"2020-09-27T00:00:00Z","readingtime":1,"relpermalink":"/post/812nginx%E5%AE%89%E8%A3%85/","section":"post","summary":"安装步骤 docker search nginx 命令来查看可用版本 docker pull nginx:latest 拉取官方的最新版本的镜像 docker run \u0026ndash;name nginx -p 3737:80 -d nginx将本地 3737 端口映射到容器内部的 80 端口并启动(映射配置文件","tags":["Nginx"],"title":"2、nginx安装(Nginx)","type":"post","url":"/post/812nginx%E5%AE%89%E8%A3%85/","weight":0,"wordcount":443},{"author":null,"categories":["学习"],"content":"","date":1601078400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1601078400,"objectID":"3e9748c3ec80e2381f39ac14e4a46554","permalink":"https://yiguan1573.github.io/post/811nginx%E7%AE%80%E4%BB%8B/","publishdate":"2020-09-26T00:00:00Z","readingtime":2,"relpermalink":"/post/811nginx%E7%AE%80%E4%BB%8B/","section":"post","summary":"Nginx简介 Nginx (\u0026ldquo;engine x\u0026rdquo;) 是一个高性能的 HTTP 和反向代理服务器,特点是占有内存少，并发能力强，事实上 nginx 的并发能力确实在同类型的网页服务器中表现较好，国","tags":["Nginx"],"title":"1、nginx简介(Nginx)","type":"post","url":"/post/811nginx%E7%AE%80%E4%BB%8B/","weight":0,"wordcount":733},{"author":null,"categories":["学习"],"content":"","date":1600905600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1600905600,"objectID":"38baaa602eb68b9985d463f1a52e824e","permalink":"https://yiguan1573.github.io/post/810axios/","publishdate":"2020-09-24T00:00:00Z","readingtime":3,"relpermalink":"/post/810axios/","section":"post","summary":"axios的基本使用 功能特点: 在浏览器中发送 XMLHttpRequests 请求 在 node.js 中发送 http请求 支持 Promise API 拦截请求和响应 转换请求和响应数据 支持多种请求方式: axios(config) axios.request(config) axios.get(url[, config]) axios.delete(url[,","tags":["Vue"],"title":"10、axios(Vue)","type":"post","url":"/post/810axios/","weight":0,"wordcount":1008},{"author":null,"categories":["学习"],"content":"","date":1600819200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1600819200,"objectID":"6c3a2b9a7014ddeb5518a35fbf06eeb6","permalink":"https://yiguan1573.github.io/post/809vuex/","publishdate":"2020-09-23T00:00:00Z","readingtime":4,"relpermalink":"/post/809vuex/","section":"post","summary":"Vuex Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式 如果多个组件都需要依赖同一个状态，就要将共享的状态抽取出来，交给vuex统一进行管理 Vuex核心概","tags":["Vue"],"title":"9、Vuex(Vue)","type":"post","url":"/post/809vuex/","weight":0,"wordcount":1627},{"author":null,"categories":["学习"],"content":"","date":1600732800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1600732800,"objectID":"1f4ba6d449fd330a6afe9106f3e53952","permalink":"https://yiguan1573.github.io/post/808promise/","publishdate":"2020-09-22T00:00:00Z","readingtime":2,"relpermalink":"/post/808promise/","section":"post","summary":"简介 Promise是异步编程的一种解决方案 一种很常见的场景应该就是网络请求了。在封装一个网络请求的函数，因为不能立即拿到结果，不能像简单的3","tags":["Vue"],"title":"8、Promise(Vue)","type":"post","url":"/post/808promise/","weight":0,"wordcount":746},{"author":null,"categories":["学习"],"content":"","date":1600646400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1600646400,"objectID":"c7d199cf24e14c7d2d7ef563a24bf9e4","permalink":"https://yiguan1573.github.io/post/807vue-router/","publishdate":"2020-09-21T00:00:00Z","readingtime":7,"relpermalink":"/post/807vue-router/","section":"post","summary":"路由的简介 后端路由 早期的网站开发整个HTML页面是由服务器来渲染的,服务器直接生产渲染好对应的HTML页面, 返回给客户端进行展示 一个页面有自","tags":["Vue"],"title":"7、vue-router(Vue)","type":"post","url":"/post/807vue-router/","weight":0,"wordcount":3352},{"author":null,"categories":["学习"],"content":"","date":1600560000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1600560000,"objectID":"1d04dd936b4a477b1bef87107d00f367","permalink":"https://yiguan1573.github.io/post/806vue-cli/","publishdate":"2020-09-20T00:00:00Z","readingtime":2,"relpermalink":"/post/806vue-cli/","section":"post","summary":"Vue CLI简介 CLI是Command-Line Interface, 翻译为命令行界面, 但是俗称脚手架 Vue CLI是一个官方发布 vue.js 项目脚手架，使用 vue-cli 可以快速搭建Vue开","tags":["Vue"],"title":"6、Vue CLI(Vue)","type":"post","url":"/post/806vue-cli/","weight":0,"wordcount":753},{"author":null,"categories":["学习"],"content":"","date":1600128000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":5400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1600128000,"objectID":"005dcd0fc3d71ede883ce17742e56538","permalink":"https://yiguan1573.github.io/post/805webpack/","publishdate":"2020-09-15T00:00:00Z","readingtime":11,"relpermalink":"/post/805webpack/","section":"post","summary":"webpack简介 从本质上来讲，webpack是一个现代的JavaScript应用的静态模块打包工具 前端模块化 在ES6之前，我们要想进行模块","tags":["Vue"],"title":"5、webpack(Vue)","type":"post","url":"/post/805webpack/","weight":0,"wordcount":5399},{"author":null,"categories":["学习"],"content":"","date":1600041600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1600041600,"objectID":"d20c88a79d6a69c719aefb1d6e8b3676","permalink":"https://yiguan1573.github.io/post/804%E6%A8%A1%E5%9D%97%E5%8C%96/","publishdate":"2020-09-14T00:00:00Z","readingtime":2,"relpermalink":"/post/804%E6%A8%A1%E5%9D%97%E5%8C%96/","section":"post","summary":"引入 在网页开发的早期，js制作作为一种脚本语言，做一些简单的表单验证或动画实现等，那个时候代码还是很少的 随着ajax异步请求的出现，慢慢形成","tags":["Vue"],"title":"4、模块化(Vue)","type":"post","url":"/post/804%E6%A8%A1%E5%9D%97%E5%8C%96/","weight":0,"wordcount":675},{"author":null,"categories":["学习"],"content":"","date":1599955200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1599955200,"objectID":"40eeec47159e4e8bff78186aef564447","permalink":"https://yiguan1573.github.io/post/803%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91/","publishdate":"2020-09-13T00:00:00Z","readingtime":7,"relpermalink":"/post/803%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91/","section":"post","summary":"Vue组件化思想 组件化是Vue.js中的重要思想 它提供了一种抽象，让我们可以开发出一个个独立可复用的小组件来构造我们的应用。 任何的应用都会被","tags":["Vue"],"title":"3、组件化开发(Vue)","type":"post","url":"/post/803%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91/","weight":0,"wordcount":3111},{"author":null,"categories":["学习"],"content":"","date":1599696000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":4000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1599696000,"objectID":"dd042d2133acf03093b8838f13deb93a","permalink":"https://yiguan1573.github.io/post/802vue%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/","publishdate":"2020-09-10T00:00:00Z","readingtime":8,"relpermalink":"/post/802vue%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/","section":"post","summary":"插值操作 Mustache Mustache: 胡子/胡须 可以通过Mustache语法(也就是双大括号)将data中的文本数据，插入到HTML中 v-once 在某些情况下，我们可能不希望界","tags":["Vue"],"title":"2、Vue基础语法(Vue)","type":"post","url":"/post/802vue%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/","weight":0,"wordcount":3913},{"author":null,"categories":["学习"],"content":"","date":1599609600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1599609600,"objectID":"0157bc83cf8eea6c695b50935edf7df3","permalink":"https://yiguan1573.github.io/post/801vue%E7%AE%80%E4%BB%8B/","publishdate":"2020-09-09T00:00:00Z","readingtime":3,"relpermalink":"/post/801vue%E7%AE%80%E4%BB%8B/","section":"post","summary":"认识Vuejs Vue (读音 /vjuː/，类似于 view)，不要读错。 Vue是一个渐进式的框架，什么是渐进式的呢？ 渐进式意味着你可以将Vue作为你","tags":["Vue"],"title":"1、Vue简介(Vue)","type":"post","url":"/post/801vue%E7%AE%80%E4%BB%8B/","weight":0,"wordcount":1344},{"author":null,"categories":["学习"],"content":"","date":1599523200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1599523200,"objectID":"7c6abccbf58cac29f17b21096285a7da","permalink":"https://yiguan1573.github.io/post/725%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F/","publishdate":"2020-09-08T00:00:00Z","readingtime":3,"relpermalink":"/post/725%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F/","section":"post","summary":"学校 OA 系统的采购审批项目：需求是 如果金额 小于等于 5000, 由教学主任审批 （0\u0026lt;=x\u0026lt;=5000） 如果金额 小于等于 10000, 由院长审批 (5000\u0026lt;x\u0026lt;=10000) 如果金额 小","tags":["设计模式"],"title":"25、职责链模式(设计模式)","type":"post","url":"/post/725%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":1132},{"author":null,"categories":["学习"],"content":"","date":1599436800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1599436800,"objectID":"7b5e77c3fdea53298f97e47d2e55d274","permalink":"https://yiguan1573.github.io/post/724%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/","publishdate":"2020-09-07T00:00:00Z","readingtime":2,"relpermalink":"/post/724%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/","section":"post","summary":"编写鸭子项目，具体要求如下 有各种鸭子(比如 野鸭、北京鸭、水鸭等， 鸭子有各种行为，比如 叫、飞行等) 显示鸭子的信息 传统方案解决鸭子问题的分析和代","tags":["设计模式"],"title":"24、策略模式(设计模式)","type":"post","url":"/post/724%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":903},{"author":null,"categories":["学习"],"content":"","date":1599350400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1599350400,"objectID":"9b470a38b64881498cab7ad7a522e5d3","permalink":"https://yiguan1573.github.io/post/723%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/","publishdate":"2020-09-06T00:00:00Z","readingtime":2,"relpermalink":"/post/723%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/","section":"post","summary":"APP 抽奖活动问题 假如每参加一次这个活动要扣除用户 50 积分，中奖概率是 10% 奖品数量固定，抽完就不能抽奖 活动有四个状态: 可以抽奖、不能抽奖、发放奖品和","tags":["设计模式"],"title":"23、状态模式(设计模式)","type":"post","url":"/post/723%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":732},{"author":null,"categories":["学习"],"content":"","date":1599264000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1599264000,"objectID":"4a024fb40c510be5905075cb4a0eb2b4","permalink":"https://yiguan1573.github.io/post/722%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/","publishdate":"2020-09-05T00:00:00Z","readingtime":2,"relpermalink":"/post/722%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/","section":"post","summary":"四则运算问题 通过解释器模式来实现四则运算，如计算 a+b-c 的值，具体要求 先输入表达式的形式，比如 a+b+c-d+e, 要求表达式的字母不能重复 在分别输入 a ,b, c, d, e 的值 最","tags":["设计模式"],"title":"22、解释器模式(设计模式)","type":"post","url":"/post/722%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":901},{"author":null,"categories":["学习"],"content":"","date":1599177600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1599177600,"objectID":"597a34be3d488c759360b27216ee111e","permalink":"https://yiguan1573.github.io/post/721%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/","publishdate":"2020-09-04T00:00:00Z","readingtime":2,"relpermalink":"/post/721%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/","section":"post","summary":"游戏角色状态恢复问题 游戏角色有攻击力和防御力，在大战 Boss 前保存自身的状态(攻击力和防御力)，当大战 Boss 后攻击力和防御力下降，从备忘录对象恢复到大","tags":["设计模式"],"title":"21、备忘录模式(设计模式)","type":"post","url":"/post/721%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":892},{"author":null,"categories":["学习"],"content":"","date":1599091200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1599091200,"objectID":"08171063fff9a265e0590361f7d57362","permalink":"https://yiguan1573.github.io/post/720%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/","publishdate":"2020-09-03T00:00:00Z","readingtime":2,"relpermalink":"/post/720%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/","section":"post","summary":"智能家庭项目 智能家庭包括各种设备，闹钟、咖啡机、电视机、窗帘 等 主人要看电视时，各个设备可以协同工作，自动完成看电视的准备工作，比如流程为：闹","tags":["设计模式"],"title":"20、中介者模式(设计模式)","type":"post","url":"/post/720%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":799},{"author":null,"categories":["学习"],"content":"","date":1599004800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1599004800,"objectID":"3de5d7cda939e77da2380dee4d520b35","permalink":"https://yiguan1573.github.io/post/719%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","publishdate":"2020-09-02T00:00:00Z","readingtime":2,"relpermalink":"/post/719%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","section":"post","summary":"天气预报项目需求 气象站可以将每天测量到的温度，湿度，气压等等以公告的形式发布出去(比如发布到自己的网站或第三方)。 需要设计开放型 API，便于","tags":["设计模式"],"title":"19、观察者模式(设计模式)","type":"post","url":"/post/719%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":772},{"author":null,"categories":["学习"],"content":"","date":1598918400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598918400,"objectID":"7d7b7057039995930e04d861d50a9816","permalink":"https://yiguan1573.github.io/post/718%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/","publishdate":"2020-09-01T00:00:00Z","readingtime":3,"relpermalink":"/post/718%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/","section":"post","summary":"需求 编写程序展示一个学校院系结构：需求是这样，要在一个页面中展示出学校的院系组成，一个学校有多个学院， 一个学院有多个系。如图： 传统的设计方案","tags":["设计模式"],"title":"18、迭代器模式(设计模式)","type":"post","url":"/post/718%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":1033},{"author":null,"categories":["学习"],"content":"","date":1598832000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598832000,"objectID":"64b0cd2f6ed4636d1efb2771be5a09e9","permalink":"https://yiguan1573.github.io/post/717%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/","publishdate":"2020-08-31T00:00:00Z","readingtime":2,"relpermalink":"/post/717%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/","section":"post","summary":"测评系统的需求 将观众分为男人和女人，对歌手进行测评，当看完某个歌手表演后，得到他们对该歌手不同的评价(评价有不同的种类，比如 成功、失败等) 传","tags":["设计模式"],"title":"17、访问者模式(设计模式)","type":"post","url":"/post/717%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":879},{"author":null,"categories":["学习"],"content":"","date":1598745600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598745600,"objectID":"e2f5d79e16991027a20d2ae74a7f08ca","permalink":"https://yiguan1573.github.io/post/716%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/","publishdate":"2020-08-30T00:00:00Z","readingtime":3,"relpermalink":"/post/716%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/","section":"post","summary":"智能生活项目需求 我们买了一套智能家电，有照明灯、风扇、冰箱、洗衣机，我们只要在手机上安装 app 就可以控制对这些家电工作。 这些智能家电来自不同的厂","tags":["设计模式"],"title":"16、命令模式(设计模式)","type":"post","url":"/post/716%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":1257},{"author":null,"categories":["学习"],"content":"","date":1598659200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598659200,"objectID":"cfd99aa0c5df1775016c4e136cde9e5b","permalink":"https://yiguan1573.github.io/post/715%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/","publishdate":"2020-08-29T00:00:00Z","readingtime":3,"relpermalink":"/post/715%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/","section":"post","summary":"豆浆制作问题 制作豆浆的流程 选材\u0026mdash;\u0026gt;添加配料\u0026mdash;\u0026gt;浸泡\u0026mdash;\u0026gt;放到豆浆机打碎 通过添加不同的配料","tags":["设计模式"],"title":"15、模板方法模式(设计模式)","type":"post","url":"/post/715%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":1426},{"author":null,"categories":["学习"],"content":"","date":1598572800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598572800,"objectID":"8d564b419ca6e998cd835eeee111aad9","permalink":"https://yiguan1573.github.io/post/714%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/","publishdate":"2020-08-28T00:00:00Z","readingtime":4,"relpermalink":"/post/714%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/","section":"post","summary":"代理模式(Proxy) 代理模式的基本介绍 代理模式：为一个对象提供一个替身，以控制对这个对象的访问。即通过代理对象访问目标对象.这样做的好处是","tags":["设计模式"],"title":"14、代理模式(设计模式)","type":"post","url":"/post/714%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":1719},{"author":null,"categories":["学习"],"content":"","date":1598486400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598486400,"objectID":"0098b93e067f011a559c7f0c50b19185","permalink":"https://yiguan1573.github.io/post/713%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/","publishdate":"2020-08-27T00:00:00Z","readingtime":4,"relpermalink":"/post/713%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/","section":"post","summary":"展示网站项目需求 小型的外包项目，给客户 A 做一个产品展示网站，客户 A 的朋友感觉效果不错，也希望做这样的产品展示网站，但是要求都有些不同： 有客户","tags":["设计模式"],"title":"13、享元模式(设计模式)","type":"post","url":"/post/713%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":1570},{"author":null,"categories":["学习"],"content":"","date":1598486400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598486400,"objectID":"0efdc198d616865b190bcd5e11b2d058","permalink":"https://yiguan1573.github.io/post/744hashmap/","publishdate":"2020-08-27T00:00:00Z","readingtime":3,"relpermalink":"/post/744hashmap/","section":"post","summary":"Hash冲突的四种解决办法 哈希表简介 非哈希表的特点：关键字在表中的位置和它自检不存在一个确定的关系，查找的过程为给定值一次和各个关系自进行比","tags":["数据结构与算法"],"title":"14、HashMap(数据结构与算法)","type":"post","url":"/post/744hashmap/","weight":0,"wordcount":1036},{"author":null,"categories":["学习"],"content":"","date":1598400000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598400000,"objectID":"5bc563f2fa5eaa86f02b8c5229c9ddd3","permalink":"https://yiguan1573.github.io/post/712%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/","publishdate":"2020-08-26T00:00:00Z","readingtime":3,"relpermalink":"/post/712%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/","section":"post","summary":"影院管理项目 组建一个家庭影院：DVD 播放器、投影仪、自动屏幕、环绕立体声、爆米花机,要求完成使用家庭影院的功能，其过程为： 直接用遥控器：统筹","tags":["设计模式"],"title":"12、外观模式(设计模式)","type":"post","url":"/post/712%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":1185},{"author":null,"categories":["学习"],"content":"","date":1598400000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598400000,"objectID":"d8815dcd0407795434e84e301b9e0a24","permalink":"https://yiguan1573.github.io/post/743%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B8%B8%E7%94%A810%E7%A7%8D%E7%AE%97%E6%B3%95/","publishdate":"2020-08-26T00:00:00Z","readingtime":8,"relpermalink":"/post/743%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B8%B8%E7%94%A810%E7%A7%8D%E7%AE%97%E6%B3%95/","section":"post","summary":"二分查找算法(非递归) 代码 package com.yiguan1573.algorithm; public class BinarySearch { public static void main(String[] args) { int[] arr = {1,3, 8, 10, 11, 67, 100}; int index = binarySearch(arr, 100); System.out.println(\u0026quot;index=\u0026quot; + index); } public static int binarySearch(int[] arr,int target){ int left = 0; int right = arr.length-1; while(left \u0026lt;= right){ int mid = (left + right)/2; if(target \u0026gt; arr[mid]){ left","tags":["数据结构与算法"],"title":"13、程序员常用 10 种算法(数据结构与算法)","type":"post","url":"/post/743%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B8%B8%E7%94%A810%E7%A7%8D%E7%AE%97%E6%B3%95/","weight":0,"wordcount":3890},{"author":null,"categories":["学习"],"content":"","date":1598313600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598313600,"objectID":"7d2ad83f713356653df16ffce5617ae2","permalink":"https://yiguan1573.github.io/post/711%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/","publishdate":"2020-08-25T00:00:00Z","readingtime":2,"relpermalink":"/post/711%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/","section":"post","summary":"学校院系展示需求 编写程序展示一个学校院系结构：需求是这样，要在一个页面中展示出学校的院系组成，一个学校有多个学院， 一个学院有多个系。如图： 传","tags":["设计模式"],"title":"11、组合模式(设计模式)","type":"post","url":"/post/711%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":958},{"author":null,"categories":["学习"],"content":"","date":1598313600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598313600,"objectID":"9852f36411704ccc39716048755fc06e","permalink":"https://yiguan1573.github.io/post/742%E5%9B%BE/","publishdate":"2020-08-25T00:00:00Z","readingtime":1,"relpermalink":"/post/742%E5%9B%BE/","section":"post","summary":"图的表示方式 图的表示方式有两种：二维数组表示（邻接矩阵）；链表表示（邻接表） 邻接矩阵 邻接矩阵是表示图形中顶点之间相邻关系的矩阵，对于 n 个顶点","tags":["数据结构与算法"],"title":"12、图(数据结构与算法)","type":"post","url":"/post/742%E5%9B%BE/","weight":0,"wordcount":451},{"author":null,"categories":["学习"],"content":"","date":1598227200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598227200,"objectID":"b618de578377af35032d136d48d6c3c8","permalink":"https://yiguan1573.github.io/post/710%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/","publishdate":"2020-08-24T00:00:00Z","readingtime":2,"relpermalink":"/post/710%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/","section":"post","summary":"星巴克咖啡订单项目（咖啡馆） 咖啡种类/单品咖啡：Espresso(意大利浓咖啡)、ShortBlack、LongBlack(美式咖啡)、De","tags":["设计模式"],"title":"10、装饰者模式(设计模式)","type":"post","url":"/post/710%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":891},{"author":null,"categories":["学习"],"content":"","date":1598227200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598227200,"objectID":"e9b5e604db5a5842717786abe99ae9ec","permalink":"https://yiguan1573.github.io/post/741%E5%A4%9A%E8%B7%AF%E6%9F%A5%E6%89%BE%E6%A0%91/","publishdate":"2020-08-24T00:00:00Z","readingtime":3,"relpermalink":"/post/741%E5%A4%9A%E8%B7%AF%E6%9F%A5%E6%89%BE%E6%A0%91/","section":"post","summary":"二叉树与 B 树 二叉树的问题分析 二叉树的操作效率较高，但是也存在问题, 请看下面的二叉树 二叉树需要加载到内存的，如果二叉树的节点少，没有什么问题，","tags":["数据结构与算法"],"title":"11、多路查找树(数据结构与算法)","type":"post","url":"/post/741%E5%A4%9A%E8%B7%AF%E6%9F%A5%E6%89%BE%E6%A0%91/","weight":0,"wordcount":1381},{"author":null,"categories":["学习"],"content":"","date":1598140800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598140800,"objectID":"c4b29997489ab4fb42f42802ead9cb8e","permalink":"https://yiguan1573.github.io/post/740%E6%A0%91%E7%BB%93%E6%9E%84%E7%9A%84%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8/","publishdate":"2020-08-23T00:00:00Z","readingtime":8,"relpermalink":"/post/740%E6%A0%91%E7%BB%93%E6%9E%84%E7%9A%84%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8/","section":"post","summary":"堆排序 堆排序基本介绍 堆排序是利用堆这种数据结构而设计的一种排序算法，堆排序是一种选择排序，它的最坏，最好，平均时间复 杂度均为 O(nlogn)","tags":["数据结构与算法"],"title":"10、树结构实际应用(数据结构与算法)","type":"post","url":"/post/740%E6%A0%91%E7%BB%93%E6%9E%84%E7%9A%84%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8/","weight":0,"wordcount":3555},{"author":null,"categories":["学习"],"content":"","date":1598140800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598140800,"objectID":"d05ef7445b0299302f288a7f7e240825","permalink":"https://yiguan1573.github.io/post/709%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/","publishdate":"2020-08-23T00:00:00Z","readingtime":4,"relpermalink":"/post/709%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/","section":"post","summary":"手机操作问题 现在对不同手机类型的不同品牌实现操作编程(比如:开机、关机、上网，打电话等)，如图 传统方案解决手机操作问题 传统方案解决手机操作问","tags":["设计模式"],"title":"9、桥接模式(设计模式)","type":"post","url":"/post/709%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":1516},{"author":null,"categories":["学习"],"content":"","date":1598054400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598054400,"objectID":"74463b49caa6e2b914c284d1812cb7f5","permalink":"https://yiguan1573.github.io/post/708%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/","publishdate":"2020-08-22T00:00:00Z","readingtime":5,"relpermalink":"/post/708%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/","section":"post","summary":"现实生活中的适配器例子 泰国插座用的是两孔的（欧标），可以买个多功能转换插头 (适配器) ，这样就可以使用了 基本介绍 适配器模式(Adapter Pa","tags":["设计模式"],"title":"8、适配器模式(设计模式)","type":"post","url":"/post/708%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":2402},{"author":null,"categories":["学习"],"content":"","date":1598054400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1598054400,"objectID":"13536e341dd3d30f34a0013dbdb369d5","permalink":"https://yiguan1573.github.io/post/739%E6%A0%91%E7%BB%93%E6%9E%84%E7%9A%84%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/","publishdate":"2020-08-22T00:00:00Z","readingtime":5,"relpermalink":"/post/739%E6%A0%91%E7%BB%93%E6%9E%84%E7%9A%84%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/","section":"post","summary":"二叉树 为什么需要树这种数据结构 数组存储方式的分析 优点：通过下标方式访问元素，速度快。对于有序数组，还可使用二分查找提高检索速度。 缺点：如果要","tags":["数据结构与算法"],"title":"9、树结构的基础部分(数据结构与算法)","type":"post","url":"/post/739%E6%A0%91%E7%BB%93%E6%9E%84%E7%9A%84%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/","weight":0,"wordcount":2032},{"author":null,"categories":["学习"],"content":"","date":1597968000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597968000,"objectID":"fd33aac97ffafd3ee27c59cd80f6b4fd","permalink":"https://yiguan1573.github.io/post/707%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/","publishdate":"2020-08-21T00:00:00Z","readingtime":4,"relpermalink":"/post/707%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/","section":"post","summary":"盖房项目需求 需要建房子：这一过程为打桩、砌墙、封顶 房子有各种各样的，比如普通房，高楼，别墅，各种房子的过程虽然一样，但是要求不要相同的. 传统","tags":["设计模式"],"title":"7、建造者模式(设计模式)","type":"post","url":"/post/707%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":1979},{"author":null,"categories":["学习"],"content":"","date":1597968000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597968000,"objectID":"d6bd4319d5dbcd57fd6b5c7d884850d2","permalink":"https://yiguan1573.github.io/post/738%E5%93%88%E5%B8%8C%E8%A1%A8/","publishdate":"2020-08-21T00:00:00Z","readingtime":1,"relpermalink":"/post/738%E5%93%88%E5%B8%8C%E8%A1%A8/","section":"post","summary":"哈希表(散列)-Google 上机题 有一个公司,当有新的员工来报道时,要求将该员工的信息加入(id,性别,年龄,住址..),当输入该员工的 id 时","tags":["数据结构与算法"],"title":"8、哈希表(数据结构与算法)","type":"post","url":"/post/738%E5%93%88%E5%B8%8C%E8%A1%A8/","weight":0,"wordcount":242},{"author":null,"categories":["学习"],"content":"","date":1597881600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597881600,"objectID":"ae8bccb54ee993595a41b60598356af8","permalink":"https://yiguan1573.github.io/post/706%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/","publishdate":"2020-08-20T00:00:00Z","readingtime":3,"relpermalink":"/post/706%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/","section":"post","summary":"克隆羊问题 现在有一只羊 tom，姓名为: tom, 年龄为：1，颜色为：白色，请编写程序创建和 tom 羊 属性完全相同的 10只羊 传统方式 思路分析(图解) 代码 package com.atguigu.prototype;","tags":["设计模式"],"title":"6、原型模式(设计模式)","type":"post","url":"/post/706%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":1389},{"author":null,"categories":["学习"],"content":"","date":1597881600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597881600,"objectID":"3aed1167d58a1a490cfa3155fb0ea40a","permalink":"https://yiguan1573.github.io/post/737%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/","publishdate":"2020-08-20T00:00:00Z","readingtime":2,"relpermalink":"/post/737%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/","section":"post","summary":"查找算法介绍 在 java 中，我们常用的查找有四种: 顺序(线性)查找 二分查找/折半查找 插值查找 斐波那契查找 线性查找算法 二分查找算法 二分查找算法的思路 二","tags":["数据结构与算法"],"title":"7、查找算法(数据结构与算法)","type":"post","url":"/post/737%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/","weight":0,"wordcount":524},{"author":null,"categories":["学习"],"content":"","date":1597795200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597795200,"objectID":"f94082f04955a19bb64bc9bd71e26ac0","permalink":"https://yiguan1573.github.io/post/705%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/","publishdate":"2020-08-19T00:00:00Z","readingtime":3,"relpermalink":"/post/705%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/","section":"post","summary":"简单工厂模式 需求 看一个披萨的项目：要便于披萨种类的扩展，要便于维护 披萨的种类很多(比如 GreekPizz、CheesePizz 等) 披萨的制作","tags":["设计模式"],"title":"5、工厂模式(设计模式)","type":"post","url":"/post/705%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":1429},{"author":null,"categories":["学习"],"content":"","date":1597795200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597795200,"objectID":"f3504b16aba34803d184048af23d67f2","permalink":"https://yiguan1573.github.io/post/736%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/","publishdate":"2020-08-19T00:00:00Z","readingtime":7,"relpermalink":"/post/736%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/","section":"post","summary":"排序算法的介绍 排序也称排序算法(Sort Algorithm)，排序是将一组数据，依指定的顺序进行排列的过程。 排序的分类 内部排序: 指将需要处理","tags":["数据结构与算法"],"title":"6、排序算法(数据结构与算法)","type":"post","url":"/post/736%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/","weight":0,"wordcount":3236},{"author":null,"categories":["学习"],"content":"","date":1597708800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597708800,"objectID":"f60e15e23b22a0eca2e1f233e8ac5f06","permalink":"https://yiguan1573.github.io/post/704%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","publishdate":"2020-08-18T00:00:00Z","readingtime":6,"relpermalink":"/post/704%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","section":"post","summary":"单例设计模式介绍 所谓类的单例设计模式，就是采取一定的方法保证在整个的软件系统中，对某个类只能存在一个对象实例，并且该类只提供一个取得其对象实","tags":["设计模式"],"title":"4、单例设计模式(设计模式)","type":"post","url":"/post/704%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":2680},{"author":null,"categories":["学习"],"content":"","date":1597708800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597708800,"objectID":"b398e537df5c8bf753dcdba3f19fd72b","permalink":"https://yiguan1573.github.io/post/735%E9%80%92%E5%BD%92/","publishdate":"2020-08-18T00:00:00Z","readingtime":2,"relpermalink":"/post/735%E9%80%92%E5%BD%92/","section":"post","summary":"递归应用场景 看个实际应用场景，迷宫问题(回溯)， 递归(Recursion) 递归的概念 递归就是方法自己调用自己,每次调用时传入不同的变量.递归","tags":["数据结构与算法"],"title":"5、递归(数据结构与算法)","type":"post","url":"/post/735%E9%80%92%E5%BD%92/","weight":0,"wordcount":603},{"author":null,"categories":["学习"],"content":"","date":1597622400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597622400,"objectID":"503e7c70b789735c57d11dd414d1ad6f","permalink":"https://yiguan1573.github.io/post/703%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%A6%82%E8%BF%B0/","publishdate":"2020-08-17T00:00:00Z","readingtime":1,"relpermalink":"/post/703%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%A6%82%E8%BF%B0/","section":"post","summary":"设计模式类型 设计模式分为三种类型，共 23 种 创建型模式：单例模式、抽象工厂模式、原型模式、建造者模式、工厂模式 结构型模式：适配器模式、桥接模式、","tags":["设计模式"],"title":"3、设计模式概述(设计模式)","type":"post","url":"/post/703%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%A6%82%E8%BF%B0/","weight":0,"wordcount":185},{"author":null,"categories":["学习"],"content":"","date":1597622400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597622400,"objectID":"fd48683104623ffc1c4941e3a5fc7741","permalink":"https://yiguan1573.github.io/post/734%E6%A0%88/","publishdate":"2020-08-17T00:00:00Z","readingtime":3,"relpermalink":"/post/734%E6%A0%88/","section":"post","summary":"栈的一个实际需求 栈的介绍 栈的英文为(stack) 栈是一个先入后出(FILO-First In Last Out)的有序列表。 栈(stack)是限制线性表中","tags":["数据结构与算法"],"title":"4、栈(数据结构与算法)","type":"post","url":"/post/734%E6%A0%88/","weight":0,"wordcount":1500},{"author":null,"categories":["学习"],"content":"","date":1597536000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597536000,"objectID":"9581d383d49a98318d5fdd41480d9663","permalink":"https://yiguan1573.github.io/post/702uml%E7%B1%BB%E5%9B%BE/","publishdate":"2020-08-16T00:00:00Z","readingtime":3,"relpermalink":"/post/702uml%E7%B1%BB%E5%9B%BE/","section":"post","summary":"UML 基本介绍 介绍 UML——Unified modeling language UML (统一建模语言)，是一种用于软件系统分析和设计的语言工具，它用于帮助软件开发人员进行思考和记录思","tags":["设计模式"],"title":"2、UML类图(设计模式)","type":"post","url":"/post/702uml%E7%B1%BB%E5%9B%BE/","weight":0,"wordcount":1177},{"author":null,"categories":["学习"],"content":"","date":1597536000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597536000,"objectID":"c2c8f253640a4255842c2617607389b5","permalink":"https://yiguan1573.github.io/post/733%E9%93%BE%E8%A1%A8/","publishdate":"2020-08-16T00:00:00Z","readingtime":3,"relpermalink":"/post/733%E9%93%BE%E8%A1%A8/","section":"post","summary":"链表(Linked List)介绍 链表是有序的列表，但是它在内存中是存储如下 小结上图: 链表是以节点的方式来存储,是链式存储 每个节点包含 data 域， next","tags":["数据结构与算法"],"title":"3、链表(数据结构与算法)","type":"post","url":"/post/733%E9%93%BE%E8%A1%A8/","weight":0,"wordcount":1158},{"author":null,"categories":["学习"],"content":"","date":1597449600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597449600,"objectID":"f44046d920a14466dff201c16e7127b5","permalink":"https://yiguan1573.github.io/post/731%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0/","publishdate":"2020-08-15T00:00:00Z","readingtime":1,"relpermalink":"/post/731%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0/","section":"post","summary":"数据结构和算法的关系 数据 data 结构(structure)是一门研究组织数据方式的学科，有了编程语言也就有了数据结构.学好数据结构可以 编写出更加漂","tags":["数据结构与算法"],"title":"1、数据结构与算法概述(数据结构与算法)","type":"post","url":"/post/731%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0/","weight":0,"wordcount":403},{"author":null,"categories":["学习"],"content":"","date":1597449600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":5600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597449600,"objectID":"073aff5e86421182bb39366ccafc2676","permalink":"https://yiguan1573.github.io/post/701%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B8%83%E5%A4%A7%E5%8E%9F%E5%88%99/","publishdate":"2020-08-15T00:00:00Z","readingtime":12,"relpermalink":"/post/701%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B8%83%E5%A4%A7%E5%8E%9F%E5%88%99/","section":"post","summary":"设计模式的目的 编写软件过程中，程序员面临着来自耦合性，内聚性以及可维护性，可扩展性，重用性，灵活性等多方面的挑战，设计模式是为了让程序(软件","tags":["设计模式"],"title":"1、设计模式七大原则(设计模式)","type":"post","url":"/post/701%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B8%83%E5%A4%A7%E5%8E%9F%E5%88%99/","weight":0,"wordcount":5591},{"author":null,"categories":["学习"],"content":"","date":1597449600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597449600,"objectID":"62f6eab7492fe97965eefe95a9a7653e","permalink":"https://yiguan1573.github.io/post/732%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84%E5%92%8C%E9%98%9F%E5%88%97/","publishdate":"2020-08-15T00:00:00Z","readingtime":3,"relpermalink":"/post/732%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84%E5%92%8C%E9%98%9F%E5%88%97/","section":"post","summary":"稀疏 sparsearray 数组 先看一个实际的需求 编写的五子棋程序中，有存盘退出和续上盘的功能 分析问题:因为该二维数组的很多值是默认值 0, 因此记录了很多没有意义的数","tags":["数据结构与算法"],"title":"2、稀疏数组和队列(数据结构与算法)","type":"post","url":"/post/732%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84%E5%92%8C%E9%98%9F%E5%88%97/","weight":0,"wordcount":1123},{"author":null,"categories":["学习"],"content":"","date":1597363200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597363200,"objectID":"1cff746c055503997bae2f6f9f553a56","permalink":"https://yiguan1573.github.io/post/661mybatis-%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/","publishdate":"2020-08-14T00:00:00Z","readingtime":2,"relpermalink":"/post/661mybatis-%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/","section":"post","summary":"mybatis 的常用注解说明 @Insert:实现新增 @Update:实现更新 @Delete:实现删除 @Select:实现查询 @Result:实现结果集封","tags":["MyBatis"],"title":"11、Mybatis 注解开发(MyBatis)","type":"post","url":"/post/661mybatis-%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/","weight":0,"wordcount":775},{"author":null,"categories":["学习"],"content":"","date":1597276800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597276800,"objectID":"da341a84cfd5ab1f18bfe4158dc4c87c","permalink":"https://yiguan1573.github.io/post/660mybatis-%E7%BC%93%E5%AD%98/","publishdate":"2020-08-13T00:00:00Z","readingtime":1,"relpermalink":"/post/660mybatis-%E7%BC%93%E5%AD%98/","section":"post","summary":"Mybatis 一级缓存 一级缓存是 SqlSession 级别的缓存，只要 SqlSession 没有 flush 或 close，它就存在 一级缓存的分析 一级缓存是 SqlSession 范围的缓存，当调用 SqlSession 的修改，添加，删除，com","tags":["MyBatis"],"title":"10、Mybatis 缓存(MyBatis)","type":"post","url":"/post/660mybatis-%E7%BC%93%E5%AD%98/","weight":0,"wordcount":465},{"author":null,"categories":["学习"],"content":"","date":1597190400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597190400,"objectID":"75430327aeba956a7691f424b5f91346","permalink":"https://yiguan1573.github.io/post/659mybatis-%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E7%AD%96%E7%95%A5/","publishdate":"2020-08-12T00:00:00Z","readingtime":2,"relpermalink":"/post/659mybatis-%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E7%AD%96%E7%95%A5/","section":"post","summary":"延迟加载概念 就是在需要用到数据时才进行加载，不需要用到数据时就不加载数据。延迟加载也称懒加载 好处： 先从单表查询，需要时再从关联表去关联查询，","tags":["MyBatis"],"title":"9、Mybatis 延迟加载策略(MyBatis)","type":"post","url":"/post/659mybatis-%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E7%AD%96%E7%95%A5/","weight":0,"wordcount":712},{"author":null,"categories":["学习"],"content":"","date":1597104000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597104000,"objectID":"52e4ea5878f225a0d4dec0d7cbf85534","permalink":"https://yiguan1573.github.io/post/658mybatis-%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/","publishdate":"2020-08-11T00:00:00Z","readingtime":3,"relpermalink":"/post/658mybatis-%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/","section":"post","summary":"一对一查询(多对一) 需求：查询所有账户信息，关联查询下单用户信息 注意：因为一个账户信息只能供某个用户使用，所以从查询账户信息出发关联查询用户","tags":["MyBatis"],"title":"8、Mybatis多表查询(MyBatis)","type":"post","url":"/post/658mybatis-%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/","weight":0,"wordcount":1068},{"author":null,"categories":["学习"],"content":"","date":1597017600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597017600,"objectID":"eebf633b3b528a2fe1c010d6861b7211","permalink":"https://yiguan1573.github.io/post/657mybatis-%E8%BF%9E%E6%8E%A5%E6%B1%A0%E4%B8%8E%E4%BA%8B%E5%8A%A1%E6%B7%B1%E5%85%A5/","publishdate":"2020-08-10T00:00:00Z","readingtime":2,"relpermalink":"/post/657mybatis-%E8%BF%9E%E6%8E%A5%E6%B1%A0%E4%B8%8E%E4%BA%8B%E5%8A%A1%E6%B7%B1%E5%85%A5/","section":"post","summary":"Mybatis 的连接池技术 Mybatis 连接池的分类 Mybatis 将它自己的数据源分为三类： UNPOOLED 不使用连接池的数据源 POOLED 使用连接池的数据源 JNDI 使用 JNDI 实现的数据源 相应地，MyBatis","tags":["MyBatis"],"title":"7、Mybatis 连接池与事务深入(MyBatis)","type":"post","url":"/post/657mybatis-%E8%BF%9E%E6%8E%A5%E6%B1%A0%E4%B8%8E%E4%BA%8B%E5%8A%A1%E6%B7%B1%E5%85%A5/","weight":0,"wordcount":656},{"author":null,"categories":["学习"],"content":"","date":1596931200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1596931200,"objectID":"7f4923a931e596fd329ee9f56ad3f696","permalink":"https://yiguan1573.github.io/post/656sqlmapconfig.xml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/","publishdate":"2020-08-09T00:00:00Z","readingtime":1,"relpermalink":"/post/656sqlmapconfig.xml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/","section":"post","summary":"配置内容 SqlMapConfig.xml 中配置的内容和顺序 properties（属性） 在使用 properties 标签配置时，我们可以采用两种方式指定属性配置 第一种 \u0026lt;properties\u0026gt; \u0026lt;property name=\u0026quot;jdbc.driver\u0026quot; value=\u0026quot;com.mysql.jdbc.Driver\u0026quot;/\u0026gt; \u0026lt;property name=\u0026quot;jdbc.url\u0026quot; value=\u0026quot;jdbc:mysql://localhost:3306/eesy\u0026quot;/\u0026gt; \u0026lt;property name=\u0026quot;jdbc.username\u0026quot; value=\u0026quot;root\u0026quot;/\u0026gt; \u0026lt;property name=\u0026quot;jdbc.password\u0026quot; value=\u0026quot;1234\u0026quot;/\u0026gt;","tags":["MyBatis"],"title":"6、SqlMapConfig.xml配置文件(MyBatis)","type":"post","url":"/post/656sqlmapconfig.xml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/","weight":0,"wordcount":311},{"author":null,"categories":["学习"],"content":"","date":1596844800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1596844800,"objectID":"c9b0d8ea02c24976b10e2bcb940e48f9","permalink":"https://yiguan1573.github.io/post/655mybatis-%E7%9A%84%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E5%B0%81%E8%A3%85/","publishdate":"2020-08-08T00:00:00Z","readingtime":1,"relpermalink":"/post/655mybatis-%E7%9A%84%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E5%B0%81%E8%A3%85/","section":"post","summary":"resultType 配置结果类型 resultType 属性可以指定结果集的类型，它支持基本类型和实体类类型 需要注意的是，它和 parameterType 一样，如果注册过类型别名的，可以直接使用别名。没有注","tags":["MyBatis"],"title":"5、Mybatis 的输出结果封装(MyBatis)","type":"post","url":"/post/655mybatis-%E7%9A%84%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E5%B0%81%E8%A3%85/","weight":0,"wordcount":425},{"author":null,"categories":["学习"],"content":"","date":1596758400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1596758400,"objectID":"295d41bcc8b771087fade3b32c075014","permalink":"https://yiguan1573.github.io/post/644%E5%9F%BA%E4%BA%8E%E4%BB%A3%E7%90%86dao%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/","publishdate":"2020-08-07T00:00:00Z","readingtime":3,"relpermalink":"/post/644%E5%9F%BA%E4%BA%8E%E4%BB%A3%E7%90%86dao%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/","section":"post","summary":"根据 ID 查询 在持久层接口中添加 findById 方法 User findById(Integer userId); 在用户的映射配置文件中配置 \u0026lt;!-- 根据 id 查询 --\u0026gt; \u0026lt;select id=\u0026quot;findById\u0026quot; resultType=\u0026quot;com.itheima.domain.User\u0026quot; parameterType=\u0026quot;int\u0026quot;\u0026gt; select * from user where id = #{uid} \u0026lt;/select\u0026gt; 细节： resultType 属性： 用于指定结果集的类型","tags":["MyBatis"],"title":"4、基于代理 Dao 实现 CRUD 操作(MyBatis)","type":"post","url":"/post/644%E5%9F%BA%E4%BA%8E%E4%BB%A3%E7%90%86dao%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/","weight":0,"wordcount":1278},{"author":null,"categories":["学习"],"content":"","date":1596672000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1596672000,"objectID":"401d35767b8745c3080eb8dc034e1860","permalink":"https://yiguan1573.github.io/post/643%E8%87%AA%E5%AE%9A%E4%B9%89mybatis/","publishdate":"2020-08-06T00:00:00Z","readingtime":1,"relpermalink":"/post/643%E8%87%AA%E5%AE%9A%E4%B9%89mybatis/","section":"post","summary":"自定义 Mybatis 的设计模式说明 工厂模式（SqlSessionFactory） 代理模式(MapperProxyFactory) 构建者模式(SqlSes","tags":["MyBatis"],"title":"3、自定义Mybatis(MyBatis)","type":"post","url":"/post/643%E8%87%AA%E5%AE%9A%E4%B9%89mybatis/","weight":0,"wordcount":146},{"author":null,"categories":["学习"],"content":"","date":1596585600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1596585600,"objectID":"70d5d6226ba4340e5469957ee2e8b602","permalink":"https://yiguan1573.github.io/post/642mybatis%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","publishdate":"2020-08-05T00:00:00Z","readingtime":2,"relpermalink":"/post/642mybatis%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","section":"post","summary":"搭建 Mybatis 开发环境 创建 maven 工程 创建 mybatis01 的工程，工程信息如下： Groupid:com.itheima ArtifactId:mybatis01 Packing:jar 添加 Mybatis3.4.5 的坐标 在 pom.xml 文件中添加 Mybatis3.4.5 的坐标，如下： \u0026lt;dependencies\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.mybatis\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;mybatis\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;3.4.5\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;junit\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;junit\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;4.10\u0026lt;/version\u0026gt; \u0026lt;scope\u0026gt;test\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;mysql\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;mysql-connector-java\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;5.1.6\u0026lt;/version\u0026gt; \u0026lt;scope\u0026gt;runtime\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;log4j\u0026lt;/groupId\u0026gt;","tags":["MyBatis"],"title":"2、 Mybatis 框架快速入门(MyBatis)","type":"post","url":"/post/642mybatis%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","weight":0,"wordcount":654},{"author":null,"categories":["学习"],"content":"","date":1596499200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1596499200,"objectID":"f2aeca94a416cf8da24a2472ebfdd83e","permalink":"https://yiguan1573.github.io/post/641mybatis%E6%A6%82%E8%BF%B0/","publishdate":"2020-08-04T00:00:00Z","readingtime":1,"relpermalink":"/post/641mybatis%E6%A6%82%E8%BF%B0/","section":"post","summary":"概述 mybatis 是一个优秀的基于 java 的持久层框架，它内部封装了 jdbc，使开发者只需要关注 sql 语句本身，而不需要花费精力去处理加载驱动、创建连接、创建 statement 等","tags":["MyBatis"],"title":"1、MyBatis概述(MyBatis)","type":"post","url":"/post/641mybatis%E6%A6%82%E8%BF%B0/","weight":0,"wordcount":432},{"author":null,"categories":["学习"],"content":"","date":1596326400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1596326400,"objectID":"70ec7138557063ef9216d1da20627419","permalink":"https://yiguan1573.github.io/post/639ssm%E6%95%B4%E5%90%88springmvc/","publishdate":"2020-08-02T00:00:00Z","readingtime":2,"relpermalink":"/post/639ssm%E6%95%B4%E5%90%88springmvc/","section":"post","summary":"搭建整合环境 整合说明：SSM整合可以使用多种方式，咱们会选择XML + 注解的方式 整合的思路 先搭建整合的环境 先把Spring的配置搭建完成 再使用","tags":["SpringMVC"],"title":"9、SSM整合SpringMVC(SpringMVC)","type":"post","url":"/post/639ssm%E6%95%B4%E5%90%88springmvc/","weight":0,"wordcount":851},{"author":null,"categories":["学习"],"content":"","date":1596240000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1596240000,"objectID":"5da5d86051d04ab256979cd7d3ca65fd","permalink":"https://yiguan1573.github.io/post/638springmvc%E6%A1%86%E6%9E%B6%E4%B8%AD%E7%9A%84%E6%8B%A6%E6%88%AA%E5%99%A8/","publishdate":"2020-08-01T00:00:00Z","readingtime":2,"relpermalink":"/post/638springmvc%E6%A1%86%E6%9E%B6%E4%B8%AD%E7%9A%84%E6%8B%A6%E6%88%AA%E5%99%A8/","section":"post","summary":"拦截器的概述 SpringMVC框架中的拦截器用于对处理器进行预处理和后处理的技术 可以定义拦截器链，连接器链就是将拦截器按着一定的顺序结成一条","tags":["SpringMVC"],"title":"8、SpringMVC框架中的拦截器(SpringMVC)","type":"post","url":"/post/638springmvc%E6%A1%86%E6%9E%B6%E4%B8%AD%E7%9A%84%E6%8B%A6%E6%88%AA%E5%99%A8/","weight":0,"wordcount":722},{"author":null,"categories":["学习"],"content":"","date":1596153600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1596153600,"objectID":"23eacbc001084716568a1558d36e94a6","permalink":"https://yiguan1573.github.io/post/637springmvc%E7%9A%84%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/","publishdate":"2020-07-31T00:00:00Z","readingtime":1,"relpermalink":"/post/637springmvc%E7%9A%84%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/","section":"post","summary":"异常处理思路 Controller调用service，service调用dao，异常都是向上抛出的，最终有DispatcherServlet找","tags":["SpringMVC"],"title":"7、SpringMVC的异常处理(SpringMVC)","type":"post","url":"/post/637springmvc%E7%9A%84%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/","weight":0,"wordcount":117},{"author":null,"categories":["学习"],"content":"","date":1596067200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1596067200,"objectID":"c330aa4f130bc1858dbcc8bf0576cee3","permalink":"https://yiguan1573.github.io/post/636springmvc%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/","publishdate":"2020-07-30T00:00:00Z","readingtime":1,"relpermalink":"/post/636springmvc%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/","section":"post","summary":"文件上传的回顾 导入文件上传的jar包 编写文件上传的JSP页面 编写文件上传的Controller控制器 SpringMVC传统方式文件上传 Spr","tags":["SpringMVC"],"title":"6、SpringMVC实现文件上传(SpringMVC)","type":"post","url":"/post/636springmvc%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/","weight":0,"wordcount":291},{"author":null,"categories":["学习"],"content":"","date":1595980800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1595980800,"objectID":"db0de5194e14bd98883b6b98c04757c5","permalink":"https://yiguan1573.github.io/post/635%E5%93%8D%E5%BA%94%E6%95%B0%E6%8D%AE%E5%92%8C%E7%BB%93%E6%9E%9C%E8%A7%86%E5%9B%BE/","publishdate":"2020-07-29T00:00:00Z","readingtime":2,"relpermalink":"/post/635%E5%93%8D%E5%BA%94%E6%95%B0%E6%8D%AE%E5%92%8C%E7%BB%93%E6%9E%9C%E8%A7%86%E5%9B%BE/","section":"post","summary":"返回值分类 返回字符串 Controller方法返回字符串可以指定逻辑视图的名称，根据视图解析器为物理视图的地址 具体的应用场景 返回值是void 如","tags":["SpringMVC"],"title":"5、响应数据和结果视图(SpringMVC)","type":"post","url":"/post/635%E5%93%8D%E5%BA%94%E6%95%B0%E6%8D%AE%E5%92%8C%E7%BB%93%E6%9E%9C%E8%A7%86%E5%9B%BE/","weight":0,"wordcount":759},{"author":null,"categories":["学习"],"content":"","date":1595894400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1595894400,"objectID":"228eccfa79c8f99a65e85ecf545649e3","permalink":"https://yiguan1573.github.io/post/634%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/","publishdate":"2020-07-28T00:00:00Z","readingtime":2,"relpermalink":"/post/634%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/","section":"post","summary":"RequestParam注解 作用：把请求中的指定名称的参数传递给控制器中的形参赋值 属性 required：请求参数中是否必须提供此参数，默认值","tags":["SpringMVC"],"title":"4、常用注解(SpringMVC)","type":"post","url":"/post/634%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/","weight":0,"wordcount":605},{"author":null,"categories":["学习"],"content":"","date":1595808000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1595808000,"objectID":"90a6f6530b4924e84ffcd2d86097ce82","permalink":"https://yiguan1573.github.io/post/633%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0%E7%9A%84%E7%BB%91%E5%AE%9A/","publishdate":"2020-07-27T00:00:00Z","readingtime":2,"relpermalink":"/post/633%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0%E7%9A%84%E7%BB%91%E5%AE%9A/","section":"post","summary":"请求参数的绑定说明 绑定机制 表单提交的数据都是k=v格式的 username=haha\u0026amp;password=123 SpringMVC的参数绑定过程是把表单提交的请求参数，作为控制器中方法的参数进行","tags":["SpringMVC"],"title":"3、请求参数的绑定(SpringMVC)","type":"post","url":"/post/633%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0%E7%9A%84%E7%BB%91%E5%AE%9A/","weight":0,"wordcount":563},{"author":null,"categories":["学习"],"content":"","date":1595721600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1595721600,"objectID":"7e69abb0fcc6fd1f602a23660b373108","permalink":"https://yiguan1573.github.io/post/632springmvc%E5%85%A5%E9%97%A8/","publishdate":"2020-07-26T00:00:00Z","readingtime":3,"relpermalink":"/post/632springmvc%E5%85%A5%E9%97%A8/","section":"post","summary":"SpringMVC的入门程序 创建WEB工程，引入开发的jar包（具体的坐标如下） 配置核心的控制器（配置DispatcherServlet）,","tags":["SpringMVC"],"title":"2、SpringMVC入门(SpringMVC)","type":"post","url":"/post/632springmvc%E5%85%A5%E9%97%A8/","weight":0,"wordcount":1449},{"author":null,"categories":["学习"],"content":"","date":1595635200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1595635200,"objectID":"a8f340b6d50b0f906f13ddf4d74448b2","permalink":"https://yiguan1573.github.io/post/631%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E5%92%8Cmvc/","publishdate":"2020-07-25T00:00:00Z","readingtime":2,"relpermalink":"/post/631%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E5%92%8Cmvc/","section":"post","summary":"三层架构 开发服务器端程序，一般都基于两种形式，一种C/S架构程序，一种B/S架构程序 使用Java语言基本上都是开发B/S架构的程序，B/S架","tags":["SpringMVC"],"title":"1、三层架构和MVC(SpringMVC)","type":"post","url":"/post/631%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E5%92%8Cmvc/","weight":0,"wordcount":573},{"author":null,"categories":["学习"],"content":"","date":1595548800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1595548800,"objectID":"5729cf84b1e53e7ba1097f0bb74140f2","permalink":"https://yiguan1573.github.io/post/626spring5-%E6%A1%86%E6%9E%B6%E6%96%B0%E5%8A%9F%E8%83%BD/","publishdate":"2020-07-24T00:00:00Z","readingtime":7,"relpermalink":"/post/626spring5-%E6%A1%86%E6%9E%B6%E6%96%B0%E5%8A%9F%E8%83%BD/","section":"post","summary":"Spring5 框架新功能 整个Spring5框架的代码基于 Java8，运行时兼容 JDK9，许多不建议使用的类和方法在代码库中删除 Spring 5.0 框架自带了通用的日志封","tags":["Spring"],"title":"6、Spring5 框架新功能(Spring)","type":"post","url":"/post/626spring5-%E6%A1%86%E6%9E%B6%E6%96%B0%E5%8A%9F%E8%83%BD/","weight":0,"wordcount":3286},{"author":null,"categories":["学习"],"content":"","date":1595462400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1595462400,"objectID":"b5e498fa6a52a2193a7007e7896e244d","permalink":"https://yiguan1573.github.io/post/625%E4%BA%8B%E5%8A%A1%E6%93%8D%E4%BD%9C/","publishdate":"2020-07-23T00:00:00Z","readingtime":4,"relpermalink":"/post/625%E4%BA%8B%E5%8A%A1%E6%93%8D%E4%BD%9C/","section":"post","summary":"概念 什么事务 事务是数据库操作最基本单元，逻辑上一组操作，要么都成功，如果有一个失败所有操 作都失败 典型场景：银行转账 lucy 转账 100 元 给 mary lucy 少 100，","tags":["Spring"],"title":"5、事务操作(Spring)","type":"post","url":"/post/625%E4%BA%8B%E5%8A%A1%E6%93%8D%E4%BD%9C/","weight":0,"wordcount":1605},{"author":null,"categories":["学习"],"content":"","date":1595376000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1595376000,"objectID":"79eeec459f8443b00cec4fd046091d81","permalink":"https://yiguan1573.github.io/post/624jdbctemplate/","publishdate":"2020-07-22T00:00:00Z","readingtime":3,"relpermalink":"/post/624jdbctemplate/","section":"post","summary":"概念和准备 概念 Spring 框架对 JDBC 进行封装，使用 JdbcTemplate 方便实现对数据库操作 准备工作 引入相关 jar 包 在 spring 配置文件配置数据库连接池 \u0026lt;!-- 数据库连接池 --\u0026gt; \u0026lt;bean id=\u0026quot;dataSource\u0026quot; class=\u0026quot;com.alibaba.druid.pool.DruidDataSource\u0026quot; destroy-method=\u0026quot;close\u0026quot;\u0026gt; \u0026lt;property name=\u0026quot;url\u0026quot; value=\u0026quot;jdbc:mysql:///user_db\u0026quot; /\u0026gt;","tags":["Spring"],"title":"4、JdbcTemplate(Spring)","type":"post","url":"/post/624jdbctemplate/","weight":0,"wordcount":1070},{"author":null,"categories":["学习"],"content":"","date":1595289600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1595289600,"objectID":"cc7793c50c1af1e6a7c769887c25c966","permalink":"https://yiguan1573.github.io/post/623aop/","publishdate":"2020-07-21T00:00:00Z","readingtime":4,"relpermalink":"/post/623aop/","section":"post","summary":"概念 面向切面编程（方面），利用 AOP 可以对业务逻辑的各个部分进行隔离，从而使得 业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发","tags":["Spring"],"title":"3、AOP(Spring)","type":"post","url":"/post/623aop/","weight":0,"wordcount":1850},{"author":null,"categories":["学习"],"content":"","date":1595203200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":5500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1595203200,"objectID":"9a35a8eb26573b6bcfde46d8667180d0","permalink":"https://yiguan1573.github.io/post/622ioc/","publishdate":"2020-07-20T00:00:00Z","readingtime":11,"relpermalink":"/post/622ioc/","section":"post","summary":"IOC（概念和原理） 什么是 IOC 控制反转，把对象创建和对象之间的调用过程，交给 Spring 进行管理 使用 IOC 目的：为了耦合度降低 做入门案例就是 IOC 实现 IOC 底层原理","tags":["Spring"],"title":"2、IOC(Spring)","type":"post","url":"/post/622ioc/","weight":0,"wordcount":5439},{"author":null,"categories":["学习"],"content":"","date":1595116800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1595116800,"objectID":"26f603de82b4342f467675b098576bcc","permalink":"https://yiguan1573.github.io/post/621spring%E6%A1%86%E6%9E%B6%E6%A6%82%E8%BF%B0/","publishdate":"2020-07-19T00:00:00Z","readingtime":1,"relpermalink":"/post/621spring%E6%A1%86%E6%9E%B6%E6%A6%82%E8%BF%B0/","section":"post","summary":"Spring5 框架概述 Spring 是轻量级的开源的 JavaEE 框架 Spring 可以解决企业应用开发的复杂性 Spring 有两个核心部分：IOC 和 Aop IOC：控制反转，把创建对象过程交给 Spring 进行管理 A","tags":["Spring"],"title":"1、Spring框架概述(Spring)","type":"post","url":"/post/621spring%E6%A1%86%E6%9E%B6%E6%A6%82%E8%BF%B0/","weight":0,"wordcount":321},{"author":null,"categories":["学习"],"content":"","date":1594944000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1594944000,"objectID":"74b0de866afd36f9e1340c28920348a3","permalink":"https://yiguan1573.github.io/post/540redis%E7%9A%84java%E5%AE%A2%E6%88%B7%E7%AB%AFjedis/","publishdate":"2020-07-17T00:00:00Z","readingtime":3,"relpermalink":"/post/540redis%E7%9A%84java%E5%AE%A2%E6%88%B7%E7%AB%AFjedis/","section":"post","summary":"Jedis_测试联通 在Eclipse创建普通Maven工程 pom.xml引入下面关键依赖 \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;redis.clients\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;jedis\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.1.0\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; 创建新类，测试连通，源码如下： package com.lun.shang; import redis.clients.jedis.Jedis; public class","tags":["Redis"],"title":"10、Redis的Java客户端Jedis(Redis)","type":"post","url":"/post/540redis%E7%9A%84java%E5%AE%A2%E6%88%B7%E7%AB%AFjedis/","weight":0,"wordcount":1159},{"author":null,"categories":["学习"],"content":"","date":1594857600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1594857600,"objectID":"ec9111460fdc28cdef5672d9d8606ca9","permalink":"https://yiguan1573.github.io/post/539redis%E7%9A%84%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/","publishdate":"2020-07-16T00:00:00Z","readingtime":4,"relpermalink":"/post/539redis%E7%9A%84%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/","section":"post","summary":"简介 行话：也就是我们所说的主从复制，主机数据更新后根据配置和策略， 自动同步到备机的master/slaver机制，Master以写为主，Sl","tags":["Redis"],"title":"9、Redis的主从复制(Redis)","type":"post","url":"/post/539redis%E7%9A%84%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/","weight":0,"wordcount":1508},{"author":null,"categories":["学习"],"content":"","date":1594771200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1594771200,"objectID":"236bd331d586f5f75ce1f7d65a6b56e7","permalink":"https://yiguan1573.github.io/post/538redis%E7%9A%84%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/","publishdate":"2020-07-15T00:00:00Z","readingtime":1,"relpermalink":"/post/538redis%E7%9A%84%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/","section":"post","summary":"简介 用观察者模式理解学习 进程间的一种消息通信模式：发送者(pub)发送消息，订阅者(sub)接收消息。 下图展示了频道 channel1 ， 以及订阅这个频道的三","tags":["Redis"],"title":"8、Redis的发布订阅(Redis)","type":"post","url":"/post/538redis%E7%9A%84%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/","weight":0,"wordcount":301},{"author":null,"categories":["学习"],"content":"","date":1594684800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1594684800,"objectID":"1b9206b8e7d992dc35d2fa85185985ce","permalink":"https://yiguan1573.github.io/post/537redis%E7%9A%84%E4%BA%8B%E5%8A%A1/","publishdate":"2020-07-14T00:00:00Z","readingtime":3,"relpermalink":"/post/537redis%E7%9A%84%E4%BA%8B%E5%8A%A1/","section":"post","summary":"简介 可以一次执行多个命令，本质是一组命令的集合。一个事务中的所有命令都会序列化，按顺序地串行化执行而不会被其它命令插入，不许加塞。 一个队列中","tags":["Redis"],"title":"7、Redis的事务(Redis)","type":"post","url":"/post/537redis%E7%9A%84%E4%BA%8B%E5%8A%A1/","weight":0,"wordcount":1012},{"author":null,"categories":["学习"],"content":"","date":1594598400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1594598400,"objectID":"2fab6260334ece37ebd5d366137b52c1","permalink":"https://yiguan1573.github.io/post/536redis%E7%9A%84%E6%8C%81%E4%B9%85%E5%8C%96/","publishdate":"2020-07-13T00:00:00Z","readingtime":5,"relpermalink":"/post/536redis%E7%9A%84%E6%8C%81%E4%B9%85%E5%8C%96/","section":"post","summary":"持久化之RDB（Redis DataBase） 是什么 在指定的时间间隔内将内存中的数据集快照写入磁盘，也就是行话讲的Snapshot快照，它恢复","tags":["Redis"],"title":"6、Redis的持久化(Redis)","type":"post","url":"/post/536redis%E7%9A%84%E6%8C%81%E4%B9%85%E5%8C%96/","weight":0,"wordcount":2086},{"author":null,"categories":["学习"],"content":"","date":1594512000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1594512000,"objectID":"e822b2a514645b9cb9ca49e547552a70","permalink":"https://yiguan1573.github.io/post/535redis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/","publishdate":"2020-07-12T00:00:00Z","readingtime":1,"relpermalink":"/post/535redis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/","section":"post","summary":"Redis 的配置文件位于 Redis 安装目录下，文件名为 redis.conf(Windows 名为 redis.windows.conf)。 你可以通过 CONFIG 命令查看或设置配置项。 语法 Redis CONFIG 命令格式如下：","tags":["Redis"],"title":"5、Redis配置文件(Redis)","type":"post","url":"/post/535redis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/","weight":0,"wordcount":131},{"author":null,"categories":["学习"],"content":"","date":1594425600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1594425600,"objectID":"c88139d607723cd6faf4f2fcef95a244","permalink":"https://yiguan1573.github.io/post/534redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","publishdate":"2020-07-11T00:00:00Z","readingtime":3,"relpermalink":"/post/534redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","section":"post","summary":"Redis的五大数据类型 String（字符串） string是redis最基本的类型，你可以理解成与Memcached一模一样的类型，一个ke","tags":["Redis"],"title":"4、Redis数据类型(Redis)","type":"post","url":"/post/534redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","weight":0,"wordcount":1400},{"author":null,"categories":["学习"],"content":"","date":1594339200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1594339200,"objectID":"c252da00e093329827a0055ad0bd10d0","permalink":"https://yiguan1573.github.io/post/533redis%E7%AE%80%E4%BB%8B/","publishdate":"2020-07-10T00:00:00Z","readingtime":2,"relpermalink":"/post/533redis%E7%AE%80%E4%BB%8B/","section":"post","summary":"入门概述 是什么 Redis:REmote DIctionary Server(远程字典服务器)是完全开源免费的，用C语言编写的，遵守BSD协议，是一个高性能的(key/value)分布式","tags":["Redis"],"title":"3、Redis简介(Redis)","type":"post","url":"/post/533redis%E7%AE%80%E4%BB%8B/","weight":0,"wordcount":869},{"author":null,"categories":["学习"],"content":"","date":1594252800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1594252800,"objectID":"b6b04cd8e36295f7a024569468d46344","permalink":"https://yiguan1573.github.io/post/532%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93cap%E5%8E%9F%E7%90%86/","publishdate":"2020-07-09T00:00:00Z","readingtime":4,"relpermalink":"/post/532%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93cap%E5%8E%9F%E7%90%86/","section":"post","summary":"传统的ACID分别是什么 A (Atomicity) 原子性 C (Consistency) 一致性 I (Isolation) 独立性 D (Durability) 持久性 关系型数据库遵循ACID规则，事务在英文中是transaction，和现实世","tags":["Redis"],"title":"2、分布式数据库CAP原理(Redis)","type":"post","url":"/post/532%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93cap%E5%8E%9F%E7%90%86/","weight":0,"wordcount":1762},{"author":null,"categories":["学习"],"content":"","date":1594166400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1594166400,"objectID":"b8066e573f777161332535fc842e9468","permalink":"https://yiguan1573.github.io/post/531nosql%E5%85%A5%E9%97%A8%E6%A6%82%E8%BF%B0/","publishdate":"2020-07-08T00:00:00Z","readingtime":6,"relpermalink":"/post/531nosql%E5%85%A5%E9%97%A8%E6%A6%82%E8%BF%B0/","section":"post","summary":"互联网时代背景下大机遇，为什么用NoSQL 1.单机MySQL的美好年代 在90年代，一个网站的浏览量一般都不大，用单个数据库完全可以轻松应付。","tags":["Redis"],"title":"1、NoSQL入门概述(Redis)","type":"post","url":"/post/531nosql%E5%85%A5%E9%97%A8%E6%A6%82%E8%BF%B0/","weight":0,"wordcount":2524},{"author":null,"categories":["学习"],"content":"","date":1594080000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1594080000,"objectID":"091cdd0009ee1bd6ec0077ae17ad43dd","permalink":"https://yiguan1573.github.io/post/616spring-boot%E4%B8%8E%E7%9B%91%E6%8E%A7%E7%AE%A1%E7%90%86/","publishdate":"2020-07-07T00:00:00Z","readingtime":2,"relpermalink":"/post/616spring-boot%E4%B8%8E%E7%9B%91%E6%8E%A7%E7%AE%A1%E7%90%86/","section":"post","summary":"通过引入spring-boot-starter-actuator，可以使用Spring Boot为我们提供的准生产环境下的应用监控和管理功能。","tags":["SpringBoot"],"title":"16、Spring Boot与监控管理(SpringBoot)","type":"post","url":"/post/616spring-boot%E4%B8%8E%E7%9B%91%E6%8E%A7%E7%AE%A1%E7%90%86/","weight":0,"wordcount":573},{"author":null,"categories":["学习"],"content":"","date":1593993600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1593993600,"objectID":"36c18e3745490a43d03a6c222410ab79","permalink":"https://yiguan1573.github.io/post/615spring-boot%E4%B8%8E%E7%83%AD%E9%83%A8%E7%BD%B2/","publishdate":"2020-07-06T00:00:00Z","readingtime":1,"relpermalink":"/post/615spring-boot%E4%B8%8E%E7%83%AD%E9%83%A8%E7%BD%B2/","section":"post","summary":"在开发中我们修改一个Java文件后想看到效果不得不重启应用，这导致大量时间花费，我们希望不重启应用的情况下，程序可以自动部署（热部署）。有以","tags":["SpringBoot"],"title":"15、Spring boot与热部署(SpringBoot)","type":"post","url":"/post/615spring-boot%E4%B8%8E%E7%83%AD%E9%83%A8%E7%BD%B2/","weight":0,"wordcount":323},{"author":null,"categories":["学习"],"content":"","date":1593907200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1593907200,"objectID":"a8e615e4f4358515797fbeb0005847b1","permalink":"https://yiguan1573.github.io/post/614spring-boot%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F/","publishdate":"2020-07-05T00:00:00Z","readingtime":5,"relpermalink":"/post/614spring-boot%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F/","section":"post","summary":"分布式应用 分布式应用（distributed application）指的是应用程序分布在不同计算机上，通过网络来共同完成一项任务的工作方式。","tags":["SpringBoot"],"title":"14、Spring boot与分布式(SpringBoot)","type":"post","url":"/post/614spring-boot%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F/","weight":0,"wordcount":2320},{"author":null,"categories":["学习"],"content":"","date":1593820800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1593820800,"objectID":"fa63119b57e2a5c1a627c1257ea32def","permalink":"https://yiguan1573.github.io/post/613spring-boot%E4%B8%8E%E5%AE%89%E5%85%A8/","publishdate":"2020-07-04T00:00:00Z","readingtime":5,"relpermalink":"/post/613spring-boot%E4%B8%8E%E5%AE%89%E5%85%A8/","section":"post","summary":"安全 应用程序的两个主要区域是“认证”和“授权”（或者访问控制），这两个主要区域是安全的两个目标。 身份验证意味着确认您自己的身份，而授权意味着","tags":["SpringBoot"],"title":"13、Spring boot与安全(SpringBoot)","type":"post","url":"/post/613spring-boot%E4%B8%8E%E5%AE%89%E5%85%A8/","weight":0,"wordcount":2249},{"author":null,"categories":["学习"],"content":"","date":1593734400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1593734400,"objectID":"5e822a132ab0002c4c4cb73d889628a5","permalink":"https://yiguan1573.github.io/post/612spring-boot%E4%B8%8E%E4%BB%BB%E5%8A%A1/","publishdate":"2020-07-03T00:00:00Z","readingtime":3,"relpermalink":"/post/612spring-boot%E4%B8%8E%E4%BB%BB%E5%8A%A1/","section":"post","summary":"异步任务 在Java应用中，绝大多数情况下都是通过同步的方式来实现交互处理的；但是在处理与第三方系统交互的时候，容易造成响应迟缓的情况，之前大","tags":["SpringBoot"],"title":"12、Spring boot与任务(SpringBoot)","type":"post","url":"/post/612spring-boot%E4%B8%8E%E4%BB%BB%E5%8A%A1/","weight":0,"wordcount":1309},{"author":null,"categories":["学习"],"content":"","date":1593648000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1593648000,"objectID":"de54202ea2ebfd90df2d7e480a12791c","permalink":"https://yiguan1573.github.io/post/611spring-boot%E4%B8%8E%E6%A3%80%E7%B4%A2/","publishdate":"2020-07-02T00:00:00Z","readingtime":7,"relpermalink":"/post/611spring-boot%E4%B8%8E%E6%A3%80%E7%B4%A2/","section":"post","summary":"ElasticSearch入门 1. ES的简介 简介 我们的应用经常需要添加检索功能，开源的 ElasticSearch 是目前全文搜索引擎的首选。他可以快速的存储、搜索和分析","tags":["SpringBoot","ElasticSearch"],"title":"11、Spring boot与检索(SpringBoot)","type":"post","url":"/post/611spring-boot%E4%B8%8E%E6%A3%80%E7%B4%A2/","weight":0,"wordcount":3250},{"author":null,"categories":["学习"],"content":"","date":1593561600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1593561600,"objectID":"97bc1fb21e2aab6024ad9725e528ece9","permalink":"https://yiguan1573.github.io/post/610spring-boot%E4%B8%8E%E6%B6%88%E6%81%AF/","publishdate":"2020-07-01T00:00:00Z","readingtime":4,"relpermalink":"/post/610spring-boot%E4%B8%8E%E6%B6%88%E6%81%AF/","section":"post","summary":"消息简介 消息代理规范 JMS（Java Message Service）JAVA消息服务 基于JVM消息代理的规范。ActiveMQ、HornetMQ是JMS实","tags":["SpringBoot"],"title":"10、Spring Boot与消息(SpringBoot)","type":"post","url":"/post/610spring-boot%E4%B8%8E%E6%B6%88%E6%81%AF/","weight":0,"wordcount":1996},{"author":null,"categories":["学习"],"content":"","date":1593475200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":7600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"02a36ba3dbb43d6f4e8f4df88faa947d","permalink":"https://yiguan1573.github.io/post/609spring-boot%E4%B8%8E%E7%BC%93%E5%AD%98/","publishdate":"2020-06-30T00:00:00Z","readingtime":16,"relpermalink":"/post/609spring-boot%E4%B8%8E%E7%BC%93%E5%AD%98/","section":"post","summary":"JSR107 Spring缓存抽象 几个重要概念\u0026amp;缓存注解 缓存使用 1. 基本使用步骤 1. 引入spring-boot-starter-cache模块 2. @E","tags":["SpringBoot"],"title":"9、Spring Boot与缓存(SpringBoot)","type":"post","url":"/post/609spring-boot%E4%B8%8E%E7%BC%93%E5%AD%98/","weight":0,"wordcount":7584},{"author":null,"categories":["学习"],"content":"","date":1593388800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1593388800,"objectID":"b7ff0a9e40e02616ab0c0bc6f938c9c3","permalink":"https://yiguan1573.github.io/post/608%E8%87%AA%E5%AE%9A%E4%B9%89starter/","publishdate":"2020-06-29T00:00:00Z","readingtime":2,"relpermalink":"/post/608%E8%87%AA%E5%AE%9A%E4%B9%89starter/","section":"post","summary":"starter： ​ 1、这个场景需要使用到的依赖是什么？ ​ 2、如何编写自动配置 @Configuration //指定这个类是一个配置类 @ConditionalOnXXX //在指定条件成立的情况下自动配置","tags":["SpringBoot"],"title":"8、自定义starter(SpringBoot)","type":"post","url":"/post/608%E8%87%AA%E5%AE%9A%E4%B9%89starter/","weight":0,"wordcount":657},{"author":null,"categories":["学习"],"content":"","date":1593302400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1593302400,"objectID":"9b16728d944dd6bc2742ee314df2109f","permalink":"https://yiguan1573.github.io/post/607%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%8E%9F%E7%90%86/","publishdate":"2020-06-28T00:00:00Z","readingtime":3,"relpermalink":"/post/607%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%8E%9F%E7%90%86/","section":"post","summary":"几个重要的事件回调机制 配置在META-INF/spring.factories ApplicationContextInitializer SpringApplicationRunListener 只需要放在ioc容器中 ApplicationRunner CommandLineRunner 启动流程： 1、创建SpringA","tags":["SpringBoot"],"title":"7、启动配置原理(SpringBoot)","type":"post","url":"/post/607%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%8E%9F%E7%90%86/","weight":0,"wordcount":1334},{"author":null,"categories":["学习"],"content":"","date":1593216000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1593216000,"objectID":"616428abe83b460a3750a987baa41d2e","permalink":"https://yiguan1573.github.io/post/523idea%E4%B8%ADmaven%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/","publishdate":"2020-06-27T00:00:00Z","readingtime":1,"relpermalink":"/post/523idea%E4%B8%ADmaven%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/","section":"post","summary":"配置 不推荐使用默认的Maven，到官网下载解压后配置到IDEA中 打开设置，找到Maven 选择解压后的Maven文件 更换配置文件 修改本地仓库位","tags":["Maven"],"title":"13、IDEA中Maven的配置和使用(Maven)","type":"post","url":"/post/523idea%E4%B8%ADmaven%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/","weight":0,"wordcount":93},{"author":null,"categories":["学习"],"content":"","date":1593216000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1593216000,"objectID":"487287efdd3a16abd3e40fa3578d16f9","permalink":"https://yiguan1573.github.io/post/606springboot%E4%B8%8E%E6%95%B0%E6%8D%AE%E8%AE%BF%E9%97%AE/","publishdate":"2020-06-27T00:00:00Z","readingtime":4,"relpermalink":"/post/606springboot%E4%B8%8E%E6%95%B0%E6%8D%AE%E8%AE%BF%E9%97%AE/","section":"post","summary":"1、JDBC \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-jdbc\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;mysql\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;mysql-connector-java\u0026lt;/artifactId\u0026gt; \u0026lt;scope\u0026gt;runtime\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; spring: datasource: username: root password: 123456 url: jdbc:mysql://192.168.15.22:3306/jdbc driver-class-name: com.mysql.jdbc.Driver 效果： ​ 默认是用org.apache.tomcat.jdbc.pool.DataSourc","tags":["SpringBoot"],"title":"6、SpringBoot与数据访问(SpringBoot)","type":"post","url":"/post/606springboot%E4%B8%8E%E6%95%B0%E6%8D%AE%E8%AE%BF%E9%97%AE/","weight":0,"wordcount":1532},{"author":null,"categories":["学习"],"content":"","date":1593129600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1593129600,"objectID":"b720d1883443a8d0a29efc32d397eb85","permalink":"https://yiguan1573.github.io/post/522%E8%81%9A%E5%90%88/","publishdate":"2020-06-26T00:00:00Z","readingtime":1,"relpermalink":"/post/522%E8%81%9A%E5%90%88/","section":"post","summary":"聚合 作用: 一键安装各个模块工程。 配置方式:在一个\u0026quot;总的聚合工程”中配置各个参与聚合的模块 使用方式:在聚合工程的pom.xml上点右","tags":["Maven"],"title":"12、聚合(Maven)","type":"post","url":"/post/522%E8%81%9A%E5%90%88/","weight":0,"wordcount":87},{"author":null,"categories":["学习"],"content":"","date":1593129600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1593129600,"objectID":"777765dc5a5ae2e185c3e89629b7a586","permalink":"https://yiguan1573.github.io/post/605docker/","publishdate":"2020-06-26T00:00:00Z","readingtime":4,"relpermalink":"/post/605docker/","section":"post","summary":"1、简介 Docker是一个开源的应用容器引擎；是一个轻量级容器技术； Docker支持将软件编译成一个镜像；然后在镜像中各种软件做好配置，将镜","tags":["SpringBoot","Docker"],"title":"5、Docker(SpringBoot)","type":"post","url":"/post/605docker/","weight":0,"wordcount":1661},{"author":null,"categories":["学习"],"content":"","date":1593043200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1593043200,"objectID":"4ef746349113e44780067a19394428b5","permalink":"https://yiguan1573.github.io/post/521%E7%BB%A7%E6%89%BF/","publishdate":"2020-06-25T00:00:00Z","readingtime":1,"relpermalink":"/post/521%E7%BB%A7%E6%89%BF/","section":"post","summary":"继承 现状 Hello依赖的junit : 4.0 HelloFriend依赖的junit : 4.0 MakeFriends依赖的junit : 4.9 由于test范围的","tags":["Maven"],"title":"11、继承(Maven)","type":"post","url":"/post/521%E7%BB%A7%E6%89%BF/","weight":0,"wordcount":325},{"author":null,"categories":["学习"],"content":"","date":1593043200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":13900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1593043200,"objectID":"c68d46a69b1597d20559a4a9f5b653e2","permalink":"https://yiguan1573.github.io/post/604web%E5%BC%80%E5%8F%91/","publishdate":"2020-06-25T00:00:00Z","readingtime":28,"relpermalink":"/post/604web%E5%BC%80%E5%8F%91/","section":"post","summary":"1、简介 使用SpringBoot； 1）、创建SpringBoot应用，选中我们需要的模块； 2）、SpringBoot已经默认将这些场景配置好","tags":["SpringBoot"],"title":"4、Web开发(SpringBoot)","type":"post","url":"/post/604web%E5%BC%80%E5%8F%91/","weight":0,"wordcount":13862},{"author":null,"categories":["学习"],"content":"","date":1592956800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1592956800,"objectID":"4680da102be84e59a5060954bf4c10a9","permalink":"https://yiguan1573.github.io/post/520%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/","publishdate":"2020-06-24T00:00:00Z","readingtime":1,"relpermalink":"/post/520%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/","section":"post","summary":"各个构建环节执行的顺序:不能打乱顺序,必须按照既定的正确顺序来执行。 Maven的核心程序中定义了抽象的生命周期,生命周期中各个阶段的具体任务","tags":["Maven"],"title":"10、生命周期(Maven)","type":"post","url":"/post/520%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/","weight":0,"wordcount":242},{"author":null,"categories":["学习"],"content":"","date":1592956800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1592956800,"objectID":"7897524f228017f8b45902b14f3d3f68","permalink":"https://yiguan1573.github.io/post/603%E6%97%A5%E5%BF%97/","publishdate":"2020-06-24T00:00:00Z","readingtime":5,"relpermalink":"/post/603%E6%97%A5%E5%BF%97/","section":"post","summary":"1、日志框架 小张；开发一个大型系统； ​ 1、System.out.println(\u0026quot;\u0026quot;)；将关键数据打印在控制台；去掉？写","tags":["SpringBoot"],"title":"3、日志(SpringBoot)","type":"post","url":"/post/603%E6%97%A5%E5%BF%97/","weight":0,"wordcount":2410},{"author":null,"categories":["学习"],"content":"","date":1592870400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":5800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1592870400,"objectID":"541b18d26a7fbe961047f979c85cd656","permalink":"https://yiguan1573.github.io/post/602%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/","publishdate":"2020-06-23T00:00:00Z","readingtime":12,"relpermalink":"/post/602%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/","section":"post","summary":"1、配置文件 SpringBoot使用一个全局的配置文件，配置文件名是固定的； •application.properties •applicat","tags":["SpringBoot"],"title":"2、配置文件(SpringBoot)","type":"post","url":"/post/602%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/","weight":0,"wordcount":5776},{"author":null,"categories":["学习"],"content":"","date":1592870400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1592870400,"objectID":"3c10a72837ff93e1f7132749a84d4130","permalink":"https://yiguan1573.github.io/post/519%E4%BE%9D%E8%B5%96/","publishdate":"2020-06-23T00:00:00Z","readingtime":1,"relpermalink":"/post/519%E4%BE%9D%E8%B5%96/","section":"post","summary":"依赖（初级） Maven解析依赖信息时会到本地仓库中查找被依赖的jar包。 对于我们自己开发的Maven工程。使用mvn install命令安装后","tags":["Maven"],"title":"9、依赖(Maven)","type":"post","url":"/post/519%E4%BE%9D%E8%B5%96/","weight":0,"wordcount":495},{"author":null,"categories":["学习"],"content":"","date":1592784000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1592784000,"objectID":"7b6a198103f84041a17b0c8d06e9d84c","permalink":"https://yiguan1573.github.io/post/601spring-boot-%E5%85%A5%E9%97%A8/","publishdate":"2020-06-22T00:00:00Z","readingtime":6,"relpermalink":"/post/601spring-boot-%E5%85%A5%E9%97%A8/","section":"post","summary":"一、Spring Boot 入门 1、Spring Boot 简介 简化Spring应用开发的一个框架； 整个Spring技术栈的一个大整合； J2EE开发的一站式解决","tags":["SpringBoot"],"title":"1、Spring Boot 入门(SpringBoot)","type":"post","url":"/post/601spring-boot-%E5%85%A5%E9%97%A8/","weight":0,"wordcount":2591},{"author":null,"categories":["学习"],"content":"","date":1592784000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1592784000,"objectID":"5dba94be8e81c343d52ecfded1ba7ebf","permalink":"https://yiguan1573.github.io/post/518%E4%BB%93%E5%BA%93/","publishdate":"2020-06-22T00:00:00Z","readingtime":1,"relpermalink":"/post/518%E4%BB%93%E5%BA%93/","section":"post","summary":"仓库的分类 本地仓库：当前电脑上部署的仓库目录,为当前电脑上所有Maven工程服务 远程仓库 私服:搭建在局域网环境中,为局域网范围内的所有Mav","tags":["Maven"],"title":"8、仓库(Maven)","type":"post","url":"/post/518%E4%BB%93%E5%BA%93/","weight":0,"wordcount":192},{"author":null,"categories":["学习"],"content":"","date":1592697600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1592697600,"objectID":"2a2b121ee323338d41ae00ae2eca5ff1","permalink":"https://yiguan1573.github.io/post/517%E5%9D%90%E6%A0%87/","publishdate":"2020-06-21T00:00:00Z","readingtime":1,"relpermalink":"/post/517%E5%9D%90%E6%A0%87/","section":"post","summary":"坐标 数学中的坐标 在平面上，使用X、Y两个向量可以唯一的定位平面中的任何一一个点。 在空间中,使用X、Y. Z三个向量可以唯一的定位空间中的任何一","tags":["Maven"],"title":"7、坐标(Maven)","type":"post","url":"/post/517%E5%9D%90%E6%A0%87/","weight":0,"wordcount":168},{"author":null,"categories":["学习"],"content":"","date":1592611200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1592611200,"objectID":"3e4e896bda0bba516fe0cbdfdebf2604","permalink":"https://yiguan1573.github.io/post/516pom/","publishdate":"2020-06-20T00:00:00Z","readingtime":1,"relpermalink":"/post/516pom/","section":"post","summary":"POM 含义: Project Object Model项目对象模型 pom.xml对于Maven工程是核心配置文件,与构建过程相关的一 切设置都在这个文件中进行配置。重要程度相","tags":["Maven"],"title":"6、POM(Maven)","type":"post","url":"/post/516pom/","weight":0,"wordcount":88},{"author":null,"categories":["学习"],"content":"","date":1592524800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1592524800,"objectID":"1c5c3d004ffdede2a98cfc63f182406e","permalink":"https://yiguan1573.github.io/post/515%E5%85%B3%E4%BA%8E%E8%81%94%E7%BD%91%E9%97%AE%E9%A2%98/","publishdate":"2020-06-19T00:00:00Z","readingtime":0,"relpermalink":"/post/515%E5%85%B3%E4%BA%8E%E8%81%94%E7%BD%91%E9%97%AE%E9%A2%98/","section":"post","summary":"","tags":["Maven"],"title":"5、关于联网问题(Maven)","type":"post","url":"/post/515%E5%85%B3%E4%BA%8E%E8%81%94%E7%BD%91%E9%97%AE%E9%A2%98/","weight":0,"wordcount":0},{"author":null,"categories":["学习"],"content":"","date":1592438400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1592438400,"objectID":"d54a2f2d5130686ad45409c605b88ce7","permalink":"https://yiguan1573.github.io/post/514%E5%B8%B8%E7%94%A8maven%E5%91%BD%E4%BB%A4/","publishdate":"2020-06-18T00:00:00Z","readingtime":1,"relpermalink":"/post/514%E5%B8%B8%E7%94%A8maven%E5%91%BD%E4%BB%A4/","section":"post","summary":"注意 执行与构建过程相关的Maven命令,必须进入pom. xml所在的目录。 与构建过程相关:编译、测试、打包\u0026hellip;\u0026hellip; 常","tags":["Maven"],"title":"4、常用Maven命令(Maven)","type":"post","url":"/post/514%E5%B8%B8%E7%94%A8maven%E5%91%BD%E4%BB%A4/","weight":0,"wordcount":73},{"author":null,"categories":["学习"],"content":"","date":1592352000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1592352000,"objectID":"24fdf16686ab42c845996dede24759a6","permalink":"https://yiguan1573.github.io/post/513%E7%AC%AC%E4%B8%80%E4%B8%AAmaven%E5%B7%A5%E7%A8%8B/","publishdate":"2020-06-17T00:00:00Z","readingtime":1,"relpermalink":"/post/513%E7%AC%AC%E4%B8%80%E4%B8%AAmaven%E5%B7%A5%E7%A8%8B/","section":"post","summary":"创建约定的目录结构 为什么要遵守约定的目录结构 Maven要负责我们这个项目的自动化构建,以编译为例, Maven要想自动进行编译,那么它必须知道","tags":["Maven"],"title":"3、第一个Maven工程(Maven)","type":"post","url":"/post/513%E7%AC%AC%E4%B8%80%E4%B8%AAmaven%E5%B7%A5%E7%A8%8B/","weight":0,"wordcount":135},{"author":null,"categories":["学习"],"content":"","date":1592265600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1592265600,"objectID":"a593b9250e0eb5d19e7849f45da96128","permalink":"https://yiguan1573.github.io/post/512maven%E7%9A%84%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/","publishdate":"2020-06-16T00:00:00Z","readingtime":1,"relpermalink":"/post/512maven%E7%9A%84%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/","section":"post","summary":"简介 Maven 是 Apache 软件基金会组织维护的一款自动化构建工具，专注服务于 Java 平台的项目构建和依赖管理。Maven 这个单词的本意是：专家，内行。 构建 构建并不","tags":["Maven"],"title":"2、Maven的相关概念(Maven)","type":"post","url":"/post/512maven%E7%9A%84%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/","weight":0,"wordcount":485},{"author":null,"categories":["学习"],"content":"","date":1592179200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1592179200,"objectID":"3898be1e7397eed61a20261fa95c16ec","permalink":"https://yiguan1573.github.io/post/511maven%E7%AE%80%E4%BB%8B/","publishdate":"2020-06-15T00:00:00Z","readingtime":3,"relpermalink":"/post/511maven%E7%AE%80%E4%BB%8B/","section":"post","summary":"真的需要吗？ Maven 是干什么用的？这是很多同学在刚开始接触Maven 时最大的问题。之所以会提出这个问题，是因为即使不使用 Maven 我们仍然可以进行 B/S 结构项","tags":["Maven"],"title":"1、Maven简介(Maven)","type":"post","url":"/post/511maven%E7%AE%80%E4%BB%8B/","weight":0,"wordcount":1035},{"author":null,"categories":["学习"],"content":"","date":1592092800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1592092800,"objectID":"a2d217ff94e219c0e10aa147271a4998","permalink":"https://yiguan1573.github.io/post/331%E4%B9%A6%E5%9F%8E%E9%A1%B9%E7%9B%AE%E7%AC%AC%E4%B9%9D%E9%98%B6%E6%AE%B5/","publishdate":"2020-06-14T00:00:00Z","readingtime":1,"relpermalink":"/post/331%E4%B9%A6%E5%9F%8E%E9%A1%B9%E7%9B%AE%E7%AC%AC%E4%B9%9D%E9%98%B6%E6%AE%B5/","section":"post","summary":"使用 AJAX 验证用户名是否可用 UserServlet 程序中 ajaxExistsUsername 方法： regist.jsp 页面中的代码： 使用 AJAX 修改把商品添加到购物车 CartServlet 程序 pages/client/index.jsp 页面 html代码 js代码","tags":["JavaWeb","AJAX"],"title":"31、书城项目第九阶段(JavaWeb)","type":"post","url":"/post/331%E4%B9%A6%E5%9F%8E%E9%A1%B9%E7%9B%AE%E7%AC%AC%E4%B9%9D%E9%98%B6%E6%AE%B5/","weight":0,"wordcount":58},{"author":null,"categories":["学习"],"content":"","date":1592006400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1592006400,"objectID":"9a57f928ee69942da5d9608791623cdd","permalink":"https://yiguan1573.github.io/post/330ajax%E8%AF%B7%E6%B1%82/","publishdate":"2020-06-13T00:00:00Z","readingtime":1,"relpermalink":"/post/330ajax%E8%AF%B7%E6%B1%82/","section":"post","summary":"简介 AJAX 即“Asynchronous Javascript And XML”（异步 JavaScript 和 XML），是指一种创建交互式网页应用的网页开发 技术 ajax 是一种浏览器通过 js 异步发起请求，","tags":["JavaWeb","AJAX"],"title":"30、AJAX(JavaWeb)","type":"post","url":"/post/330ajax%E8%AF%B7%E6%B1%82/","weight":0,"wordcount":130},{"author":null,"categories":["学习"],"content":"","date":1591920000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1591920000,"objectID":"758c51ace44dde3e70ebdbe2e84ace11","permalink":"https://yiguan1573.github.io/post/329json/","publishdate":"2020-06-12T00:00:00Z","readingtime":1,"relpermalink":"/post/329json/","section":"post","summary":"简介 JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。易于人阅读和编写。同时也易于机器解析和生成。JSON 采用完全独立于语言的文本格式，而且很多语言都提供了","tags":["JavaWeb","JSON"],"title":"29、JSON(JavaWeb)","type":"post","url":"/post/329json/","weight":0,"wordcount":439},{"author":null,"categories":["学习"],"content":"","date":1591833600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1591833600,"objectID":"6897b1846c5cca8c4f20d46476b618c1","permalink":"https://yiguan1573.github.io/post/328%E4%B9%A6%E5%9F%8E%E7%AC%AC%E5%85%AB%E9%98%B6%E6%AE%B5/","publishdate":"2020-06-11T00:00:00Z","readingtime":1,"relpermalink":"/post/328%E4%B9%A6%E5%9F%8E%E7%AC%AC%E5%85%AB%E9%98%B6%E6%AE%B5/","section":"post","summary":"1、使用 Filter 过滤器拦截/pages/manager/所有内容，实 现权限检查 Filter 代码： web.xml 中的配置： 2、ThreadLocal 的使用 ThreadLocal 的作用，它可以","tags":["JavaWeb","Filter"],"title":"28、书城第八阶段(JavaWeb)","type":"post","url":"/post/328%E4%B9%A6%E5%9F%8E%E7%AC%AC%E5%85%AB%E9%98%B6%E6%AE%B5/","weight":0,"wordcount":437},{"author":null,"categories":["学习"],"content":"","date":1591747200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1591747200,"objectID":"1ec7b4eb522cbc91c1214d923cd46386","permalink":"https://yiguan1573.github.io/post/327filter%E8%BF%87%E6%BB%A4%E5%99%A8/","publishdate":"2020-06-10T00:00:00Z","readingtime":2,"relpermalink":"/post/327filter%E8%BF%87%E6%BB%A4%E5%99%A8/","section":"post","summary":"简介 Filter 过滤器它是 JavaWeb 的三大组件之一。三大组件分别是：Servlet 程序、Listener 监听器、Filter 过滤器 Filter 过滤器它是 JavaEE 的规范。也就是","tags":["JavaWeb","Filter"],"title":"27、Filter过滤器(JavaWeb)","type":"post","url":"/post/327filter%E8%BF%87%E6%BB%A4%E5%99%A8/","weight":0,"wordcount":650},{"author":null,"categories":["学习"],"content":"","date":1590364800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1590364800,"objectID":"d332fded2823464bfea31383466558f5","permalink":"https://yiguan1573.github.io/post/510jdbc%E6%80%BB%E7%BB%93/","publishdate":"2020-05-25T00:00:00Z","readingtime":1,"relpermalink":"/post/510jdbc%E6%80%BB%E7%BB%93/","section":"post","summary":"总结 @Test public void testUpdateWithTx() { Connection conn = null; try { //1.获取连接的操作（ //① 手写的连接：JDBCUtils.getConnection(); //② 使用数据库连接","tags":["JDBC"],"title":"10、JDBC总结(JDBC)","type":"post","url":"/post/510jdbc%E6%80%BB%E7%BB%93/","weight":0,"wordcount":328},{"author":null,"categories":["学习"],"content":"","date":1590364800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1590364800,"objectID":"f68e68090a8c3a6675abbeebfbb5d3f2","permalink":"https://yiguan1573.github.io/post/326%E9%AA%8C%E8%AF%81%E7%A0%81/","publishdate":"2020-05-25T00:00:00Z","readingtime":1,"relpermalink":"/post/326%E9%AA%8C%E8%AF%81%E7%A0%81/","section":"post","summary":"表单重复提交有三种常见的情况 提交完表单。服务器使用请求转来进行页面跳转。这个时候，用户按下功能键 F5，就会发起最后一次的请求。 造成表单重复提","tags":["JavaWeb","Session"],"title":"26、验证码(JavaWeb)","type":"post","url":"/post/326%E9%AA%8C%E8%AF%81%E7%A0%81/","weight":0,"wordcount":340},{"author":null,"categories":["学习"],"content":"","date":1590364800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1590364800,"objectID":"96504d6060ebb38273a79955a13551de","permalink":"https://yiguan1573.github.io/post/509apache-dbutils%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/","publishdate":"2020-05-25T00:00:00Z","readingtime":5,"relpermalink":"/post/509apache-dbutils%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/","section":"post","summary":"Apache-DBUtils简介 commons-dbutils 是 Apache 组织提供的一个开源 JDBC工具类库，它是对JDBC的简单封装，学习成本极低，并且使用dbutils能极","tags":["JDBC"],"title":"9、Apache-DBUtils实现CRUD操作(JDBC)","type":"post","url":"/post/509apache-dbutils%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/","weight":0,"wordcount":2185},{"author":null,"categories":["学习"],"content":"","date":1590278400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1590278400,"objectID":"bbf62be7912c1574a22fe0f43d4aa569","permalink":"https://yiguan1573.github.io/post/323cookie1/","publishdate":"2020-05-24T00:00:00Z","readingtime":1,"relpermalink":"/post/323cookie1/","section":"post","summary":"简介 Cookie 翻译过来是饼干的意思 Cookie 是服务器通知客户端保存键值对的一种技术 客户端有了 Cookie 后，每次请求都发送给服务器 每个 Cookie 的大小不能超过 4kb 创建 Cookie 服务器获","tags":["JavaWeb","Cookie"],"title":"23、Cookie(1)(JavaWeb)","type":"post","url":"/post/323cookie1/","weight":0,"wordcount":310},{"author":null,"categories":["学习"],"content":"","date":1590278400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1590278400,"objectID":"eb932717563938da8c59daf6fa4ad849","permalink":"https://yiguan1573.github.io/post/324cookie2/","publishdate":"2020-05-24T00:00:00Z","readingtime":1,"relpermalink":"/post/324cookie2/","section":"post","summary":"浏览器查看 Cookie 谷歌浏览器如何查看 Cookie 火狐浏览器如何查看 Cookie Cookie 生命控制 Cookie 的生命控制指的是如何管理Cookie什么时候被销毁（删除） setMaxAge() 正数，表示在指定","tags":["JavaWeb","Cookie"],"title":"24、Cookie(2)(JavaWeb)","type":"post","url":"/post/324cookie2/","weight":0,"wordcount":171},{"author":null,"categories":["学习"],"content":"","date":1590278400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1590278400,"objectID":"d6c4f93b281875c60f4b028864ec89c8","permalink":"https://yiguan1573.github.io/post/325session-%E4%BC%9A%E8%AF%9D/","publishdate":"2020-05-24T00:00:00Z","readingtime":2,"relpermalink":"/post/325session-%E4%BC%9A%E8%AF%9D/","section":"post","summary":"简介 Session 就一个接口（HttpSession） Session 就是会话。它是用来维护一个客户端和服务器之间关联的一种技术 每个客户端都有自己的一个 Session 会话 Session 会话中","tags":["JavaWeb","Session"],"title":"25、Session 会话(JavaWeb)","type":"post","url":"/post/325session-%E4%BC%9A%E8%AF%9D/","weight":0,"wordcount":650},{"author":null,"categories":["学习"],"content":"","date":1590278400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":4600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1590278400,"objectID":"f260b6efae8c51d0f716688a6244f20b","permalink":"https://yiguan1573.github.io/post/508%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/","publishdate":"2020-05-24T00:00:00Z","readingtime":10,"relpermalink":"/post/508%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/","section":"post","summary":"JDBC数据库连接池的必要性 在使用开发基于数据库的web程序时，传统的模式基本是按以下步骤： 在主程序（如servlet、beans）中建立数","tags":["JDBC"],"title":"8、数据库连接池(JDBC)","type":"post","url":"/post/508%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/","weight":0,"wordcount":4537},{"author":null,"categories":["学习"],"content":"","date":1590192000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1590192000,"objectID":"a6b1a3a8ad79ace7bd8d48ffadb8dd4f","permalink":"https://yiguan1573.github.io/post/322%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8B%E8%BD%BD/","publishdate":"2020-05-23T00:00:00Z","readingtime":1,"relpermalink":"/post/322%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8B%E8%BD%BD/","section":"post","summary":"简介 下载的常用 API 说明： response.getOutputStream(); servletContext.getResourceAsStream(); servletContext.getMimeType(); response.setContentType(); response.setHeader(\u0026ldquo;Content-Disposition\u0026rdquo;, \u0026ldquo;attachment; fileName=1.jpg\u0026rdquo;); 这个响应头告诉浏览器。这是需要下载的。而 attachment 表示附件，也就是下载的一个文件。fileName=后面， 表示下","tags":["JavaWeb"],"title":"22、文件的下载(JavaWeb)","type":"post","url":"/post/322%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8B%E8%BD%BD/","weight":0,"wordcount":470},{"author":null,"categories":["学习"],"content":"","date":1590192000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1590192000,"objectID":"9eefceda953413536d45ea59875b5485","permalink":"https://yiguan1573.github.io/post/507dao%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%AE%9E%E7%8E%B0%E7%B1%BB/","publishdate":"2020-05-23T00:00:00Z","readingtime":5,"relpermalink":"/post/507dao%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%AE%9E%E7%8E%B0%E7%B1%BB/","section":"post","summary":"简介 DAO：Data Access Object访问数据信息的类和接口，包括了对数据的CRUD（Create、Retrival、Update、Delete","tags":["JDBC"],"title":"7、DAO及相关实现类(JDBC)","type":"post","url":"/post/507dao%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%AE%9E%E7%8E%B0%E7%B1%BB/","weight":0,"wordcount":2292},{"author":null,"categories":["学习"],"content":"","date":1590105600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1590105600,"objectID":"ce51898c70a3beaded8077d1951732a9","permalink":"https://yiguan1573.github.io/post/321%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8A%E4%BC%A0/","publishdate":"2020-05-22T00:00:00Z","readingtime":1,"relpermalink":"/post/321%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8A%E4%BC%A0/","section":"post","summary":"简介 要有一个 form 标签，method=post 请求 form 标签的 encType 属性值必须为 multipart/form-data 值 在 form 标签中使用 input type=file 添加上传的文件 编写服务器代码（Servlet 程序）","tags":["JavaWeb"],"title":"21、文件的上传(JavaWeb)","type":"post","url":"/post/321%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8A%E4%BC%A0/","weight":0,"wordcount":429},{"author":null,"categories":["学习"],"content":"","date":1590105600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1590105600,"objectID":"31582401221aa8f03cea7f94730f53f4","permalink":"https://yiguan1573.github.io/post/506%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1/","publishdate":"2020-05-22T00:00:00Z","readingtime":4,"relpermalink":"/post/506%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1/","section":"post","summary":"数据库事务介绍 事务：一组逻辑操作单元,使数据从一种状态变换到另一种状态。 事务处理（事务操作）：保证所有事务都作为一个工作单元来执行，即使出现","tags":["JDBC"],"title":"6、数据库事务(JDBC)","type":"post","url":"/post/506%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1/","weight":0,"wordcount":1956},{"author":null,"categories":["学习"],"content":"","date":1590019200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1590019200,"objectID":"82f0bb60d9e40f5a2cd622e40f5945f2","permalink":"https://yiguan1573.github.io/post/320jstl-%E6%A0%87%E7%AD%BE%E5%BA%93/","publishdate":"2020-05-21T00:00:00Z","readingtime":1,"relpermalink":"/post/320jstl-%E6%A0%87%E7%AD%BE%E5%BA%93/","section":"post","summary":"简介 JSTL 标签库 全称是指 JSP Standard Tag Library JSP 标准标签库。是一个不断完善的开放源代码的 JSP 标签库 EL 表达式主要是为了替换 jsp 中的表达式脚本，而标签库则是为了替换代","tags":["JavaWeb","jsp"],"title":"20、JSTL 标签库(JavaWeb)","type":"post","url":"/post/320jstl-%E6%A0%87%E7%AD%BE%E5%BA%93/","weight":0,"wordcount":433},{"author":null,"categories":["学习"],"content":"","date":1590019200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1590019200,"objectID":"d2c5e537637b6517ecc09b8c09958571","permalink":"https://yiguan1573.github.io/post/505%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5/","publishdate":"2020-05-21T00:00:00Z","readingtime":2,"relpermalink":"/post/505%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5/","section":"post","summary":"批量执行SQL语句 当需要成批插入或者更新记录时，可以采用Java的批量更新机制，这一机制允许多条语句一次性提交给数据库批量处理。通常情况下比","tags":["JDBC"],"title":"5、批量插入(JDBC)","type":"post","url":"/post/505%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5/","weight":0,"wordcount":911},{"author":null,"categories":["学习"],"content":"","date":1589932800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589932800,"objectID":"c991d813d111715cb97c9882147a5882","permalink":"https://yiguan1573.github.io/post/319el-%E8%A1%A8%E8%BE%BE%E5%BC%8F/","publishdate":"2020-05-20T00:00:00Z","readingtime":2,"relpermalink":"/post/319el-%E8%A1%A8%E8%BE%BE%E5%BC%8F/","section":"post","summary":"简介 EL 表达式的全称是：Expression Language，是表达式语言 EL 表达式的什么作用：EL 表达式主要是代替 jsp 页面中的表达式脚本在 jsp 页面","tags":["JavaWeb","jsp"],"title":"19、EL 表达式器(JavaWeb)","type":"post","url":"/post/319el-%E8%A1%A8%E8%BE%BE%E5%BC%8F/","weight":0,"wordcount":664},{"author":null,"categories":["学习"],"content":"","date":1589932800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589932800,"objectID":"9bbd45e1865153f1504337543e9e74ff","permalink":"https://yiguan1573.github.io/post/504%E6%93%8D%E4%BD%9Cblob%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5/","publishdate":"2020-05-20T00:00:00Z","readingtime":2,"relpermalink":"/post/504%E6%93%8D%E4%BD%9Cblob%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5/","section":"post","summary":"MySQL BLOB类型 MySQL中，BLOB是一个二进制大型对象，是一个可以存储大量数据的容器，它能容纳不同大小的数据。 插入BLOB类型的数据必须使","tags":["JDBC"],"title":"4、操作BLOB类型字段(JDBC)","type":"post","url":"/post/504%E6%93%8D%E4%BD%9Cblob%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5/","weight":0,"wordcount":604},{"author":null,"categories":["学习"],"content":"","date":1589846400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589846400,"objectID":"c653c6df8d8dc6c0be43f9e9daae8fbd","permalink":"https://yiguan1573.github.io/post/318listener-%E7%9B%91%E5%90%AC%E5%99%A8/","publishdate":"2020-05-19T00:00:00Z","readingtime":1,"relpermalink":"/post/318listener-%E7%9B%91%E5%90%AC%E5%99%A8/","section":"post","summary":"简介 Listener 监听器它是 JavaWeb 的三大组件之一。JavaWeb 的三大组件分别是：Servlet 程序、Filter 过滤器、Listener 监听器 Listener 它是 JavaEE 的规","tags":["JavaWeb","Listener"],"title":"18、Listener 监听器(JavaWeb)","type":"post","url":"/post/318listener-%E7%9B%91%E5%90%AC%E5%99%A8/","weight":0,"wordcount":273},{"author":null,"categories":["学习"],"content":"","date":1589846400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589846400,"objectID":"03b63ec43bde68f0188ed04869ec85dc","permalink":"https://yiguan1573.github.io/post/503%E4%BD%BF%E7%94%A8preparedstatement%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/","publishdate":"2020-05-19T00:00:00Z","readingtime":7,"relpermalink":"/post/503%E4%BD%BF%E7%94%A8preparedstatement%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/","section":"post","summary":"操作和访问数据库 数据库连接被用于向数据库服务器发送命令和 SQL 语句，并接受数据库服务器返回的结果。其实一个数据库连接就是一个Socket连接。 在","tags":["JDBC"],"title":"3、使用PreparedStatement实现CRUD操作(JDBC)","type":"post","url":"/post/503%E4%BD%BF%E7%94%A8preparedstatement%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/","weight":0,"wordcount":3473},{"author":null,"categories":["学习"],"content":"","date":1589760000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589760000,"objectID":"f662ba0c58f257bff2f9d1d4df1b5a4b","permalink":"https://yiguan1573.github.io/post/502%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/","publishdate":"2020-05-18T00:00:00Z","readingtime":5,"relpermalink":"/post/502%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/","section":"post","summary":"要素一：Driver接口实现类 Driver接口介绍 java.sql.Driver 接口是所有 JDBC 驱动程序需要实现的接口。这个接口是提供给数据库厂商使用的，不同数据库厂商提供","tags":["JDBC"],"title":"2、获取数据库连接(JDBC)","type":"post","url":"/post/502%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/","weight":0,"wordcount":2414},{"author":null,"categories":["学习"],"content":"","date":1589673600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589673600,"objectID":"01cbeb6b6d26be8ee66eaa95b683c88c","permalink":"https://yiguan1573.github.io/post/317jsp%E8%BF%9B%E9%98%B6/","publishdate":"2020-05-17T00:00:00Z","readingtime":1,"relpermalink":"/post/317jsp%E8%BF%9B%E9%98%B6/","section":"post","summary":"jsp 中的out输出和response.getWriter输出的区别 response 中表示响应，我们经常用于设置返回给客户端的内容（输出），out 也是给用户做","tags":["JavaWeb","jsp"],"title":"17、jsp进阶(JavaWeb)","type":"post","url":"/post/317jsp%E8%BF%9B%E9%98%B6/","weight":0,"wordcount":376},{"author":null,"categories":["学习"],"content":"","date":1589673600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589673600,"objectID":"218c3a7992334a8ae0405cdfcace0d84","permalink":"https://yiguan1573.github.io/post/501jdbc%E6%A6%82%E8%BF%B0/","publishdate":"2020-05-17T00:00:00Z","readingtime":2,"relpermalink":"/post/501jdbc%E6%A6%82%E8%BF%B0/","section":"post","summary":"数据的持久化 持久化(persistence)：把数据保存到可掉电式存储设备中以供之后使用。大多数情况下，特别是企业级应用，数据持久化意味着将","tags":["JDBC"],"title":"1、JDBC概述(JDBC)","type":"post","url":"/post/501jdbc%E6%A6%82%E8%BF%B0/","weight":0,"wordcount":931},{"author":null,"categories":["学习"],"content":"","date":1589673600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589673600,"objectID":"34cdd8bdc5c1b21b987246df2052ef53","permalink":"https://yiguan1573.github.io/post/405%E5%AD%97%E8%8A%82%E7%A0%81%E6%93%8D%E4%BD%9C/","publishdate":"2020-05-17T00:00:00Z","readingtime":1,"relpermalink":"/post/405%E5%AD%97%E8%8A%82%E7%A0%81%E6%93%8D%E4%BD%9C/","section":"post","summary":"简介 JAVA动态性的两种常见实现方式： 反射 字节码操作 运行时操作字节码可以上我们实现如下功能: 动态生成新的类 动态改变某个类的结构(添加删除/修","tags":["Java"],"title":"5、字节码操作(Java)","type":"post","url":"/post/405%E5%AD%97%E8%8A%82%E7%A0%81%E6%93%8D%E4%BD%9C/","weight":0,"wordcount":466},{"author":null,"categories":["学习"],"content":"","date":1589587200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589587200,"objectID":"b8a67eede71539576d5615f5322cb22d","permalink":"https://yiguan1573.github.io/post/316jsp%E5%AF%B9%E8%B1%A1/","publishdate":"2020-05-16T00:00:00Z","readingtime":1,"relpermalink":"/post/316jsp%E5%AF%B9%E8%B1%A1/","section":"post","summary":"jsp 九大内置对象 jsp 中的内置对象，是指 Tomcat 在翻译 jsp 页面成为 Servlet 源代码后，内部提供的九大对象，叫内置对象 jsp 四大域对象 四个域对象分别是： pageContext (PageContextImpl 类) 当前 jsp 页","tags":["JavaWeb","jsp"],"title":"16、jsp对象(JavaWeb)","type":"post","url":"/post/316jsp%E5%AF%B9%E8%B1%A1/","weight":0,"wordcount":264},{"author":null,"categories":["学习"],"content":"","date":1589587200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589587200,"objectID":"b337b6b3a80d321ecd4b22f32d5e4052","permalink":"https://yiguan1573.github.io/post/404%E8%84%9A%E6%9C%AC%E5%BC%95%E6%93%8E%E6%89%A7%E8%A1%8Cjs%E4%BB%A3%E7%A0%81/","publishdate":"2020-05-16T00:00:00Z","readingtime":1,"relpermalink":"/post/404%E8%84%9A%E6%9C%AC%E5%BC%95%E6%93%8E%E6%89%A7%E8%A1%8Cjs%E4%BB%A3%E7%A0%81/","section":"post","summary":"简介 脚本引擎介绍 使得Java应用程序可以通过一套固定的接口与各种脚本引擎交互,从而达到在Java平台上调用各种脚本语言的目的。 Java 脚本API是","tags":["Java"],"title":"4、脚本引擎执行JS代码(Java)","type":"post","url":"/post/404%E8%84%9A%E6%9C%AC%E5%BC%95%E6%93%8E%E6%89%A7%E8%A1%8Cjs%E4%BB%A3%E7%A0%81/","weight":0,"wordcount":305},{"author":null,"categories":["学习"],"content":"","date":1589500800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589500800,"objectID":"436456c28c442778e03946c72667152b","permalink":"https://yiguan1573.github.io/post/315jsp%E7%9A%84%E4%B8%89%E7%A7%8D%E7%94%A8%E6%B3%95/","publishdate":"2020-05-15T00:00:00Z","readingtime":3,"relpermalink":"/post/315jsp%E7%9A%84%E4%B8%89%E7%A7%8D%E7%94%A8%E6%B3%95/","section":"post","summary":"jsp 头部的 page 指令 jsp 的 page 指令可以修改 jsp 页面中一些重要的属性，或者行为 \u0026lt;%@ page contentType=\u0026quot;text/html;charset=UTF-8\u0026quot; language=\u0026quot;java\u0026quot; %\u0026gt; i.language属性 表示 jsp 翻译后是什么语言文件。暂时只支持 ja","tags":["JavaWeb","jsp"],"title":"15、jsp的三种用法(JavaWeb)","type":"post","url":"/post/315jsp%E7%9A%84%E4%B8%89%E7%A7%8D%E7%94%A8%E6%B3%95/","weight":0,"wordcount":1239},{"author":null,"categories":["学习"],"content":"","date":1589500800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589500800,"objectID":"bfbac4130633c444f5a711b37bc1da47","permalink":"https://yiguan1573.github.io/post/403%E5%8A%A8%E6%80%81%E7%BC%96%E8%AF%91/","publishdate":"2020-05-15T00:00:00Z","readingtime":1,"relpermalink":"/post/403%E5%8A%A8%E6%80%81%E7%BC%96%E8%AF%91/","section":"post","summary":"动态编译简介 动态编译的应用场景 可以做一个浏览器端编写java代码,上传服务器编译和运行的在线评测系统 服务器动态加载某些类文件进行编译 动态编译","tags":["Java"],"title":"3、动态编译(Java)","type":"post","url":"/post/403%E5%8A%A8%E6%80%81%E7%BC%96%E8%AF%91/","weight":0,"wordcount":334},{"author":null,"categories":["学习"],"content":"","date":1589414400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589414400,"objectID":"6a029bba7e60161eae3c61f3a050c56b","permalink":"https://yiguan1573.github.io/post/314jsp%E7%AE%80%E4%BB%8B/","publishdate":"2020-05-14T00:00:00Z","readingtime":1,"relpermalink":"/post/314jsp%E7%AE%80%E4%BB%8B/","section":"post","summary":"jsp作用 jsp 的全称是 java server pages。Java 的服务器页面 jsp 的主要作用是代替 Servlet 程序回传 html 页面的数据 因为 Servlet 程序回传 html 页面数据是一件非常繁锁的事情","tags":["JavaWeb","jsp"],"title":"14、jsp简介(JavaWeb)","type":"post","url":"/post/314jsp%E7%AE%80%E4%BB%8B/","weight":0,"wordcount":387},{"author":null,"categories":["学习"],"content":"","date":1589414400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589414400,"objectID":"4dfb4105d309e091a41c2826307bb2de","permalink":"https://yiguan1573.github.io/post/402%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/","publishdate":"2020-05-14T00:00:00Z","readingtime":3,"relpermalink":"/post/402%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/","section":"post","summary":"简介 动态语言：程序运行时,可以改变程序结构或变量类型。典型的语言:，Python、 ruby、javascript等 C，C++, JAVA不是动","tags":["Java"],"title":"2、反射机制(Java)","type":"post","url":"/post/402%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/","weight":0,"wordcount":1167},{"author":null,"categories":["学习"],"content":"","date":1589328000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589328000,"objectID":"975ba9118dcb907865e99355ff86a402","permalink":"https://yiguan1573.github.io/post/313java%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/","publishdate":"2020-05-13T00:00:00Z","readingtime":1,"relpermalink":"/post/313java%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/","section":"post","summary":"JAVA三层架构 分层的目的是为了解耦。解耦就是为了降低代码的耦合度。方便项目后期的维护和升级","tags":["JavaWeb","Servlet"],"title":"13、JAVA三层架构(JavaWeb)","type":"post","url":"/post/313java%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/","weight":0,"wordcount":46},{"author":null,"categories":["学习"],"content":"","date":1589328000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589328000,"objectID":"d385c85b4e919db6b6bd172d19d8497a","permalink":"https://yiguan1573.github.io/post/401.annotation%E6%B3%A8%E8%A7%A3/","publishdate":"2020-05-13T00:00:00Z","readingtime":2,"relpermalink":"/post/401.annotation%E6%B3%A8%E8%A7%A3/","section":"post","summary":"简介 Annotation的作用 不是程序本身,可以对程序作出解释。(这一点, 跟注释没什么区别) 可以被其他程序(此如:编译器等)读取。(注解信息","tags":["Java"],"title":"1、Annotation注解(Java)","type":"post","url":"/post/401.annotation%E6%B3%A8%E8%A7%A3/","weight":0,"wordcount":686},{"author":null,"categories":["学习"],"content":"","date":1589241600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589241600,"objectID":"8be5b17dbf8771c837b5c2e4786ccc4e","permalink":"https://yiguan1573.github.io/post/312httpservletresponse-%E7%B1%BB-/","publishdate":"2020-05-12T00:00:00Z","readingtime":1,"relpermalink":"/post/312httpservletresponse-%E7%B1%BB-/","section":"post","summary":"HttpServletResponse 类的作用 HttpServletResponse 类和 HttpServletRequest 类一样。每次请求进来，Tomcat 服务器都会创建一个 Response 对象传 递给 Servlet 程序去使用。HttpServletRequest 表示请求","tags":["JavaWeb","Servlet"],"title":"12、HttpServletResponse 类(JavaWeb)","type":"post","url":"/post/312httpservletresponse-%E7%B1%BB-/","weight":0,"wordcount":361},{"author":null,"categories":["学习"],"content":"","date":1589155200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589155200,"objectID":"4ca00e846d4880b7fe74a4486a16491f","permalink":"https://yiguan1573.github.io/post/311httpservletrequest-%E7%B1%BB-/","publishdate":"2020-05-11T00:00:00Z","readingtime":1,"relpermalink":"/post/311httpservletrequest-%E7%B1%BB-/","section":"post","summary":"HttpServletRequest 类的作用 每次只要有请求进入 Tomcat 服务器，Tomcat 服务器就会把请求过来的 HTTP 协议信息解析好封装到 Request 对象中。 然后传递到 service 方法（doGet 和 doP","tags":["JavaWeb","Servlet"],"title":"11、HttpServletRequest 类 (JavaWeb)","type":"post","url":"/post/311httpservletrequest-%E7%B1%BB-/","weight":0,"wordcount":488},{"author":null,"categories":["学习"],"content":"","date":1589068800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589068800,"objectID":"3f8f11e9287e2ffae4df9b32041908d3","permalink":"https://yiguan1573.github.io/post/310http%E5%8D%8F%E8%AE%AE/","publishdate":"2020-05-10T00:00:00Z","readingtime":2,"relpermalink":"/post/310http%E5%8D%8F%E8%AE%AE/","section":"post","summary":"简介 协议是指双方，或多方，相互约定好，大家都需要遵守的规则，叫协议 所谓 HTTP 协议，就是指，客户端和服务器之间通信时，发送的数据，需要遵守的规则，","tags":["JavaWeb","Servlet","HTTP"],"title":"10、HTTP协议(JavaWeb)","type":"post","url":"/post/310http%E5%8D%8F%E8%AE%AE/","weight":0,"wordcount":732},{"author":null,"categories":["学习"],"content":"","date":1589068800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589068800,"objectID":"0e7a32074bdddf9ae344fd025095013e","permalink":"https://yiguan1573.github.io/post/308servletconfig-%E7%B1%BB/","publishdate":"2020-05-10T00:00:00Z","readingtime":1,"relpermalink":"/post/308servletconfig-%E7%B1%BB/","section":"post","summary":"简介 ServletConfig 类从类名上来看，就知道是 Servlet 程序的配置信息类 Servlet 程序和 ServletConfig 对象都是由 Tomcat 负责创建，我们负责使用 Servlet 程序默认是第一次访问的时候创建，Servlet","tags":["JavaWeb","Servlet"],"title":"8、ServletConfig类(JavaWeb)","type":"post","url":"/post/308servletconfig-%E7%B1%BB/","weight":0,"wordcount":159},{"author":null,"categories":["学习"],"content":"","date":1589068800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589068800,"objectID":"aae5b79dc6f496988bc46a9bff408793","permalink":"https://yiguan1573.github.io/post/309servletcontext-%E7%B1%BB-/","publishdate":"2020-05-10T00:00:00Z","readingtime":1,"relpermalink":"/post/309servletcontext-%E7%B1%BB-/","section":"post","summary":"简介 ServletContext 是一个接口，它表示 Servlet 上下文对象 一个 web 工程，只有一个 ServletContext 对象实例 ServletContext 对象是一个域对象 ServletContext 是在 web 工程部署启动的时候创建。在 web 工程停止的时候销毁 域","tags":["JavaWeb","Servlet"],"title":"9、ServletContext类 (JavaWeb)","type":"post","url":"/post/309servletcontext-%E7%B1%BB-/","weight":0,"wordcount":200},{"author":null,"categories":["学习"],"content":"","date":1588982400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588982400,"objectID":"824920b6ef0f9d3c416af5edff440d03","permalink":"https://yiguan1573.github.io/post/306idea%E4%B8%AD%E5%8A%A8%E6%80%81web%E5%B7%A5%E7%A8%8B%E7%9A%84%E6%93%8D%E4%BD%9C/","publishdate":"2020-05-09T00:00:00Z","readingtime":1,"relpermalink":"/post/306idea%E4%B8%AD%E5%8A%A8%E6%80%81web%E5%B7%A5%E7%A8%8B%E7%9A%84%E6%93%8D%E4%BD%9C/","section":"post","summary":"IDEA 整合 Tomcat 服务器 操作的菜单如下：File | Settings | Build, Execution, Deployment | Application Servers 配置Tomcat 安装目录 就可以通过创建一个 Model 查看是不是配置成功 IDEA 中创建动态 web 工程 创建","tags":["JavaWeb","Tomcat"],"title":"6、IDEA中动态web工程的操作 (JavaWeb)","type":"post","url":"/post/306idea%E4%B8%AD%E5%8A%A8%E6%80%81web%E5%B7%A5%E7%A8%8B%E7%9A%84%E6%93%8D%E4%BD%9C/","weight":0,"wordcount":330},{"author":null,"categories":["学习"],"content":"","date":1588982400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588982400,"objectID":"2eeaf2c1ba281f00f06ada4946e589e0","permalink":"https://yiguan1573.github.io/post/307servlet-%E6%8A%80%E6%9C%AF-/","publishdate":"2020-05-09T00:00:00Z","readingtime":1,"relpermalink":"/post/307servlet-%E6%8A%80%E6%9C%AF-/","section":"post","summary":"Servlet简介 Servlet 是 JavaEE 规范之一。规范就是接口 Servlet 就 JavaWeb 三大组件之一。三大组件分别是：Servlet 程序、Filter 过滤器、Listener 监","tags":["JavaWeb","Servlet"],"title":"7、Servlet技术(JavaWeb)","type":"post","url":"/post/307servlet-%E6%8A%80%E6%9C%AF-/","weight":0,"wordcount":485},{"author":null,"categories":["学习"],"content":"","date":1588896000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588896000,"objectID":"5d5f25f06c3eb8432c9fb33bfad4d588","permalink":"https://yiguan1573.github.io/post/303xml%E8%A7%A3%E6%9E%90%E6%8A%80%E6%9C%AF/","publishdate":"2020-05-08T00:00:00Z","readingtime":2,"relpermalink":"/post/303xml%E8%A7%A3%E6%9E%90%E6%8A%80%E6%9C%AF/","section":"post","summary":"xml解析技术介绍 不管是html文件还是xml文件它们都是标记型文档，都可以使用w3c组织制定的dom技术来解析 早期JDK为我们提供了两种x","tags":["JavaWeb","XML"],"title":"3、xml解析技术(JavaWeb)","type":"post","url":"/post/303xml%E8%A7%A3%E6%9E%90%E6%8A%80%E6%9C%AF/","weight":0,"wordcount":779},{"author":null,"categories":["学习"],"content":"","date":1588896000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588896000,"objectID":"cd7698473bd8087a43d8b1a807e18b84","permalink":"https://yiguan1573.github.io/post/304tomcat%E7%AE%80%E4%BB%8B/","publishdate":"2020-05-08T00:00:00Z","readingtime":2,"relpermalink":"/post/304tomcat%E7%AE%80%E4%BB%8B/","section":"post","summary":"JavaWeb概念 什么是 JavaWeb JavaWeb 是指，所有通过 Java 语言编写可以通过浏览器访问的程序的总称，叫 JavaWeb。 JavaWeb 是基于请求和响应来开发的。 什么是请求","tags":["JavaWeb","Tomcat"],"title":"4、Tomcat简介(JavaWeb)","type":"post","url":"/post/304tomcat%E7%AE%80%E4%BB%8B/","weight":0,"wordcount":611},{"author":null,"categories":["学习"],"content":"","date":1588896000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588896000,"objectID":"ca44ce6af7fd1b29806805cd696c82f1","permalink":"https://yiguan1573.github.io/post/305tomcat%E7%9A%84%E4%BD%BF%E7%94%A8/","publishdate":"2020-05-08T00:00:00Z","readingtime":2,"relpermalink":"/post/305tomcat%E7%9A%84%E4%BD%BF%E7%94%A8/","section":"post","summary":"安装 找到你需要用的 Tomcat 版本对应的 zip 压缩包，解压到需要安装的目录即可 目录介绍 启动 Tomcat 服务器 找到 Tomcat 目录下的 bin 目录下的 startup.bat 文件，双击，就可以启动 Tomcat 服务器","tags":["JavaWeb","Tomcat"],"title":"5、Tomcat的使用(JavaWeb)","type":"post","url":"/post/305tomcat%E7%9A%84%E4%BD%BF%E7%94%A8/","weight":0,"wordcount":665},{"author":null,"categories":["学习"],"content":"","date":1588809600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588809600,"objectID":"36ffd4ad25820d2aef3f0b0bf03c819a","permalink":"https://yiguan1573.github.io/post/302xml%E8%AF%AD%E6%B3%95/","publishdate":"2020-05-07T00:00:00Z","readingtime":2,"relpermalink":"/post/302xml%E8%AF%AD%E6%B3%95/","section":"post","summary":"文档声明 1. 创建一个xml文件 2. 图书有 id 属性表示唯一标识，书名，有作者，价格的信息 xml注释 html和XML注释一样 \u0026lt;!-- html 注释 --\u0026gt; 元素（标签） 什么","tags":["JavaWeb","XML"],"title":"2、xml语法(JavaWeb)","type":"post","url":"/post/302xml%E8%AF%AD%E6%B3%95/","weight":0,"wordcount":507},{"author":null,"categories":["学习"],"content":"","date":1588723200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588723200,"objectID":"3700d58bc4f1e16609673fafd37591ec","permalink":"https://yiguan1573.github.io/post/301xml/","publishdate":"2020-05-06T00:00:00Z","readingtime":1,"relpermalink":"/post/301xml/","section":"post","summary":"JavaWeb技术概览 xml简介 xml 是可扩展的标记性语言 xml 的主要作用有： 用来保存数据，而且这些数据具有自我描述性 它还可以做为项目或者模块的配置","tags":["JavaWeb","XML"],"title":"1、xml简介(JavaWeb)","type":"post","url":"/post/301xml/","weight":0,"wordcount":93},{"author":null,"categories":["学习"],"content":"","date":1588636800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588636800,"objectID":"2c870805b6250f437e542387f2e148ed","permalink":"https://yiguan1573.github.io/post/53es6_async%E5%87%BD%E6%95%B0/","publishdate":"2020-05-05T00:00:00Z","readingtime":1,"relpermalink":"/post/53es6_async%E5%87%BD%E6%95%B0/","section":"post","summary":"源自ES2017 概念：真正意义上去解决异步回调的问题，同步流程表达异步操作 本质：Generator的语法糖 语法 async function foo(){ await异步操作; aw","tags":["JavaScript"],"title":"53、async函数(ES6)","type":"post","url":"/post/53es6_async%E5%87%BD%E6%95%B0/","weight":0,"wordcount":238},{"author":null,"categories":["学习"],"content":"","date":1588636800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588636800,"objectID":"eb612443c5e3cf52aa47a8f50b6f45e2","permalink":"https://yiguan1573.github.io/post/54es6_class%E7%B1%BB%E8%AF%A6%E8%A7%A3/","publishdate":"2020-05-05T00:00:00Z","readingtime":1,"relpermalink":"/post/54es6_class%E7%B1%BB%E8%AF%A6%E8%A7%A3/","section":"post","summary":"通过class定义类/实现类的继承 在类中通过constructor定义构造方法 通过new来创建类的实例 通过extends来实现类的继承 通过s","tags":["JavaScript"],"title":"54、class类详解(ES6)","type":"post","url":"/post/54es6_class%E7%B1%BB%E8%AF%A6%E8%A7%A3/","weight":0,"wordcount":96},{"author":null,"categories":["学习"],"content":"","date":1588636800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588636800,"objectID":"4ec714a5bddc1240b513b988a8925ad8","permalink":"https://yiguan1573.github.io/post/55es6_%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E5%80%BC%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%A9%E5%B1%95/","publishdate":"2020-05-05T00:00:00Z","readingtime":2,"relpermalink":"/post/55es6_%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E5%80%BC%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%A9%E5%B1%95/","section":"post","summary":"字符串扩展 includes(str):判断是否包含指定的字符串 staltsWith(str):判断是否以指定字符串开头 endswith(st","tags":["JavaScript"],"title":"55、字符串，数值，数组，对象的扩展(ES6)","type":"post","url":"/post/55es6_%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E5%80%BC%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%A9%E5%B1%95/","weight":0,"wordcount":513},{"author":null,"categories":["学习"],"content":"","date":1588636800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588636800,"objectID":"5592c925f5454f785f06cc44f56579ef","permalink":"https://yiguan1573.github.io/post/56es6_%E6%B7%B1%E5%BA%A6%E5%85%8B%E9%9A%86/","publishdate":"2020-05-05T00:00:00Z","readingtime":1,"relpermalink":"/post/56es6_%E6%B7%B1%E5%BA%A6%E5%85%8B%E9%9A%86/","section":"post","summary":"拷贝数据 基本数据类型：拷贝后会生成一份新的数据，修改拷贝以后的数据不会影响原数据 对象/数组：拷贝后不会生成新的数据，而是拷贝是引用。修改拷贝","tags":["JavaScript"],"title":"56、深度克隆(ES6)","type":"post","url":"/post/56es6_%E6%B7%B1%E5%BA%A6%E5%85%8B%E9%9A%86/","weight":0,"wordcount":320},{"author":null,"categories":["学习"],"content":"","date":1588636800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588636800,"objectID":"5a9abdd9bdfe0c1785754e0cca81fe0b","permalink":"https://yiguan1573.github.io/post/57es6_setmap%E5%AE%B9%E5%99%A8/","publishdate":"2020-05-05T00:00:00Z","readingtime":1,"relpermalink":"/post/57es6_setmap%E5%AE%B9%E5%99%A8/","section":"post","summary":"Set容器 无序不可重复的多个value的集合体 方法 Set() Set(array) add(vaLue) delete(value) has(value) clear() Map容器 无序的key不重复的多个key-value的集合体 方法 Map() Map(array) set(key, valu","tags":["JavaScript"],"title":"57、set,map容器(ES6)","type":"post","url":"/post/57es6_setmap%E5%AE%B9%E5%99%A8/","weight":0,"wordcount":79},{"author":null,"categories":["学习"],"content":"","date":1588636800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588636800,"objectID":"4054303f64d6eb2eef589658889ca08a","permalink":"https://yiguan1573.github.io/post/58es6_for-of%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3/","publishdate":"2020-05-05T00:00:00Z","readingtime":1,"relpermalink":"/post/58es6_for-of%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3/","section":"post","summary":"for(let value of target){}循环遍历 遍历数组 遍历Set 遍历Map 遍历字符串 遍历伪数组","tags":["JavaScript"],"title":"58、for of用法详解(ES6)","type":"post","url":"/post/58es6_for-of%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3/","weight":0,"wordcount":40},{"author":null,"categories":["学习"],"content":"","date":1588636800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588636800,"objectID":"3abf7e375de7b012dc5a5d8460e4e1bd","permalink":"https://yiguan1573.github.io/post/59es7_%E6%96%B9%E6%B3%95%E4%BB%8B%E7%BB%8D/","publishdate":"2020-05-05T00:00:00Z","readingtime":1,"relpermalink":"/post/59es7_%E6%96%B9%E6%B3%95%E4%BB%8B%E7%BB%8D/","section":"post","summary":"指数运算符(幂):** Array.prototype.includes(value):判断数组中是否包含指定value","tags":["JavaScript"],"title":"59、方法介绍(ES7)","type":"post","url":"/post/59es7_%E6%96%B9%E6%B3%95%E4%BB%8B%E7%BB%8D/","weight":0,"wordcount":59},{"author":null,"categories":["学习"],"content":"","date":1588550400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588550400,"objectID":"e75cc195b3debe4b5f3286fe390c19b8","permalink":"https://yiguan1573.github.io/post/46es6_%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%AE%80%E5%86%99%E6%96%B9%E5%BC%8F/","publishdate":"2020-05-04T00:00:00Z","readingtime":1,"relpermalink":"/post/46es6_%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%AE%80%E5%86%99%E6%96%B9%E5%BC%8F/","section":"post","summary":"简化的对象写法 省略同名的属性值 省略方法的function","tags":["JavaScript"],"title":"46、对象的简写方式(ES6)","type":"post","url":"/post/46es6_%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%AE%80%E5%86%99%E6%96%B9%E5%BC%8F/","weight":0,"wordcount":28},{"author":null,"categories":["学习"],"content":"","date":1588550400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588550400,"objectID":"30370069e55c826b8d9dd4d2ffa53b26","permalink":"https://yiguan1573.github.io/post/47es6_%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/","publishdate":"2020-05-04T00:00:00Z","readingtime":1,"relpermalink":"/post/47es6_%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/","section":"post","summary":"作用：定义匿名函数 基本语法 没有参数: () =\u0026gt; console.Log( \u0026lsquo;xxx\u0026rsquo;) 一个参数: i =\u0026gt; i+2 大于一个参数: (i,j) =\u0026gt; i+j 函数体不用大括号:默认返回结果 函数体如果有多个语句，需要用{","tags":["JavaScript"],"title":"47、箭头函数(ES6)","type":"post","url":"/post/47es6_%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/","weight":0,"wordcount":236},{"author":null,"categories":["学习"],"content":"","date":1588550400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588550400,"objectID":"c2d9334e151fcd4092c322c07b7148b3","permalink":"https://yiguan1573.github.io/post/48es6_%E4%B8%89%E7%82%B9%E8%BF%90%E7%AE%97%E7%AC%A6/","publishdate":"2020-05-04T00:00:00Z","readingtime":1,"relpermalink":"/post/48es6_%E4%B8%89%E7%82%B9%E8%BF%90%E7%AE%97%E7%AC%A6/","section":"post","summary":"rest(可变参数) 用来取代arguments但比arguments灵活,只能是最后部分形参参数 function foo(a,b){ console.log(arguments); arguments.callee();","tags":["JavaScript"],"title":"48、三点运算符(ES6)","type":"post","url":"/post/48es6_%E4%B8%89%E7%82%B9%E8%BF%90%E7%AE%97%E7%AC%A6/","weight":0,"wordcount":126},{"author":null,"categories":["学习"],"content":"","date":1588550400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588550400,"objectID":"cb66d67e17583d1f2657c15225883c5b","permalink":"https://yiguan1573.github.io/post/49es6_%E5%BD%A2%E5%8F%82%E9%BB%98%E8%AE%A4%E5%80%BC/","publishdate":"2020-05-04T00:00:00Z","readingtime":1,"relpermalink":"/post/49es6_%E5%BD%A2%E5%8F%82%E9%BB%98%E8%AE%A4%E5%80%BC/","section":"post","summary":"形参的默认值————当不传入参数的时候默认使用形参里的默认值","tags":["JavaScript"],"title":"49、形参默认值(ES6)","type":"post","url":"/post/49es6_%E5%BD%A2%E5%8F%82%E9%BB%98%E8%AE%A4%E5%80%BC/","weight":0,"wordcount":30},{"author":null,"categories":["学习"],"content":"","date":1588550400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588550400,"objectID":"b5e03895ae1d3a54bd9628c64b843214","permalink":"https://yiguan1573.github.io/post/50es6_promise%E5%AF%B9%E8%B1%A1/","publishdate":"2020-05-04T00:00:00Z","readingtime":1,"relpermalink":"/post/50es6_promise%E5%AF%B9%E8%B1%A1/","section":"post","summary":"理解 Promise对象: 代表了未来某个将要发生的事件(通常是一个异步操作) 有了promise对象，可以将异步操作以同步的流程表达出来，避免了","tags":["JavaScript"],"title":"50、promise对象(ES6)","type":"post","url":"/post/50es6_promise%E5%AF%B9%E8%B1%A1/","weight":0,"wordcount":188},{"author":null,"categories":["学习"],"content":"","date":1588550400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588550400,"objectID":"9667b556afd02b84b2e2f4a6457756f0","permalink":"https://yiguan1573.github.io/post/51es6_symbol%E5%B1%9E%E6%80%A7/","publishdate":"2020-05-04T00:00:00Z","readingtime":2,"relpermalink":"/post/51es6_symbol%E5%B1%9E%E6%80%A7/","section":"post","summary":"简介 ES5中对象的属性名都是字符串，容易造成重名，污染环境 概念：ES6中的添加了一种原始数据类型symbol(已有的原始数据类型: String, Number, boolean, null, undefined,","tags":["JavaScript"],"title":"51、Symbol属性(ES6)","type":"post","url":"/post/51es6_symbol%E5%B1%9E%E6%80%A7/","weight":0,"wordcount":725},{"author":null,"categories":["学习"],"content":"","date":1588550400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588550400,"objectID":"d30c0d9c399b48c2d4d1a65c8f7bb116","permalink":"https://yiguan1573.github.io/post/52es6_generator%E5%87%BD%E6%95%B0/","publishdate":"2020-05-04T00:00:00Z","readingtime":1,"relpermalink":"/post/52es6_generator%E5%87%BD%E6%95%B0/","section":"post","summary":"简介 概念 ES6提供的解决异步编程的方案之一 Generator函数是一个状态机， 内部封装了不同状态的数据， 用来生成遍历器对象 可暂停函数(惰性求","tags":["JavaScript"],"title":"52、Generator函数(ES6)","type":"post","url":"/post/52es6_generator%E5%87%BD%E6%95%B0/","weight":0,"wordcount":359},{"author":null,"categories":["学习"],"content":"","date":1588464000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588464000,"objectID":"41081d4597cd97c210d2f1aadb37606e","permalink":"https://yiguan1573.github.io/post/45es6_%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2/","publishdate":"2020-05-03T00:00:00Z","readingtime":1,"relpermalink":"/post/45es6_%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2/","section":"post","summary":"模板字符串:简化字符串的拼接 模板字符串必须用``包含 变化的部分使用${xxx}定义","tags":["JavaScript"],"title":"45、模板字符串(ES6)","type":"post","url":"/post/45es6_%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2/","weight":0,"wordcount":41},{"author":null,"categories":["学习"],"content":"","date":1588377600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588377600,"objectID":"fcbd520a9c8414e2ca717964d5e4cae9","permalink":"https://yiguan1573.github.io/post/44es6_%E5%8F%98%E9%87%8F%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC/","publishdate":"2020-05-02T00:00:00Z","readingtime":1,"relpermalink":"/post/44es6_%E5%8F%98%E9%87%8F%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC/","section":"post","summary":"理解：从对象或数组中提取数据，并赋值给变量(多个) 对象的解构赋值：let {n,a} = {n:\u0026lsquo;tom\u0026rsquo;,a:12} 数组的解构赋值：let [a,b] = [1， \u0026lsquo;atguigu\u0026rsquo;]; 用途：给多个形参赋值","tags":["JavaScript"],"title":"44、变量的解构赋值(ES6)","type":"post","url":"/post/44es6_%E5%8F%98%E9%87%8F%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC/","weight":0,"wordcount":66},{"author":null,"categories":["学习"],"content":"","date":1588291200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588291200,"objectID":"3e7a776ef02f02e8222434bab5b475a5","permalink":"https://yiguan1573.github.io/post/42es5_%E5%87%BD%E6%95%B0%E6%89%A9%E5%B1%95/","publishdate":"2020-05-01T00:00:00Z","readingtime":1,"relpermalink":"/post/42es5_%E5%87%BD%E6%95%B0%E6%89%A9%E5%B1%95/","section":"post","summary":"Function.prototype.bind(obj) 作用：将函数内的this绑定为bj,并将函数返回 区别bind()与call()和apply() 都能指定函数中的this call()/app","tags":["JavaScript"],"title":"42、函数扩展(ES5)","type":"post","url":"/post/42es5_%E5%87%BD%E6%95%B0%E6%89%A9%E5%B1%95/","weight":0,"wordcount":93},{"author":null,"categories":["学习"],"content":"","date":1588291200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588291200,"objectID":"bdbb6387b8c5053766f5bc855bc09425","permalink":"https://yiguan1573.github.io/post/43es6_let%E5%92%8Cconst%E5%85%B3%E9%94%AE%E5%AD%97/","publishdate":"2020-05-01T00:00:00Z","readingtime":1,"relpermalink":"/post/43es6_let%E5%92%8Cconst%E5%85%B3%E9%94%AE%E5%AD%97/","section":"post","summary":"let 作用：与var类似用于声明一个变量 特点：在块作用域内有效，不能重复声明，不会预处理，不存在提升 应用：循环遍历加监听，使用let取代var是","tags":["JavaScript"],"title":"43、let const关键字(ES6)","type":"post","url":"/post/43es6_let%E5%92%8Cconst%E5%85%B3%E9%94%AE%E5%AD%97/","weight":0,"wordcount":110},{"author":null,"categories":["学习"],"content":"","date":1588204800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588204800,"objectID":"cab19fcd0422679c9f40cae17ffac991","permalink":"https://yiguan1573.github.io/post/41es5_%E6%95%B0%E7%BB%84%E7%9A%84%E6%89%A9%E5%B1%95/","publishdate":"2020-04-30T00:00:00Z","readingtime":1,"relpermalink":"/post/41es5_%E6%95%B0%E7%BB%84%E7%9A%84%E6%89%A9%E5%B1%95/","section":"post","summary":"Array.prototype.indexOf(value):得到值在数组中的第一个下标 Array.prototype.lastIndexO","tags":["JavaScript"],"title":"41、数组的扩展(ES5)","type":"post","url":"/post/41es5_%E6%95%B0%E7%BB%84%E7%9A%84%E6%89%A9%E5%B1%95/","weight":0,"wordcount":248},{"author":null,"categories":["学习"],"content":"","date":1588118400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588118400,"objectID":"dc7c6c1b011911754a59a9a9c8d6e2cf","permalink":"https://yiguan1573.github.io/post/40es5_object%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95%E6%89%A9%E5%B1%95/","publishdate":"2020-04-29T00:00:00Z","readingtime":1,"relpermalink":"/post/40es5_object%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95%E6%89%A9%E5%B1%95/","section":"post","summary":"Object.create(prototype, [descriptors]) 作用：以指定对象为原型创建新的对象，为新的对象指定新的属性，并对属性进行描述 value:指定值 writable:标识当前属性值是否是可修","tags":["JavaScript"],"title":"40、Object对象方法扩展(ES5)","type":"post","url":"/post/40es5_object%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95%E6%89%A9%E5%B1%95/","weight":0,"wordcount":243},{"author":null,"categories":["学习"],"content":"","date":1588032000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588032000,"objectID":"3179885c67fee070b4c21e40608760e6","permalink":"https://yiguan1573.github.io/post/39es5_%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F/","publishdate":"2020-04-28T00:00:00Z","readingtime":1,"relpermalink":"/post/39es5_%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F/","section":"post","summary":"理解 除了正常运行模式(混杂模式)，ES5添加了第二种运行模式:”严格模式”(strict mode) 顾名思义，这种模式使得Javascript在更严格","tags":["JavaScript"],"title":"39、严格模式(ES5)","type":"post","url":"/post/39es5_%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":278},{"author":null,"categories":["学习"],"content":"","date":1587945600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1587945600,"objectID":"0243972494975b57c0e5a67d139a09f1","permalink":"https://yiguan1573.github.io/post/212jquery%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/","publishdate":"2020-04-27T00:00:00Z","readingtime":1,"relpermalink":"/post/212jquery%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/","section":"post","summary":"颜色插件 animate动画不会改变背景颜色，需要使用插件 插件就是用来做扩展功能的 jQuery插件库: jq22.com 省市联动插件 UI插件 jQuery UI 封装插件 给jQ","tags":["jQuery"],"title":"12、jQuery插件开发(jQuery)","type":"post","url":"/post/212jquery%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/","weight":0,"wordcount":93},{"author":null,"categories":["学习"],"content":"","date":1587859200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1587859200,"objectID":"db67bee3c68a5350b6f10670bc2bd9a8","permalink":"https://yiguan1573.github.io/post/211jquery%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86%E7%82%B9/","publishdate":"2020-04-26T00:00:00Z","readingtime":1,"relpermalink":"/post/211jquery%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86%E7%82%B9/","section":"post","summary":"链式编程 通常情况下,只有设置操作才能把链式编程延续下去。因为获取操作的时候,会返回获取到的相应的值,无法返回jQuery对象 each方法 jQ","tags":["jQuery"],"title":"11、jQuery补充知识点(jQuery)","type":"post","url":"/post/211jquery%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86%E7%82%B9/","weight":0,"wordcount":220},{"author":null,"categories":["学习"],"content":"","date":1587772800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1587772800,"objectID":"6ccbedb31bfea5d952e7445c16852675","permalink":"https://yiguan1573.github.io/post/210jquery%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/","publishdate":"2020-04-25T00:00:00Z","readingtime":1,"relpermalink":"/post/210jquery%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/","section":"post","summary":"on注册事件 jQuery1.7之后, jQuery用on统一了 所有事件的处理方法 on注册简单事件，不支持动态注册 on注册事件委托，支持动态注册","tags":["jQuery"],"title":"10、jQuery事件机制(jQuery)","type":"post","url":"/post/210jquery%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/","weight":0,"wordcount":204},{"author":null,"categories":["学习"],"content":"","date":1587686400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1587686400,"objectID":"6530b23fe8e29d0d62df431d6c437706","permalink":"https://yiguan1573.github.io/post/209jquery%E5%B0%BA%E5%AF%B8%E5%92%8C%E4%BD%8D%E7%BD%AE%E6%93%8D%E4%BD%9C/","publishdate":"2020-04-24T00:00:00Z","readingtime":1,"relpermalink":"/post/209jquery%E5%B0%BA%E5%AF%B8%E5%92%8C%E4%BD%8D%E7%BD%AE%E6%93%8D%E4%BD%9C/","section":"post","summary":"宽高 width()和height()设置或者获取高度,不包括内边距、边框和外边距 获取页面可视区的宽高 innerWidth/innerHeig","tags":["jQuery"],"title":"9、jQuery尺寸和位置操作(jQuery)","type":"post","url":"/post/209jquery%E5%B0%BA%E5%AF%B8%E5%92%8C%E4%BD%8D%E7%BD%AE%E6%93%8D%E4%BD%9C/","weight":0,"wordcount":248},{"author":null,"categories":["学习"],"content":"","date":1587600000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1587600000,"objectID":"68f9e65f97926b50ab8a51cd8972a9ab","permalink":"https://yiguan1573.github.io/post/208jquery%E5%B1%9E%E6%80%A7%E6%93%8D%E4%BD%9C/","publishdate":"2020-04-23T00:00:00Z","readingtime":1,"relpermalink":"/post/208jquery%E5%B1%9E%E6%80%A7%E6%93%8D%E4%BD%9C/","section":"post","summary":"attr操作 attr()，设置获取属性 removeAttr()，移除属性 操作布尔类型的属性 原生js设置checked属性，设置为true或者","tags":["jQuery"],"title":"8、jQuery属性操作(jQuery)","type":"post","url":"/post/208jquery%E5%B1%9E%E6%80%A7%E6%93%8D%E4%BD%9C/","weight":0,"wordcount":151},{"author":null,"categories":["学习"],"content":"","date":1587513600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1587513600,"objectID":"b44c2f801094b217334c5ab1025a5422","permalink":"https://yiguan1573.github.io/post/207jquery%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C/","publishdate":"2020-04-22T00:00:00Z","readingtime":2,"relpermalink":"/post/207jquery%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C/","section":"post","summary":"创建节点 原生js中创建节点:document.write();innerHTML; document.createElement ( ) ; jQuery创建节点的方法html()和$()方法","tags":["jQuery"],"title":"7、jQuery节点操作(jQuery)","type":"post","url":"/post/207jquery%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C/","weight":0,"wordcount":634},{"author":null,"categories":["学习"],"content":"","date":1587427200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1587427200,"objectID":"3c48786923a501ae4b72641aadb212e3","permalink":"https://yiguan1573.github.io/post/206jquery%E5%8A%A8%E7%94%BB/","publishdate":"2020-04-21T00:00:00Z","readingtime":2,"relpermalink":"/post/206jquery%E5%8A%A8%E7%94%BB/","section":"post","summary":"三组基本动画 显示(show)与隐藏(hide)是一组动画 滑入(slideDown)与滑出(slideUp)与切换(slideToggle) ,","tags":["jQuery"],"title":"6、jQuery动画(jQuery)","type":"post","url":"/post/206jquery%E5%8A%A8%E7%94%BB/","weight":0,"wordcount":658},{"author":null,"categories":["学习"],"content":"","date":1587340800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1587340800,"objectID":"f50d273797d9fdc7a93627714696acfc","permalink":"https://yiguan1573.github.io/post/205jquery%E6%A0%B7%E5%BC%8F%E6%93%8D%E4%BD%9C/","publishdate":"2020-04-20T00:00:00Z","readingtime":1,"relpermalink":"/post/205jquery%E6%A0%B7%E5%BC%8F%E6%93%8D%E4%BD%9C/","section":"post","summary":"Class类操作 添加类addClass(类名) 移除类removeClass(类名) 判断类 切换类","tags":["jQuery"],"title":"5、jQuery样式操作(jQuery)","type":"post","url":"/post/205jquery%E6%A0%B7%E5%BC%8F%E6%93%8D%E4%BD%9C/","weight":0,"wordcount":47},{"author":null,"categories":["学习"],"content":"","date":1587254400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1587254400,"objectID":"f37cdcc9556b408526a0cd29533e4d5e","permalink":"https://yiguan1573.github.io/post/204jquery%E9%80%89%E6%8B%A9%E5%99%A8/","publishdate":"2020-04-19T00:00:00Z","readingtime":1,"relpermalink":"/post/204jquery%E9%80%89%E6%8B%A9%E5%99%A8/","section":"post","summary":"基本选择器 层次选择器 过滤选择器 筛选选择器 mouseenter事件和mouseleave事件 mouseover事件在鼠标移动到选取的元素及其子","tags":["jQuery"],"title":"4、jQuery选择器(jQuery)","type":"post","url":"/post/204jquery%E9%80%89%E6%8B%A9%E5%99%A8/","weight":0,"wordcount":179},{"author":null,"categories":["学习"],"content":"","date":1587168000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1587168000,"objectID":"43f7ba53fbe875801cff5e7f0a4e4b0b","permalink":"https://yiguan1573.github.io/post/203jquery%E5%9F%BA%E7%A1%802/","publishdate":"2020-04-18T00:00:00Z","readingtime":1,"relpermalink":"/post/203jquery%E5%9F%BA%E7%A1%802/","section":"post","summary":"设置获取文本内容 text(),获取和设置文本的 获取文本：text()方法不给参数 获取id为div1这个标签的文本会获取到这个标签中所有的文本","tags":["jQuery"],"title":"3、jQuery基础2(jQuery)","type":"post","url":"/post/203jquery%E5%9F%BA%E7%A1%802/","weight":0,"wordcount":455},{"author":null,"categories":["学习"],"content":"","date":1587081600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1587081600,"objectID":"b3ea9024c8ef238121ab71e4e9844a26","permalink":"https://yiguan1573.github.io/post/201jquery%E7%AE%80%E4%BB%8B/","publishdate":"2020-04-17T00:00:00Z","readingtime":2,"relpermalink":"/post/201jquery%E7%AE%80%E4%BB%8B/","section":"post","summary":"原生js缺陷 入口函数（window.onload）只能有一个，如果有多个，后面的会将前面的给覆盖掉 原生js的API名字比较复杂 容错性比较差，","tags":["jQuery"],"title":"1、jQuery简介(jQuery)","type":"post","url":"/post/201jquery%E7%AE%80%E4%BB%8B/","weight":0,"wordcount":545},{"author":null,"categories":["学习"],"content":"","date":1587081600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1587081600,"objectID":"dc060365238ffd0e7e363a5184295f66","permalink":"https://yiguan1573.github.io/post/202jquery%E5%9F%BA%E7%A1%80/","publishdate":"2020-04-17T00:00:00Z","readingtime":2,"relpermalink":"/post/202jquery%E5%9F%BA%E7%A1%80/","section":"post","summary":"入口函数 写法一 $(document).ready(function(){ }); 写法二 $(function(){ }); jQuery入口函数和window.onload入口函数的区别 jQuery入口函数可以写多个 执行时机不同: jQu","tags":["jQuery"],"title":"2、jQuery基础1(jQuery)","type":"post","url":"/post/202jquery%E5%9F%BA%E7%A1%80/","weight":0,"wordcount":557},{"author":null,"categories":["学习"],"content":"","date":1586995200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1586995200,"objectID":"60982a36b2ee1a0a4589832808753356","permalink":"https://yiguan1573.github.io/post/38%E7%BA%BF%E7%A8%8B%E6%9C%BA%E5%88%B6%E4%B8%8E%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/","publishdate":"2020-04-16T00:00:00Z","readingtime":2,"relpermalink":"/post/38%E7%BA%BF%E7%A8%8B%E6%9C%BA%E5%88%B6%E4%B8%8E%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/","section":"post","summary":"进程与线程 应用程序必须运行在某个进程的某个线程上 一个进程中至少有一个运行的线程:主线程，进程启动后自动创建 一个进程中也可以同时运行多个线程，","tags":["JavaScript"],"title":"38、线程机制与事件机制(JS高级)","type":"post","url":"/post/38%E7%BA%BF%E7%A8%8B%E6%9C%BA%E5%88%B6%E4%B8%8E%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/","weight":0,"wordcount":745},{"author":null,"categories":["学习"],"content":"","date":1586908800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1586908800,"objectID":"ce8235dd012ec1fafc5b8572cbaf871a","permalink":"https://yiguan1573.github.io/post/37%E7%BB%A7%E6%89%BF%E6%A8%A1%E5%BC%8F/","publishdate":"2020-04-15T00:00:00Z","readingtime":1,"relpermalink":"/post/37%E7%BB%A7%E6%89%BF%E6%A8%A1%E5%BC%8F/","section":"post","summary":"原型链继承 步骤 定义父类型构造函数 给父类型的原型添加方法 定义子类型的构造函数 创建父类型的对象赋值给子类型的原型 将子类型原型的构造属性设置为子类","tags":["JavaScript"],"title":"37、继承模式(JS高级)","type":"post","url":"/post/37%E7%BB%A7%E6%89%BF%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":260},{"author":null,"categories":["学习"],"content":"","date":1586822400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1586822400,"objectID":"492a5c18f1b92de301074217a115d081","permalink":"https://yiguan1573.github.io/post/36%E5%AF%B9%E8%B1%A1%E5%88%9B%E5%BB%BA%E6%A8%A1%E5%9E%8B/","publishdate":"2020-04-14T00:00:00Z","readingtime":1,"relpermalink":"/post/36%E5%AF%B9%E8%B1%A1%E5%88%9B%E5%BB%BA%E6%A8%A1%E5%9E%8B/","section":"post","summary":"Object构造模型 套路:先创建空bject对象，再动态添加属性/方法 适用场景:起始时不确定对象内部数据 问题:语句太多 对象字面量 套路:使用{","tags":["JavaScript"],"title":"36、对象创建模型(JS高级)","type":"post","url":"/post/36%E5%AF%B9%E8%B1%A1%E5%88%9B%E5%BB%BA%E6%A8%A1%E5%9E%8B/","weight":0,"wordcount":305},{"author":null,"categories":["学习"],"content":"","date":1586736000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1586736000,"objectID":"f4f3e2dcd828f4a3196ebcc4755a2ff8","permalink":"https://yiguan1573.github.io/post/35%E9%97%AD%E5%8C%85/","publishdate":"2020-04-13T00:00:00Z","readingtime":1,"relpermalink":"/post/35%E9%97%AD%E5%8C%85/","section":"post","summary":"闭包的简介 当一个嵌套的内部(子)函数引用了嵌套的外部(父)函数的变量(函数)时，就产生了闭包 理解：闭包是嵌套的内部函数 产生闭包的条件:函数嵌","tags":["JavaScript"],"title":"35、闭包(JS高级)","type":"post","url":"/post/35%E9%97%AD%E5%8C%85/","weight":0,"wordcount":473},{"author":null,"categories":["学习"],"content":"","date":1586649600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1586649600,"objectID":"bb3cbd08e510da81e8b49853dcf031a2","permalink":"https://yiguan1573.github.io/post/34%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%B8%8E%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE/","publishdate":"2020-04-12T00:00:00Z","readingtime":1,"relpermalink":"/post/34%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%B8%8E%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE/","section":"post","summary":"作用域与作用域链 作用域是静态的，在编写时就确定了 分类 全局作用域 函数作用域 块作用域（ES6） 作用：隔离变量，不同作用域下同名变量不会发生冲突","tags":["JavaScript"],"title":"34、作用域与作用域链(JS高级)","type":"post","url":"/post/34%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%B8%8E%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE/","weight":0,"wordcount":69},{"author":null,"categories":["学习"],"content":"","date":1586563200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1586563200,"objectID":"fcf8694ab6e21bbff335877d62994a03","permalink":"https://yiguan1573.github.io/post/33%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E4%B8%8E%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%88/","publishdate":"2020-04-11T00:00:00Z","readingtime":2,"relpermalink":"/post/33%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E4%B8%8E%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%88/","section":"post","summary":"变量提升和函数提升 变量声明提升:通过var定义(声明)的变量，在定义语句之前就可以访问到 函数声明提升:通过function声明的函数，在之前","tags":["JavaScript"],"title":"33、执行上下文与执行上下文栈(JS高级)","type":"post","url":"/post/33%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E4%B8%8E%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%88/","weight":0,"wordcount":589},{"author":null,"categories":["学习"],"content":"","date":1586476800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1586476800,"objectID":"db58882bdf1bb6eb39aaea5ecd6a8e09","permalink":"https://yiguan1573.github.io/post/32%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE/","publishdate":"2020-04-10T00:00:00Z","readingtime":2,"relpermalink":"/post/32%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE/","section":"post","summary":"函数的prototype 每个函数都有一个prototype属性， 它默认指向一个object空对象(即称为:原型对象) 原型对象中有一个属性co","tags":["JavaScript"],"title":"32、原型与原型链(JS高级)","type":"post","url":"/post/32%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE/","weight":0,"wordcount":590},{"author":null,"categories":["学习"],"content":"","date":1586390400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1586390400,"objectID":"af6c955d81554cb4be2e85b0193b4475","permalink":"https://yiguan1573.github.io/post/31json/","publishdate":"2020-04-09T00:00:00Z","readingtime":1,"relpermalink":"/post/31json/","section":"post","summary":"简介 JS中的对象只有JS自己认识，其他的语言都不认识 JSON就是一个特殊格式的字符串，这个字符串可以被任意的语言所识别，并且可以转换为任意语","tags":["JavaScript"],"title":"31、JSON(JS)","type":"post","url":"/post/31json/","weight":0,"wordcount":492},{"author":null,"categories":["学习"],"content":"","date":1586217600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1586217600,"objectID":"7ef88eb9d324422d7851f29b458bbce3","permalink":"https://yiguan1573.github.io/post/30%E7%B1%BB%E7%9A%84%E6%93%8D%E4%BD%9C/","publishdate":"2020-04-07T00:00:00Z","readingtime":1,"relpermalink":"/post/30%E7%B1%BB%E7%9A%84%E6%93%8D%E4%BD%9C/","section":"post","summary":"通过style属性来修改元素的样式，每修改一 个样式，浏览器就需要重新渲染一次页面，这样的执行的性能是比较差的 当修改多个样式时并不方便 可以通过","tags":["JavaScript"],"title":"30、类的操作(JS)","type":"post","url":"/post/30%E7%B1%BB%E7%9A%84%E6%93%8D%E4%BD%9C/","weight":0,"wordcount":152},{"author":null,"categories":["学习"],"content":"","date":1585612800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1585612800,"objectID":"e68f020d0be1e13836c33dfd8c7a96af","permalink":"https://yiguan1573.github.io/post/29%E5%AE%9A%E6%97%B6%E5%99%A8/","publishdate":"2020-03-31T00:00:00Z","readingtime":1,"relpermalink":"/post/29%E5%AE%9A%E6%97%B6%E5%99%A8/","section":"post","summary":"定时器简介 setInterval()，定时调用，可以将一个函数， 每隔一段时间执行一次 参数： 回调函数，该函数会每隔一段时间被调用一次 每次调用间","tags":["JavaScript"],"title":"29、定时器(JS)","type":"post","url":"/post/29%E5%AE%9A%E6%97%B6%E5%99%A8/","weight":0,"wordcount":445},{"author":null,"categories":["学习"],"content":"","date":1585526400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1585526400,"objectID":"710e84369bd91f7d85b9fcbff3afbdb4","permalink":"https://yiguan1573.github.io/post/28bom/","publishdate":"2020-03-30T00:00:00Z","readingtime":3,"relpermalink":"/post/28bom/","section":"post","summary":"BOM（浏览器对象模型） BOM可以使我们通过JS来操作浏览器 在BOM中为我们提供了一组对象，用来完成对浏览器的操作 BOM对象 Window——","tags":["JavaScript"],"title":"28、BOM(JS)","type":"post","url":"/post/28bom/","weight":0,"wordcount":1053},{"author":null,"categories":["学习"],"content":"","date":1585440000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1585440000,"objectID":"f11aae33a2e25852605ba62908e6ed19","permalink":"https://yiguan1573.github.io/post/27%E9%94%AE%E7%9B%98%E7%9A%84%E4%BA%8B%E4%BB%B6/","publishdate":"2020-03-29T00:00:00Z","readingtime":1,"relpermalink":"/post/27%E9%94%AE%E7%9B%98%E7%9A%84%E4%BA%8B%E4%BB%B6/","section":"post","summary":"语法 键盘事件 onkeydown——按键被按下；如果一直按着某个按键不松手，则事件会一直触发 onkeyup——按键被松开 键盘事件一般都会绑定给","tags":["JavaScript"],"title":"27、键盘的事件(JS)","type":"post","url":"/post/27%E9%94%AE%E7%9B%98%E7%9A%84%E4%BA%8B%E4%BB%B6/","weight":0,"wordcount":359},{"author":null,"categories":["学习"],"content":"","date":1585353600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1585353600,"objectID":"03b4d88cfa5220bbb9980a10d097d35c","permalink":"https://yiguan1573.github.io/post/26%E6%BB%9A%E8%BD%AE%E7%9A%84%E4%BA%8B%E4%BB%B6/","publishdate":"2020-03-28T00:00:00Z","readingtime":1,"relpermalink":"/post/26%E6%BB%9A%E8%BD%AE%E7%9A%84%E4%BA%8B%E4%BB%B6/","section":"post","summary":"语法 onmousewheel鼠标滚轮滚动的事件，会在滚轮滚动时触发，但是火狐不支持该属性 在火狐中需要使用DOMMouseScroll来绑定滚","tags":["JavaScript"],"title":"26、滚轮的事件(JS)","type":"post","url":"/post/26%E6%BB%9A%E8%BD%AE%E7%9A%84%E4%BA%8B%E4%BB%B6/","weight":0,"wordcount":494},{"author":null,"categories":["学习"],"content":"","date":1585267200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1585267200,"objectID":"d10f50eca20e023cc58f656d1ef5a8e4","permalink":"https://yiguan1573.github.io/post/25%E4%BA%8B%E4%BB%B6%E7%9A%84%E7%BB%83%E4%B9%A0%E6%8B%96%E6%8B%BD/","publishdate":"2020-03-27T00:00:00Z","readingtime":1,"relpermalink":"/post/25%E4%BA%8B%E4%BB%B6%E7%9A%84%E7%BB%83%E4%B9%A0%E6%8B%96%E6%8B%BD/","section":"post","summary":"拖拽的流程 当鼠标在被拖拽元素上按下时，开始拖拽onmousedown 当鼠标移动时被拖拽元素跟随鼠标移动onmousemove 当鼠标松开时，被","tags":["JavaScript"],"title":"25、事件的练习：拖拽(JS)","type":"post","url":"/post/25%E4%BA%8B%E4%BB%B6%E7%9A%84%E7%BB%83%E4%B9%A0%E6%8B%96%E6%8B%BD/","weight":0,"wordcount":256},{"author":null,"categories":["学习"],"content":"","date":1585180800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1585180800,"objectID":"d4cc83d94d5be7b216f89dbdeb8e2a23","permalink":"https://yiguan1573.github.io/post/24%E4%BA%8B%E4%BB%B6/","publishdate":"2020-03-26T00:00:00Z","readingtime":3,"relpermalink":"/post/24%E4%BA%8B%E4%BB%B6/","section":"post","summary":"事件对象 当响应函数被调用时，浏览器每次都会将一个事件对象作为实参传递进响应函数中，这个事件对象中封装了当前事件的相关信息，比如：鼠标的坐标，","tags":["JavaScript"],"title":"24、事件(JS)","type":"post","url":"/post/24%E4%BA%8B%E4%BB%B6/","weight":0,"wordcount":1142},{"author":null,"categories":["学习"],"content":"","date":1585008000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1585008000,"objectID":"e4bcdd256207c8e5ddf1d805edd85969","permalink":"https://yiguan1573.github.io/post/23dom%E5%AF%B9css%E7%9A%84%E6%93%8D%E4%BD%9C/","publishdate":"2020-03-24T00:00:00Z","readingtime":2,"relpermalink":"/post/23dom%E5%AF%B9css%E7%9A%84%E6%93%8D%E4%BD%9C/","section":"post","summary":"读取和修改内联样式 使用style属性来操作元素的内联样式 读取内联样式 语法：元素.style.样式名 例子 元素.style.width 元素.st","tags":["JavaScript"],"title":"23、DOM对CSS的操作(JS)","type":"post","url":"/post/23dom%E5%AF%B9css%E7%9A%84%E6%93%8D%E4%BD%9C/","weight":0,"wordcount":939},{"author":null,"categories":["学习"],"content":"","date":1583539200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1583539200,"objectID":"ef54dcaa21ac60fe1d2baaf573e73f19","permalink":"https://yiguan1573.github.io/post/119shell%E7%BC%96%E7%A8%8B/","publishdate":"2020-03-07T00:00:00Z","readingtime":5,"relpermalink":"/post/119shell%E7%BC%96%E7%A8%8B/","section":"post","summary":"介绍 Linux 运维工程师在进行服务器集群管理时，需要编写 Shell 程序来进行服务器管理。 对于 JavaEE 和 Python 程序员来说，工作的需要，你的老大会要求你编写一些 Shell 脚本进行","tags":["Linux"],"title":"19、Shell编程(Linux)","type":"post","url":"/post/119shell%E7%BC%96%E7%A8%8B/","weight":0,"wordcount":2047},{"author":null,"categories":["学习"],"content":"","date":1583452800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1583452800,"objectID":"2a6ae876aa45bd6bb87a99e8dea13c39","permalink":"https://yiguan1573.github.io/post/118javaee-%E5%AE%9A%E5%88%B6%E7%AF%87-%E6%90%AD%E5%BB%BA-javaee-%E7%8E%AF%E5%A2%83/","publishdate":"2020-03-06T00:00:00Z","readingtime":1,"relpermalink":"/post/118javaee-%E5%AE%9A%E5%88%B6%E7%AF%87-%E6%90%AD%E5%BB%BA-javaee-%E7%8E%AF%E5%A2%83/","section":"post","summary":"概述 示意图 安装JDK 安装JDK 先将软件通过 xftp5 上传到 /opt下 解压缩到 /opt 配置环境变量的配置文件 vim /etc/profile #JAVA_HOME export JAVA_HOME=/opt/jdk1.8.0_161 export JRE_HOME=${JAVA_HOME}/jre export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib:$CLASSPATH export JAVA_PATH=${JAVA_HOME}/bin:${JRE_HOME}/bin export PATH=$PATH:${JAVA_PATH} 需要如下操作才能生效 在","tags":["Linux"],"title":"18、JavaEE定制篇搭建JavaEE环境(Linux)","type":"post","url":"/post/118javaee-%E5%AE%9A%E5%88%B6%E7%AF%87-%E6%90%AD%E5%BB%BA-javaee-%E7%8E%AF%E5%A2%83/","weight":0,"wordcount":329},{"author":null,"categories":["学习"],"content":"","date":1583366400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1583366400,"objectID":"c6d008bf1231ac5c9efd4d6d2d2dab85","permalink":"https://yiguan1573.github.io/post/117rpm%E5%92%8Cyum/","publishdate":"2020-03-05T00:00:00Z","readingtime":2,"relpermalink":"/post/117rpm%E5%92%8Cyum/","section":"post","summary":"rpm 包的管理 介绍 一种用于互联网下载包的打包及安装工具，它包含在某些 Linux 分发版中。它生成具有.RPM 扩展名的文件。RPM 是 RedHat Package Manager（Re","tags":["Linux"],"title":"17、RPM和YUM(Linux)","type":"post","url":"/post/117rpm%E5%92%8Cyum/","weight":0,"wordcount":671},{"author":null,"categories":["学习"],"content":"","date":1582761600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1582761600,"objectID":"6ec3cb432cfaf6fbc7c922a0e70c5546","permalink":"https://yiguan1573.github.io/post/116%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/","publishdate":"2020-02-27T00:00:00Z","readingtime":4,"relpermalink":"/post/116%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/","section":"post","summary":"进程的基本介绍 在 LINUX 中，每个执行的程序（代码）都称为一个进程。每一个进程都分配一个ID号 每一个进程，都会对应一个父进程，而这个父进程可以复制多","tags":["Linux"],"title":"16、进程管理(Linux)","type":"post","url":"/post/116%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/","weight":0,"wordcount":1908},{"author":null,"categories":["学习"],"content":"","date":1582675200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1582675200,"objectID":"c1c53bba1bc8c965ee952fe904875985","permalink":"https://yiguan1573.github.io/post/115%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/","publishdate":"2020-02-26T00:00:00Z","readingtime":1,"relpermalink":"/post/115%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/","section":"post","summary":"linux 网络环境配置 第一种方法(自动获取) 缺点: linux 启动后会自动获取 IP,缺点是每次自动获取的 ip 地址可能不一样。这个不适用于做服务器，因为我们的服务","tags":["Linux"],"title":"15、网络配置(Linux)","type":"post","url":"/post/115%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/","weight":0,"wordcount":143},{"author":null,"categories":["学习"],"content":"","date":1582588800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1582588800,"objectID":"3b7a3a170e624ecf3c23f2cfb6ae5bc2","permalink":"https://yiguan1573.github.io/post/114%E7%A3%81%E7%9B%98%E5%92%8C%E5%88%86%E5%8C%BA/","publishdate":"2020-02-25T00:00:00Z","readingtime":3,"relpermalink":"/post/114%E7%A3%81%E7%9B%98%E5%92%8C%E5%88%86%E5%8C%BA/","section":"post","summary":"分区基础知识 分区的方式 mbr分区 最多支持四个主分区 系统只能安装在主分区 扩展分区要占一个主分区 MBR 最大只支持 2TB，但拥有最好的兼容性 gtp分区","tags":["Linux"],"title":"14、磁盘和分区(Linux)","type":"post","url":"/post/114%E7%A3%81%E7%9B%98%E5%92%8C%E5%88%86%E5%8C%BA/","weight":0,"wordcount":1280},{"author":null,"categories":["学习"],"content":"","date":1581897600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581897600,"objectID":"8e4dea1966c2e2a9b261a5a4ceae17ec","permalink":"https://yiguan1573.github.io/post/110%E6%90%9C%E7%B4%A2%E6%9F%A5%E6%89%BE%E7%B1%BB/","publishdate":"2020-02-17T00:00:00Z","readingtime":1,"relpermalink":"/post/110%E6%90%9C%E7%B4%A2%E6%9F%A5%E6%89%BE%E7%B1%BB/","section":"post","summary":"find指令 find 指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件或者目录显示在终端 基本语法 find [搜索范围] [选项] 选项说明 案例 按文件","tags":["Linux"],"title":"10、搜索查找类(Linux)","type":"post","url":"/post/110%E6%90%9C%E7%B4%A2%E6%9F%A5%E6%89%BE%E7%B1%BB/","weight":0,"wordcount":486},{"author":null,"categories":["学习"],"content":"","date":1581897600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581897600,"objectID":"4a04bdd87ea757cec751caff09908c49","permalink":"https://yiguan1573.github.io/post/111%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B%E7%BC%A9/","publishdate":"2020-02-17T00:00:00Z","readingtime":1,"relpermalink":"/post/111%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B%E7%BC%A9/","section":"post","summary":"gzip/gunzip指令 gzip 用于压缩文件，gunzip用于解压的 基本语法 gzip 文件 （功能描述：压缩文件，只能将文件压缩为*.gz 文件） gunzip 文件.g","tags":["Linux"],"title":"11、压缩和解压缩(Linux)","type":"post","url":"/post/111%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B%E7%BC%A9/","weight":0,"wordcount":466},{"author":null,"categories":["学习"],"content":"","date":1581897600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581897600,"objectID":"90a4ba5c6c71cc513c7488438ffceab4","permalink":"https://yiguan1573.github.io/post/112%E7%BB%84%E7%AE%A1%E7%90%86%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/","publishdate":"2020-02-17T00:00:00Z","readingtime":3,"relpermalink":"/post/112%E7%BB%84%E7%AE%A1%E7%90%86%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/","section":"post","summary":"Linux组基本介绍 在 linux 中的每个用户必须属于一个组，不能独立于组外。在 linux 中每个文件有所有者、所在组、其它组的概念 文件/目录所有者 一般为文件的","tags":["Linux"],"title":"12、组管理和权限管理(Linux)","type":"post","url":"/post/112%E7%BB%84%E7%AE%A1%E7%90%86%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/","weight":0,"wordcount":1457},{"author":null,"categories":["学习"],"content":"","date":1581897600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581897600,"objectID":"f8d24f84311ed7c59d035c751aecc010","permalink":"https://yiguan1573.github.io/post/113crond%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/","publishdate":"2020-02-17T00:00:00Z","readingtime":1,"relpermalink":"/post/113crond%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/","section":"post","summary":"原理示意图 crontab 进行 定时任务的设置 概述 任务调度：是指系统在某个时间执行的特定的命令或程序 任务调度分类 系统工作：有些重要的工作必须周而复始地执行。","tags":["Linux"],"title":"13、crond任务调度(Linux)","type":"post","url":"/post/113crond%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/","weight":0,"wordcount":401},{"author":null,"categories":["学习"],"content":"","date":1581897600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581897600,"objectID":"d20bcac64389d52b07178f74fd69dc59","permalink":"https://yiguan1573.github.io/post/109%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E7%B1%BB/","publishdate":"2020-02-17T00:00:00Z","readingtime":1,"relpermalink":"/post/109%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E7%B1%BB/","section":"post","summary":"date 指令-显示当前日期 基本语法 date （功能描述：显示当前时间） date +%Y （功能描述：显示当前年份） date +%m （功能描述：显示当前月份） date +%d （功能描述：显示当前","tags":["Linux"],"title":"9、时间日期类(Linux)","type":"post","url":"/post/109%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E7%B1%BB/","weight":0,"wordcount":150},{"author":null,"categories":["学习"],"content":"","date":1581724800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581724800,"objectID":"6aaec7c430dac27755dc8dbbb40e687b","permalink":"https://yiguan1573.github.io/post/104%E5%85%B3%E6%9C%BA%E9%87%8D%E5%90%AF%E6%B3%A8%E9%94%80/","publishdate":"2020-02-15T00:00:00Z","readingtime":1,"relpermalink":"/post/104%E5%85%B3%E6%9C%BA%E9%87%8D%E5%90%AF%E6%B3%A8%E9%94%80/","section":"post","summary":"关机重启命令 shutdown shutdown -h now ，表示立即关机 shutdown -h 1 ，表示 1 分钟后关机 shutdown -r now: ，立即重启 halt，直接使用，效果等价于关机 reboot，重启系统 sync，","tags":["Linux"],"title":"4、关机重启注销(Linux)","type":"post","url":"/post/104%E5%85%B3%E6%9C%BA%E9%87%8D%E5%90%AF%E6%B3%A8%E9%94%80/","weight":0,"wordcount":257},{"author":null,"categories":["学习"],"content":"","date":1581724800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581724800,"objectID":"5d3254c6ceeea4e6de2941f5ad82956c","permalink":"https://yiguan1573.github.io/post/105%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/","publishdate":"2020-02-15T00:00:00Z","readingtime":2,"relpermalink":"/post/105%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/","section":"post","summary":"创建用户指定密码 基本介绍 Linux系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以","tags":["Linux"],"title":"5、用户管理(Linux)","type":"post","url":"/post/105%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/","weight":0,"wordcount":681},{"author":null,"categories":["学习"],"content":"","date":1581724800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581724800,"objectID":"15300be79a5e4d6f5298bf85f96d61dc","permalink":"https://yiguan1573.github.io/post/106%E8%BF%90%E8%A1%8C%E7%BA%A7%E5%88%AB%E5%92%8C%E6%89%BE%E5%9B%9Eroot%E5%AF%86%E7%A0%81/","publishdate":"2020-02-15T00:00:00Z","readingtime":1,"relpermalink":"/post/106%E8%BF%90%E8%A1%8C%E7%BA%A7%E5%88%AB%E5%92%8C%E6%89%BE%E5%9B%9Eroot%E5%AF%86%E7%A0%81/","section":"post","summary":"指令运行级别 运行级别说明 0：关机 1：单用户【找回丢失密码】 2：多用户状态没有网络服务 3：多用户状态有网络服务 4：系统未使用保留给用户 5：图形","tags":["Linux"],"title":"6、运行级别和找回root密码(Linux)","type":"post","url":"/post/106%E8%BF%90%E8%A1%8C%E7%BA%A7%E5%88%AB%E5%92%8C%E6%89%BE%E5%9B%9Eroot%E5%AF%86%E7%A0%81/","weight":0,"wordcount":353},{"author":null,"categories":["学习"],"content":"","date":1581724800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581724800,"objectID":"8b44cb752d51ca00e9eba1598c235972","permalink":"https://yiguan1573.github.io/post/107%E5%B8%AE%E5%8A%A9%E6%8C%87%E4%BB%A4/","publishdate":"2020-02-15T00:00:00Z","readingtime":1,"relpermalink":"/post/107%E5%B8%AE%E5%8A%A9%E6%8C%87%E4%BB%A4/","section":"post","summary":"使用man获得帮助信息 基本语法 man [命令或配置文件]（功能描述：获得帮助信息） help指令 基本语法 help 命令 （功能描述：获得 shell 内置命令的帮助信息）","tags":["Linux"],"title":"7、帮助指令(Linux)","type":"post","url":"/post/107%E5%B8%AE%E5%8A%A9%E6%8C%87%E4%BB%A4/","weight":0,"wordcount":70},{"author":null,"categories":["学习"],"content":"","date":1581724800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581724800,"objectID":"b1899d81aa0d33e05a2f9b855a231aef","permalink":"https://yiguan1573.github.io/post/108%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E7%B1%BB/","publishdate":"2020-02-15T00:00:00Z","readingtime":3,"relpermalink":"/post/108%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E7%B1%BB/","section":"post","summary":"pwd指令 基本语法 pwd 功能描述：显示当前工作目录的绝对路径 ls指令 基本语法 ls [选项] [目录或是文件] -a，显示当前目录所有的文件和目录，包括隐","tags":["Linux"],"title":"8、文件目录类(Linux)","type":"post","url":"/post/108%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E7%B1%BB/","weight":0,"wordcount":1428},{"author":null,"categories":["学习"],"content":"","date":1581638400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581638400,"objectID":"694b92fd38d4a67587f19ca66e4ed3a0","permalink":"https://yiguan1573.github.io/post/21dom%E6%9F%A5%E8%AF%A2/","publishdate":"2020-02-14T00:00:00Z","readingtime":3,"relpermalink":"/post/21dom%E6%9F%A5%E8%AF%A2/","section":"post","summary":"通过具体的元素节点来查询 元素.getElementsByTagName()，通过标签名查询当前元素的指定后代元素 元素.childNodes，","tags":["JavaScript"],"title":"21、DOM查询(JS)","type":"post","url":"/post/21dom%E6%9F%A5%E8%AF%A2/","weight":0,"wordcount":1009},{"author":null,"categories":["学习"],"content":"","date":1581638400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581638400,"objectID":"1071b2c886d3d84ef0e803f4d55fcb75","permalink":"https://yiguan1573.github.io/post/22dom%E5%A2%9E%E5%88%A0/","publishdate":"2020-02-14T00:00:00Z","readingtime":1,"relpermalink":"/post/22dom%E5%A2%9E%E5%88%A0/","section":"post","summary":"DOM修改 document.createElement()，可以根据标签名创建一个元素节点对象 document.createTextNode","tags":["JavaScript"],"title":"22、DOM增删(JS)","type":"post","url":"/post/22dom%E5%A2%9E%E5%88%A0/","weight":0,"wordcount":455},{"author":null,"categories":["学习"],"content":"","date":1581552000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581552000,"objectID":"611de51e433914891c444858b780eea3","permalink":"https://yiguan1573.github.io/post/15date%E5%AF%B9%E8%B1%A1/","publishdate":"2020-02-13T00:00:00Z","readingtime":1,"relpermalink":"/post/15date%E5%AF%B9%E8%B1%A1/","section":"post","summary":"Data对象创建 日期的对象，在JS中通过Date对象来表示一个时间 创建一个当前的时间对象 var d = new Date(); console.log(d);//Thu Feb 13 2020 16:56:50 GMT+0800 (中国标准时间) 创建一个指定的","tags":["JavaScript"],"title":"15、Date对象(JS)","type":"post","url":"/post/15date%E5%AF%B9%E8%B1%A1/","weight":0,"wordcount":440},{"author":null,"categories":["学习"],"content":"","date":1581552000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581552000,"objectID":"d0996dd6fc76e9ca232284d7f53a4df5","permalink":"https://yiguan1573.github.io/post/16math/","publishdate":"2020-02-13T00:00:00Z","readingtime":1,"relpermalink":"/post/16math/","section":"post","summary":"简介 Math属于一个工具类，它不需要我们创建对象，它里边封装了属性运算相关的常量和方法，我们可以直接使用它来进行数学运算相关的操作 方法 Mat","tags":["JavaScript"],"title":"16、Math(JS)","type":"post","url":"/post/16math/","weight":0,"wordcount":305},{"author":null,"categories":["学习"],"content":"","date":1581552000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581552000,"objectID":"53bc47925681e6d6a899dea4663fae01","permalink":"https://yiguan1573.github.io/post/17%E5%8C%85%E8%A3%85%E7%B1%BB/","publishdate":"2020-02-13T00:00:00Z","readingtime":1,"relpermalink":"/post/17%E5%8C%85%E8%A3%85%E7%B1%BB/","section":"post","summary":"在JS中为我们提供了三个包装类：String() Boolean() Number()，通过这三个包装类可以创建基本数据类型的对象 var num = new Number(2); var str = new String(\u0026quot;hello\u0026quot;); var bool = new Boolean(true);","tags":["JavaScript"],"title":"17、包装类(JS)","type":"post","url":"/post/17%E5%8C%85%E8%A3%85%E7%B1%BB/","weight":0,"wordcount":190},{"author":null,"categories":["学习"],"content":"","date":1581552000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581552000,"objectID":"e0a3508fed3b72a49de802bcc2e9d5b8","permalink":"https://yiguan1573.github.io/post/18%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%B3%95/","publishdate":"2020-02-13T00:00:00Z","readingtime":2,"relpermalink":"/post/18%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%B3%95/","section":"post","summary":"在底层字符串都是以字符数组的形式保存的 length，获取字符串的长度 var str=\u0026quot;hello world\u0026quot;; console.log(str.length); console.log(str[4]); charAt()，根据索引获取指定的字符 charCodeAt(","tags":["JavaScript"],"title":"18、字符串的方法(JS)","type":"post","url":"/post/18%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%B3%95/","weight":0,"wordcount":948},{"author":null,"categories":["学习"],"content":"","date":1581552000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581552000,"objectID":"60a96ff99d6ad77afff60d5fc71f5551","permalink":"https://yiguan1573.github.io/post/19%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/","publishdate":"2020-02-13T00:00:00Z","readingtime":3,"relpermalink":"/post/19%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/","section":"post","summary":"正则表达式的简介 正则用来定义一些字符串的规则，程序可以根据这些规则来判断一个字符串是否符合规则，也可以将一个字符串中符合规则的内容提取出来 创","tags":["JavaScript"],"title":"19、正则表达式(JS)","type":"post","url":"/post/19%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/","weight":0,"wordcount":1114},{"author":null,"categories":["学习"],"content":"","date":1581552000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581552000,"objectID":"ea2c2b89709572595216dd07aa776be0","permalink":"https://yiguan1573.github.io/post/20dom/","publishdate":"2020-02-13T00:00:00Z","readingtime":3,"relpermalink":"/post/20dom/","section":"post","summary":"DOM（Document Object Model）简介 文档对象模型，通过DOM可以来任意来修改网页中各个内容 文档——指网页，一个网页就是一个文档 对象——","tags":["JavaScript"],"title":"20、DOM(JS)","type":"post","url":"/post/20dom/","weight":0,"wordcount":1477},{"author":null,"categories":["学习"],"content":"","date":1581465600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581465600,"objectID":"361fc0c9177caa7e509ee872e1e925ae","permalink":"https://yiguan1573.github.io/post/14%E5%87%BD%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/","publishdate":"2020-02-12T00:00:00Z","readingtime":1,"relpermalink":"/post/14%E5%87%BD%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/","section":"post","summary":"call()和apply() 当对函数调用call()和apply()都会调用函数执行 function fun(){ alert(this); } fun.apply(); fun.call(); fun(); var obj={}; fun.apply(obj); fun.call(obj); 通过两个方法可以直接调用函数，并且","tags":["JavaScript"],"title":"14、函数的方法(JS)","type":"post","url":"/post/14%E5%87%BD%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/","weight":0,"wordcount":367},{"author":null,"categories":["学习"],"content":"","date":1581379200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581379200,"objectID":"0414bbe0de6d64712e0729741c4bd632","permalink":"https://yiguan1573.github.io/post/10%E5%87%BD%E6%95%B02/","publishdate":"2020-02-11T00:00:00Z","readingtime":2,"relpermalink":"/post/10%E5%87%BD%E6%95%B02/","section":"post","summary":"使用工厂方法创建对象 使用工厂方法创建的对象，使用的构造函数都是Object，所以创建的对象都是Object这个类型，导致我们无法区分多种不同","tags":["JavaScript"],"title":"10、函数2(JS)","type":"post","url":"/post/10%E5%87%BD%E6%95%B02/","weight":0,"wordcount":779},{"author":null,"categories":["学习"],"content":"","date":1581379200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581379200,"objectID":"7058e724a9ecfd7741be27445fb161db","permalink":"https://yiguan1573.github.io/post/11tostring/","publishdate":"2020-02-11T00:00:00Z","readingtime":1,"relpermalink":"/post/11tostring/","section":"post","summary":"toString() 当我们直接在页面中打印一个对象时，实际上是输出对象的toString()方法的返回值 function Person(name,age){ this.name = name; this.age = age; } var per=new Person(\u0026quot;孙悟空","tags":["JavaScript"],"title":"11、toString()(JS)","type":"post","url":"/post/11tostring/","weight":0,"wordcount":134},{"author":null,"categories":["学习"],"content":"","date":1581379200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581379200,"objectID":"7bc023d9421bac8ed1f049f29db7816d","permalink":"https://yiguan1573.github.io/post/12%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/","publishdate":"2020-02-11T00:00:00Z","readingtime":1,"relpermalink":"/post/12%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/","section":"post","summary":"垃圾回收（GC） 程序运行过程中会产生垃圾，垃圾积攒过多，会导致程序运行的速度变慢 当一个对象没有设置任何变量或属性对它进行引用，此时将无法操作","tags":["JavaScript"],"title":"12、垃圾回收(JS)","type":"post","url":"/post/12%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/","weight":0,"wordcount":122},{"author":null,"categories":["学习"],"content":"","date":1581379200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581379200,"objectID":"4fdbce1a07772299ec825df085d16738","permalink":"https://yiguan1573.github.io/post/13%E6%95%B0%E7%BB%84/","publishdate":"2020-02-11T00:00:00Z","readingtime":4,"relpermalink":"/post/13%E6%95%B0%E7%BB%84/","section":"post","summary":"数组简介 数组也是一个对象 创建数组对象 var arr = new Array();//或者var arr = []; 向数组中添加元素 数组对象[索引] = 值; arr[0] = 123; arr[1] = \u0026quot;hello\u0026quot;; 使用len","tags":["JavaScript"],"title":"13、数组(JS)","type":"post","url":"/post/13%E6%95%B0%E7%BB%84/","weight":0,"wordcount":1519},{"author":null,"categories":["学习"],"content":"","date":1581379200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581379200,"objectID":"7e360e112dc105b97b7bb04b1100a990","permalink":"https://yiguan1573.github.io/post/103vi%E5%92%8Cvim/","publishdate":"2020-02-11T00:00:00Z","readingtime":2,"relpermalink":"/post/103vi%E5%92%8Cvim/","section":"post","summary":"vi和vim介绍 所有的 Linux 系统都会内建 vi 文本编辑器，Vim 具有程序编辑的能力，可以看做是 Vi 的增强版本，可以主动的以字体颜色辨别语法的正确性，方","tags":["Linux"],"title":"3、vi和vim(Linux)","type":"post","url":"/post/103vi%E5%92%8Cvim/","weight":0,"wordcount":708},{"author":null,"categories":["学习"],"content":"","date":1581292800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581292800,"objectID":"3888c9d50965328affd04344afed1d4b","permalink":"https://yiguan1573.github.io/post/101centos%E5%9F%BA%E7%A1%80/","publishdate":"2020-02-10T00:00:00Z","readingtime":1,"relpermalink":"/post/101centos%E5%9F%BA%E7%A1%80/","section":"post","summary":"虚拟机的网络连接三种形式 桥连接：Linux可以和其他的系统通信，但是可能造成IP冲突 NAT：Linux可以访问外网，不会造成IP地址冲突 主机","tags":["Linux"],"title":"1、CentOS基础(Linux)","type":"post","url":"/post/101centos%E5%9F%BA%E7%A1%80/","weight":0,"wordcount":237},{"author":null,"categories":["学习"],"content":"","date":1581292800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581292800,"objectID":"6b206353881f04386bf3ac43031b4acd","permalink":"https://yiguan1573.github.io/post/102%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C/","publishdate":"2020-02-10T00:00:00Z","readingtime":1,"relpermalink":"/post/102%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C/","section":"post","summary":"远程登录Linux需要的软件 XShell远程连接配置 XFTP 是一个基于 windows 平台的功能强大的 SFTP、FTP 文件传输软件。使用了 Xftp 以后，windows","tags":["Linux"],"title":"2、远程操作(Linux)","type":"post","url":"/post/102%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C/","weight":0,"wordcount":87},{"author":null,"categories":["学习"],"content":"","date":1581206400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581206400,"objectID":"6321936e4a27b29a63273e6eef10a561","permalink":"https://yiguan1573.github.io/post/9%E5%87%BD%E6%95%B01/","publishdate":"2020-02-09T00:00:00Z","readingtime":4,"relpermalink":"/post/9%E5%87%BD%E6%95%B01/","section":"post","summary":"函数（function）的简介 函数也是对象，函数中可以封装一些功能（代码） 创建并调用一个函数对象 var fun = new Function(\u0026quot;con","tags":["JavaScript"],"title":"9、函数1(JS)","type":"post","url":"/post/9%E5%87%BD%E6%95%B01/","weight":0,"wordcount":1839},{"author":null,"categories":["学习"],"content":"","date":1581120000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581120000,"objectID":"8d80e36e13e59b3461f7b025214a1f82","permalink":"https://yiguan1573.github.io/post/7%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/","publishdate":"2020-02-08T00:00:00Z","readingtime":3,"relpermalink":"/post/7%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/","section":"post","summary":"条件判断语句 条件判断语句也称为if语句 语法一： if(条件表达式){ 语句... } - 执行流程： if语句执行时，会先对条件表达式进行求值判断， 如果","tags":["JavaScript"],"title":"7、流程控制语句(JS)","type":"post","url":"/post/7%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/","weight":0,"wordcount":1243},{"author":null,"categories":["学习"],"content":"","date":1581120000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581120000,"objectID":"2d0e8a79ba97685417ddb7071a932de5","permalink":"https://yiguan1573.github.io/post/8%E5%AF%B9%E8%B1%A1/","publishdate":"2020-02-08T00:00:00Z","readingtime":2,"relpermalink":"/post/8%E5%AF%B9%E8%B1%A1/","section":"post","summary":"对象的简介 对象是一种复合数据类型，在对象中可以保存多个不同数据类型的属性 对象的分类 内建对象：由MS标准定义的对象，在任何的ES的实现中都可以","tags":["JavaScript"],"title":"8、对象(JS)","type":"post","url":"/post/8%E5%AF%B9%E8%B1%A1/","weight":0,"wordcount":881},{"author":null,"categories":["学习"],"content":"","date":1580947200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1580947200,"objectID":"6289c4926aaf5c79aec86c3fff1da8f8","permalink":"https://yiguan1573.github.io/post/4%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/","publishdate":"2020-02-06T00:00:00Z","readingtime":2,"relpermalink":"/post/4%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/","section":"post","summary":"将其他的数据类型转换为Strig 调用被转换数据类型的toString()方法，该方法不会影响到原变量，它会将转换的结果返回；但是null和u","tags":["JavaScript"],"title":"4、强制类型转换(JS)","type":"post","url":"/post/4%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/","weight":0,"wordcount":628},{"author":null,"categories":["学习"],"content":"","date":1580947200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1580947200,"objectID":"2fb9436998b27d6efc70851b7fe29072","permalink":"https://yiguan1573.github.io/post/5%E8%BF%90%E7%AE%97%E7%AC%A6/","publishdate":"2020-02-06T00:00:00Z","readingtime":3,"relpermalink":"/post/5%E8%BF%90%E7%AE%97%E7%AC%A6/","section":"post","summary":"算数运算符 字符串相加相当于将两个字符串拼接为一个字符串，与Java相同 任何值与字符串做加法运算都会被转换为字符串后再拼串 var a = \u0026quot;123\u0026quot; + 1;//结","tags":["JavaScript"],"title":"5、运算符(JS)","type":"post","url":"/post/5%E8%BF%90%E7%AE%97%E7%AC%A6/","weight":0,"wordcount":1043},{"author":null,"categories":["学习"],"content":"","date":1580947200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1580947200,"objectID":"183c838e604fe10dbed18aafc4d038c8","permalink":"https://yiguan1573.github.io/post/6unicode%E7%BC%96%E7%A0%81%E8%A1%A8/","publishdate":"2020-02-06T00:00:00Z","readingtime":1,"relpermalink":"/post/6unicode%E7%BC%96%E7%A0%81%E8%A1%A8/","section":"post","summary":"在字符串中使用转义字符输入Unicode编码： \\u四位编码 console.log(\u0026quot;\\u0031\u0026quot;); 在网页中使用Unicode编码： \u0026amp;#编码 这里的编码为10进制数 \u0026lt;h1\u0026gt;\u0026amp;#2340\u0026lt;/h1\u0026gt;","tags":["JavaScript"],"title":"6、Unicode编码表(JS)","type":"post","url":"/post/6unicode%E7%BC%96%E7%A0%81%E8%A1%A8/","weight":0,"wordcount":66},{"author":null,"categories":["学习"],"content":"","date":1580860800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1580860800,"objectID":"bc78b1631b208ad643bd1b489a7b4e66","permalink":"https://yiguan1573.github.io/post/3%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","publishdate":"2020-02-05T00:00:00Z","readingtime":1,"relpermalink":"/post/3%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","section":"post","summary":"数据类型 数据类型指的就是字面量的类型 在JS中一共六种数据类型 Number 数值 Boolean 布尔值 Null 空值 Undefined 未定义 Object 对象 String 字符串 其中String、Number、Boo","tags":["JavaScript"],"title":"3、基本数据类型(JS)","type":"post","url":"/post/3%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","weight":0,"wordcount":489},{"author":null,"categories":["学习"],"content":"","date":1580774400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1580774400,"objectID":"effdf16b760e10f433e10eb614caf28b","permalink":"https://yiguan1573.github.io/post/2%E5%8F%98%E9%87%8F/","publishdate":"2020-02-04T00:00:00Z","readingtime":1,"relpermalink":"/post/2%E5%8F%98%E9%87%8F/","section":"post","summary":"字面量和变量 字面量 都是一些不可改变的量，比如：1 2 3，字面量可以直接使用字面量 变量 可以保存字面量，一般使用变量保存字面量 声明变量 在JS中使用","tags":["JavaScript"],"title":"2、变量(JS)","type":"post","url":"/post/2%E5%8F%98%E9%87%8F/","weight":0,"wordcount":316},{"author":null,"categories":["学习"],"content":"","date":1580688000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1580688000,"objectID":"7aa9c883cf6e5dd6533daf78cbd201d5","permalink":"https://yiguan1573.github.io/post/1js%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/","publishdate":"2020-02-03T00:00:00Z","readingtime":2,"relpermalink":"/post/1js%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/","section":"post","summary":"JS的Hello World 该函数控制浏览器弹出警告框 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;\u0026lt;/title\u0026gt; \u0026lt;script type=\u0026quot;text/javascript\u0026quot;\u0026gt; alert(\u0026quot;Hello World\u0026quot;); \u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 该函数可以向body中输出内容 document.write(\u0026quot;Hello World\u0026quot;); 该函数可以向控制台输出一个内容","tags":["JavaScript"],"title":"1、JS语法基础(JS)","type":"post","url":"/post/1js%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/","weight":0,"wordcount":548},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"search\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8946788897930c0c0c39fbfcd30ff2e4","permalink":"https://yiguan1573.github.io/search/placeholder/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/placeholder/","section":"search","summary":"","tags":null,"title":"","type":"search","url":"/search/placeholder/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"top\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"7a0da914bde98a7d3fcc7f6c5886633c","permalink":"https://yiguan1573.github.io/top/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/top/about/","section":"top","summary":"本博客大部分笔记来自于其他人的笔记搬运或本人整合，少部分来自于本人遇到的相关问题，最后你将如闪电般归来。 \r#biliplayer {\rwidth: 100%;\rheight: 600px;\r}\r@media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\r#biliplayer {\rwidth: 100%;\rheight: 250px;\r}\r}\r\r\r\r\r","tags":null,"title":"","type":"top","url":"/top/about/","weight":0,"wordcount":26},{"author":null,"categories":["学习"],"content":"","date":-62135596800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"5827e72915b71e7e51c6ab41e3c6a4d9","permalink":"https://yiguan1573.github.io/post/823%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E6%8B%BC%E8%BD%A6app%E5%90%8E%E7%AB%AF/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/post/823%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E6%8B%BC%E8%BD%A6app%E5%90%8E%E7%AB%AF/","section":"post","summary":"数据库保存emoji表情 问题描述：java.sql.SQLException: Incorrect string value: \u0026lsquo;\\xF0\\x9F\\x92\\xAA\u0026rdqu","tags":["项目"],"title":"4、毕业设计（拼车app后端）","type":"post","url":"/post/823%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E6%8B%BC%E8%BD%A6app%E5%90%8E%E7%AB%AF/","weight":0,"wordcount":895},{"author":null,"categories":null,"content":"Archive of historical posts.","date":-62135596800,"description":"Archive of historical posts.","dir":"top\\","excerpt_html":"Archive of historical posts.","excerpt_text":"Archive of historical posts.","expirydate":-62135596800,"fuzzywordcount":100,"html":"Archive of historical posts.","keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"104f9431647fd5dcb14e8d0947747fa9","permalink":"https://yiguan1573.github.io/top/archive/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/top/archive/","section":"top","summary":"","tags":null,"title":"Posts Archive","type":"archive","url":"/top/archive/","weight":0,"wordcount":0}]