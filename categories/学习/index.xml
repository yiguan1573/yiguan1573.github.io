<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>学习 on 亿观的博客</title>
    <link>https://yiguan1573.gitee.io/categories/%E5%AD%A6%E4%B9%A0/</link>
    <description>Recent content in 学习 on 亿观的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 02 Dec 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://yiguan1573.gitee.io/categories/%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>4、基于MySQL实现分布式锁（分布式锁）</title>
      <link>https://yiguan1573.gitee.io/post/1106%E5%9F%BA%E4%BA%8Emysql%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</link>
      <pubDate>Fri, 02 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1106%E5%9F%BA%E4%BA%8Emysql%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</guid>
      <description>基于MysQL关系型数据库实现:唯一键索引 redis:基于Key唯一性 zk:基于znode节点唯一性 简单实现 建表 思路 实现 问题 服务器宕机防死锁</description>
    </item>
    
    <item>
      <title>3、基于zookeeper实现分布式锁（分布式锁）</title>
      <link>https://yiguan1573.gitee.io/post/1105%E5%9F%BA%E4%BA%8Ezookeeper%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</link>
      <pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1105%E5%9F%BA%E4%BA%8Ezookeeper%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</guid>
      <description>zookeeper回顾 官方客户端 引入依赖 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.zookeeper&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;zookeeper&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.5.7&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 代码 public class ZKTest { public static void main(String[] args) { ZooKeeper zooKeeper = null; //zookeeper获取连接是一个慢启动的过程 CountDownLatch countDownLatch = new CountDownLatch(1);</description>
    </item>
    
    <item>
      <title>2、基于redis实现分布式锁（分布式锁）</title>
      <link>https://yiguan1573.gitee.io/post/1104%E5%9F%BA%E4%BA%8Eredis%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</link>
      <pubDate>Wed, 30 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1104%E5%9F%BA%E4%BA%8Eredis%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</guid>
      <description>redis中的超卖现象 设置库存5000 修改代码 @Service public class StockService { @Autowired StockMapper stockMapper; @Autowired RedisTemplate redisTemplate; private ReentrantLock lock = new ReentrantLock(); // @Transactional public void reduce(){ //1.查询库存 Integer stock = (Integer) redisTemplate.opsForValue().get(&amp;#34;stock&amp;#34;); //2.判断库存是否充足</description>
    </item>
    
    <item>
      <title>1、JVM锁和MySQL锁（分布式锁）</title>
      <link>https://yiguan1573.gitee.io/post/1103jvm%E9%94%81%E5%92%8Cmysql%E9%94%81/</link>
      <pubDate>Tue, 29 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1103jvm%E9%94%81%E5%92%8Cmysql%E9%94%81/</guid>
      <description>搭建简单的库存项目 @Data public class Stock { private Integer stock = 5000; } //StockService为单例对象，所以里面创建的stock对象也为单例 @Service public class StockService { private Stock stock = new Stock(); public</description>
    </item>
    
    <item>
      <title>2、dubbo新版和补充（dubbo）</title>
      <link>https://yiguan1573.gitee.io/post/1102dubbo%E6%96%B0%E7%89%88%E5%92%8C%E8%A1%A5%E5%85%85/</link>
      <pubDate>Mon, 28 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1102dubbo%E6%96%B0%E7%89%88%E5%92%8C%E8%A1%A5%E5%85%85/</guid>
      <description>补充和参考 远程调用 Dubbo 与 Feign 的区别 官方文档 spring-cloud-starter-dubbo dubbo-spring-boot-starter spring-cloud-starter-dubbo和dubbo-spring-boot-star</description>
    </item>
    
    <item>
      <title>1、dubbo旧版（dubbo）</title>
      <link>https://yiguan1573.gitee.io/post/1101dubbo%E6%97%A7%E7%89%88/</link>
      <pubDate>Sun, 27 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1101dubbo%E6%97%A7%E7%89%88/</guid>
      <description>dubbo核心概念 简介 Apache Dubbo (incubating) |ˈdʌbəʊ| 是一款高性能、轻量级的开源Java RPC框架，它提供了三大核心能力：面向接口的远程方法调用，智能</description>
    </item>
    
    <item>
      <title>26、mysql基础补充(MySQL8其他新特性)</title>
      <link>https://yiguan1573.gitee.io/post/1096mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85mysql8%E5%85%B6%E4%BB%96%E6%96%B0%E7%89%B9%E6%80%A7/</link>
      <pubDate>Sat, 26 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1096mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85mysql8%E5%85%B6%E4%BB%96%E6%96%B0%E7%89%B9%E6%80%A7/</guid>
      <description>第18章_MySQL8其他新特性 1. MySQL8新特性概述 MySQL从5.7版本直接跳跃发布了8.0版本 ，可见这是一个令人兴奋的里程碑版本。M</description>
    </item>
    
    <item>
      <title>25、mysql基础补充(触发器)</title>
      <link>https://yiguan1573.gitee.io/post/1095mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E8%A7%A6%E5%8F%91%E5%99%A8/</link>
      <pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1095mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E8%A7%A6%E5%8F%91%E5%99%A8/</guid>
      <description>第17章_触发器 在实际开发中，我们经常会遇到这样的情况：有 2 个或者多个相互关联的表，如 商品信息 和 库存信息 分 别存放在 2 个不同的数据表中，我们在</description>
    </item>
    
    <item>
      <title>24、mysql基础补充(变量、流程控制与游标)</title>
      <link>https://yiguan1573.gitee.io/post/1094mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E5%8F%98%E9%87%8F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E4%B8%8E%E6%B8%B8%E6%A0%87/</link>
      <pubDate>Thu, 24 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1094mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E5%8F%98%E9%87%8F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E4%B8%8E%E6%B8%B8%E6%A0%87/</guid>
      <description>第16章_变量、流程控制与游标 在MySQL数据库的存储过程和函数中，可以使用变量来存储查询或计算的中间结果数据，或者输出最终的结果数据。 1. 变</description>
    </item>
    
    <item>
      <title>23、mysql基础补充(存储过程与函数)</title>
      <link>https://yiguan1573.gitee.io/post/1093mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E4%B8%8E%E5%87%BD%E6%95%B0/</link>
      <pubDate>Wed, 23 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1093mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E4%B8%8E%E5%87%BD%E6%95%B0/</guid>
      <description>第15章_存储过程与函数 MySQL从5.0版本开始支持存储过程和函数。存储过程和函数能够将复杂的SQL逻辑封装在一起，应用程 序无须关注存储过</description>
    </item>
    
    <item>
      <title>22、mysql基础补充(视图)</title>
      <link>https://yiguan1573.gitee.io/post/1092mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E8%A7%86%E5%9B%BE/</link>
      <pubDate>Tue, 22 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1092mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E8%A7%86%E5%9B%BE/</guid>
      <description>第14章_视图 1. 常见的数据库对象 对象 描述 表(TABLE) 表是存储数据的逻辑单元，以行和列的形式存在，列就是字段，行就是记录 数据字典 就是系统表</description>
    </item>
    
    <item>
      <title>21、mysql基础补充(DDL和数据类型)</title>
      <link>https://yiguan1573.gitee.io/post/1091mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85ddl/</link>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1091mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85ddl/</guid>
      <description>第十章_创建和管理表 1. 基础知识 1) 标识符命名规则 数据库名、表名不得超过30个字符，变量名限制为29个 必须只能包含 A–Z, a–z, 0–9, _共6</description>
    </item>
    
    <item>
      <title>20、mysql基础补充(DML)</title>
      <link>https://yiguan1573.gitee.io/post/1090mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85dml/</link>
      <pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1090mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85dml/</guid>
      <description>导入表的问题 导入数据时外键约束问题 数据导入指令： source d:\xxx.sql 通过FOREIGN_KEY_CHECKS解决，用法如下： set FOREIGN_KEY_CHECKS=0; #在导入前设置为不检查外键约</description>
    </item>
    
    <item>
      <title>视频弹幕项目</title>
      <link>https://yiguan1573.gitee.io/post/1099%E8%A7%86%E9%A2%91%E5%BC%B9%E5%B9%95%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1099%E8%A7%86%E9%A2%91%E5%BC%B9%E5%B9%95%E9%A1%B9%E7%9B%AE/</guid>
      <description>使用vueBaberrage实现网页弹幕报错 If you want to include a polyfill, you need to: - add a fallback &#39;resolve.fallback: { &amp;quot;timers&amp;quot;: require.resolve(&amp;quot;timers-browserify&amp;quot;) }&#39; - install &#39;timers-browserify&#39; 解决办法 监听video全屏事件 document.addEventListener(&#39;webkitfullscreenchange&#39;, () =&amp;gt; { if (checkIsFullScreen()) { } else { }</description>
    </item>
    
    <item>
      <title>6、SpringSecurity和oauth2踩坑集合（SpringSecurity）</title>
      <link>https://yiguan1573.gitee.io/post/1098springsecurity%E5%92%8Coauth2%E8%B8%A9%E5%9D%91%E9%9B%86%E5%90%88/</link>
      <pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1098springsecurity%E5%92%8Coauth2%E8%B8%A9%E5%9D%91%E9%9B%86%E5%90%88/</guid>
      <description>java.lang.IllegalArgumentException: There is no PasswordEncoder mapped for the id &amp;ldquo;null&amp;rdquo; auth2配置授权服务报错 @Override public void configure(ClientDetailsServiceConfigurer clients) throws Exception { //配置两个客户端,一个用于password认证一个用于client认证 clients.inMemory().withClient(&amp;#34;client_2&amp;#34;) .authorizedGrantTypes(&amp;#34;password&amp;#34;,&amp;#34;refresh_token&amp;#34;) .accessTokenValiditySeconds(3600)</description>
    </item>
    
    <item>
      <title>3、Doker安装命令（Docker）</title>
      <link>https://yiguan1573.gitee.io/post/884dcoker%E5%AE%89%E8%A3%85%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/884dcoker%E5%AE%89%E8%A3%85%E5%91%BD%E4%BB%A4/</guid>
      <description>Redis docker run --restart=always --log-opt max-size=100m --log-opt max-file=2 -p 6379:6379 --name myredis -v /opt/redis/redis.conf:/etc/redis/redis.conf -v /opt/redis/data:/data -d redis redis-server /etc/redis/redis.conf --appendonly yes --requirepass 13594859505LW redis.conf文件 # bind 192.168.1.100 10.0.0.1 # bind 127.0.0.1 ::1 #bind 127.0.0.1 protected-mode no port 6379 tcp-backlog 511 requirepass 13594859505LW timeout 0 tcp-keepalive 300 daemonize no supervised no pidfile /var/run/redis_6379.pid loglevel notice logfile &amp;quot;&amp;quot; databases 16</description>
    </item>
    
    <item>
      <title>19、数据库备份与恢复（日志与备份篇）</title>
      <link>https://yiguan1573.gitee.io/post/1089%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</link>
      <pubDate>Mon, 03 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1089%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</guid>
      <description>1. 物理备份与逻辑备份 **物理备份：**备份数据文件，转储数据库物理文件到某一目录。物理备份恢复速度比较快，但占用空间比较大，MySQL中可以</description>
    </item>
    
    <item>
      <title>18、主从复制（日志与备份篇）</title>
      <link>https://yiguan1573.gitee.io/post/1088%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</link>
      <pubDate>Sun, 02 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1088%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</guid>
      <description>1. 主从复制概述 1.1 如何提升数据库并发能力 在实际工作中，我们常常将Redis作为缓存与MySQL配合来使用，当有请求的时候，首先会从缓存中进行查</description>
    </item>
    
    <item>
      <title>17、其他数据库日志（日志与备份篇）</title>
      <link>https://yiguan1573.gitee.io/post/1087%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A5%E5%BF%97/</link>
      <pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1087%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A5%E5%BF%97/</guid>
      <description>千万不要小看日志。很多看似奇怪的问题，答案往往就藏在日志里。很多情况下，只有通过查看日志才 能发现问题的原因，真正解决问题。所以，一定要学会查</description>
    </item>
    
    <item>
      <title>16、多版本并发控制（事务篇）</title>
      <link>https://yiguan1573.gitee.io/post/1086%E5%A4%9A%E7%89%88%E6%9C%AC%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6mvcc/</link>
      <pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1086%E5%A4%9A%E7%89%88%E6%9C%AC%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6mvcc/</guid>
      <description>1. 什么是MVCC MVCC （Multiversion Concurrency Control），多版本并发控制。顾名思义，MVCC 是通过数据行的多个版本管理来实现数据库的 并</description>
    </item>
    
    <item>
      <title>15、锁（事务篇）</title>
      <link>https://yiguan1573.gitee.io/post/1085%E9%94%81/</link>
      <pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1085%E9%94%81/</guid>
      <description>1. 概述 在数据库中，除传统的计算资源（如CPU、RAM、I/O等）的争用以外，数据也是一种供许多用户共享的 资源。为保证数据的一致性，需要对 并发</description>
    </item>
    
    <item>
      <title>14、MySQL事务日志（事务篇）</title>
      <link>https://yiguan1573.gitee.io/post/1084mysql%E4%BA%8B%E5%8A%A1%E6%97%A5%E5%BF%97/</link>
      <pubDate>Tue, 27 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1084mysql%E4%BA%8B%E5%8A%A1%E6%97%A5%E5%BF%97/</guid>
      <description>事务有4种特性：原子性、一致性、隔离性和持久性。那么事务的四种特性到底是基于什么机制实现呢？ 事务的隔离性由 锁机制 实现。 而事务的原子性、一致性</description>
    </item>
    
    <item>
      <title>13、事务基础知识（事务篇）</title>
      <link>https://yiguan1573.gitee.io/post/1083%E4%BA%8B%E5%8A%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1083%E4%BA%8B%E5%8A%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>1. 数据库事务概述 1.1 存储引擎支持情况 SHOW ENGINES 命令来查看当前 MySQL 支持的存储引擎都有哪些，以及这些存储引擎是否支持事务。 能看出在 MySQL 中，只有InnoDB 是</description>
    </item>
    
    <item>
      <title>12、数据库其他调优策略（索引与调优篇）</title>
      <link>https://yiguan1573.gitee.io/post/1082%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B6%E4%BB%96%E8%B0%83%E4%BC%98%E7%AD%96%E7%95%A5/</link>
      <pubDate>Sun, 25 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1082%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B6%E4%BB%96%E8%B0%83%E4%BC%98%E7%AD%96%E7%95%A5/</guid>
      <description>1. 数据库调优的措施 1.1 调优的目标 尽可能节省系统资源 ，以便系统可以提供更大负荷的服务。（吞吐量更大） 合理的结构设计和参数调整，以提高用户操作响应</description>
    </item>
    
    <item>
      <title>11、数据库的设计规范（索引与调优篇）</title>
      <link>https://yiguan1573.gitee.io/post/1081%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/</link>
      <pubDate>Sat, 24 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1081%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/</guid>
      <description>1. 为什么需要数据库设计 2. 范 式 2.1 范式简介 在关系型数据库中，关于数据表设计的基本原则、规则就称为范式。可以理解为，一张数据表的设计结 构需要满足的</description>
    </item>
    
    <item>
      <title>10、索引优化与查询优化（索引与调优篇）</title>
      <link>https://yiguan1573.gitee.io/post/1080%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E4%B8%8E%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/</link>
      <pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1080%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E4%B8%8E%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/</guid>
      <description>都有哪些维度可以进行数据库调优？简言之： 索引失效、没有充分利用到索引——建立索引 关联查询太多JOIN（设计缺陷或不得已的需求）——SQL优化</description>
    </item>
    
    <item>
      <title>9、性能分析工具的使用（索引与调优篇）</title>
      <link>https://yiguan1573.gitee.io/post/1079%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 22 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1079%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>在数据库调优中，我们的目标是 响应时间更快, 吞吐量更大 。利用宏观的监控工具和微观的日志分析可以帮我们快速找到调优的思路和方式。 1. 数据库服务器的</description>
    </item>
    
    <item>
      <title>8、索引的创建与设计原则（索引与调优篇）</title>
      <link>https://yiguan1573.gitee.io/post/1078%E7%B4%A2%E5%BC%95%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</link>
      <pubDate>Wed, 21 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1078%E7%B4%A2%E5%BC%95%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</guid>
      <description>1. 索引的声明与使用 1.1 索引的分类 MySQL的索引包括普通索引、唯一性索引、全文索引、单列索引、多列索引和空间索引等。 从 功能逻辑 上说，索引主要有</description>
    </item>
    
    <item>
      <title>7、InnoDB数据存储结构（索引与调优篇）</title>
      <link>https://yiguan1573.gitee.io/post/1077innodb%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/</link>
      <pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1077innodb%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/</guid>
      <description>1. 数据库的存储结构：页 1.1 磁盘与内存交互基本单位：页 1.2 页结构概述 1.3 页的大小 不同的数据库管理系统（简称DBMS）的页大小不同。比如在 MySQL 的 InnoDB 存储引</description>
    </item>
    
    <item>
      <title>6、索引的数据结构（索引与调优篇）</title>
      <link>https://yiguan1573.gitee.io/post/1076%E7%B4%A2%E5%BC%95%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1076%E7%B4%A2%E5%BC%95%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>1. 为什么使用索引 索引是存储引擎用于快速找到数据记录的一种数据结构，就好比一本教科书的目录部分，通过目录中找到对应文章的页码，便可快速定位到需</description>
    </item>
    
    <item>
      <title>5、存储引擎（MySQL架构篇）</title>
      <link>https://yiguan1573.gitee.io/post/1075%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</link>
      <pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1075%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</guid>
      <description>1. 查看存储引擎 查看mysql提供什么存储引擎 show engines; 2. 设置系统默认的存储引擎 查看默认的存储引擎 show variables like &amp;#39;%storage_engine%&amp;#39;; #或 SELECT @@default_storage_engine; 修改默认的存储引擎 如果在创建表的语</description>
    </item>
    
    <item>
      <title>4、逻辑架构（MySQL架构篇）</title>
      <link>https://yiguan1573.gitee.io/post/1074%E9%80%BB%E8%BE%91%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Sat, 17 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1074%E9%80%BB%E8%BE%91%E6%9E%B6%E6%9E%84/</guid>
      <description>1. 逻辑架构剖析 1.1 服务器处理客户端请求 首先MySQL是典型的C/S架构，即Clinet/Server 架构，服务端程序使用的mysqld。 不论客</description>
    </item>
    
    <item>
      <title>3、用户与权限管理（MySQL架构篇）</title>
      <link>https://yiguan1573.gitee.io/post/1073%E7%94%A8%E6%88%B7%E4%B8%8E%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</link>
      <pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1073%E7%94%A8%E6%88%B7%E4%B8%8E%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</guid>
      <description>用户管理 1.1 登录MySQL服务器 1.2 创建用户 1.3 修改用户 1.4 删除用户 1.5 设置当前用户密码 1.6 修改其它用户密码 1.7 MySQL8密码管理(了解) 权限管理 2.1 权限</description>
    </item>
    
    <item>
      <title>2、MySQL的数据目录（MySQL架构篇）</title>
      <link>https://yiguan1573.gitee.io/post/1072mysql%E7%9A%84%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1072mysql%E7%9A%84%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95/</guid>
      <description>MySQL8的主要目录结构 1.1 数据库文件的存放路径 1.2 相关命令目录 1.3 配置文件目录 数据库和文件系统的关系 2.1 查看默认数据库 2.2 数据库在文件系统中的表示</description>
    </item>
    
    <item>
      <title>1、Linux下MySQL的安装与使用（MySQL架构篇）</title>
      <link>https://yiguan1573.gitee.io/post/1071linux%E4%B8%8Bmysql%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 14 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1071linux%E4%B8%8Bmysql%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid>
      <description>安装前说明 1.1 Linux系统及工具的准备 1.2 查看是否安装过MySQL 1.3 MySQL的卸载 MySQL的Linux版安装 2.1 MySQL的4大版本 2.2 下载M</description>
    </item>
    
    <item>
      <title>11、Redis6（Redis）</title>
      <link>https://yiguan1573.gitee.io/post/1068redis6/</link>
      <pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1068redis6/</guid>
      <description>Redis6笔记</description>
    </item>
    
    <item>
      <title>27、使用OQL语言查询对象信息（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1067%E4%BD%BF%E7%94%A8oql%E8%AF%AD%E8%A8%80%E6%9F%A5%E8%AF%A2%E5%AF%B9%E8%B1%A1%E4%BF%A1%E6%81%AF/</link>
      <pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1067%E4%BD%BF%E7%94%A8oql%E8%AF%AD%E8%A8%80%E6%9F%A5%E8%AF%A2%E5%AF%B9%E8%B1%A1%E4%BF%A1%E6%81%AF/</guid>
      <description>MAT 支持一种类似于 SQL 的查询语言 OQL（Object Query Language）。OQL 使用类 SQL 语法，可以在堆中进行对象的查找和筛选。 1. SELECT 子句 在 MAT 中，S</description>
    </item>
    
    <item>
      <title>26、OOM常见各种场景及解决方案（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1066%E6%B5%85%E5%A0%86%E6%B7%B1%E5%A0%86%E4%B8%8E%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2/</link>
      <pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1066%E6%B5%85%E5%A0%86%E6%B7%B1%E5%A0%86%E4%B8%8E%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2/</guid>
      <description>1. 浅堆（Shallow Heap） 浅堆是指一个对象所消耗的内存。在 32 位系统中，一个对象引用会占据 4 个字节，一个 int 类型会占据 4 个字节，long 型</description>
    </item>
    
    <item>
      <title>25、分析GC日志（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1065%E5%88%86%E6%9E%90gc%E6%97%A5%E5%BF%97/</link>
      <pubDate>Fri, 09 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1065%E5%88%86%E6%9E%90gc%E6%97%A5%E5%BF%97/</guid>
      <description>5.1. GC 分类 针对 HotSpot VM 的实现，它里面的 GC 按照回收区域又分为两大种类型：一种是部分收集（Partial GC），一种是整堆收集（Full GC） 部分收集</description>
    </item>
    
    <item>
      <title>24、JVM运行时参数（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1064jvm%E8%BF%90%E8%A1%8C%E6%97%B6%E5%8F%82%E6%95%B0/</link>
      <pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1064jvm%E8%BF%90%E8%A1%8C%E6%97%B6%E5%8F%82%E6%95%B0/</guid>
      <description>4.1. JVM 参数选项 官网地址：https://docs.oracle.com/javase/8/docs/technotes/tools/windo</description>
    </item>
    
    <item>
      <title>23、JVM监控及诊断工具-GUI（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1063jvm%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7-gui/</link>
      <pubDate>Wed, 07 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1063jvm%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7-gui/</guid>
      <description>3.1. 工具概述 使用上一章命令行工具或组合能帮您获取目标 Java 应用性能相关的基础信息，但它们存在下列局限： 1．无法获取方法级别的分析数据，如方法间的调</description>
    </item>
    
    <item>
      <title>22、JVM监控及诊断工具-命令行（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1062jvm%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7-%E5%91%BD%E4%BB%A4%E8%A1%8C/</link>
      <pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1062jvm%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7-%E5%91%BD%E4%BB%A4%E8%A1%8C/</guid>
      <description>2.1. 概述 性能诊断是软件工程师在日常工作中需要经常面对和解决的问题，在用户体验至上的今天，解决好应用的性能问题能带来非常大的收益。 Java 作为最流行的</description>
    </item>
    
    <item>
      <title>21、概述篇（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1061%E6%A6%82%E8%BF%B0%E7%AF%87/</link>
      <pubDate>Mon, 05 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1061%E6%A6%82%E8%BF%B0%E7%AF%87/</guid>
      <description>1.1. 大厂面试题 支付宝：支付宝三面：JVM 性能调优都做了什么？ 小米：有做过 JVM 内存优化吗？ 从 SQL、JVM、架构、数据库四个方面讲讲优化思路 蚂蚁金</description>
    </item>
    
    <item>
      <title>20、再谈类的加载器（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1060%E5%86%8D%E8%B0%88%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E5%99%A8/</link>
      <pubDate>Sun, 04 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1060%E5%86%8D%E8%B0%88%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E5%99%A8/</guid>
      <description>概述 类加载器是 JVM 执行类加载机制的前提。 ClassLoader 的作用： ClassLoader 是 Java 的核心组件，所有的 Class 都是由 ClassLoader 进行加载的，ClassLoader 负责通过各种方式将 Class 信息</description>
    </item>
    
    <item>
      <title>19、类的加载过程详解（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1059%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Sat, 03 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1059%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3/</guid>
      <description>概述 在 Java 中数据类型分为基本数据类型和引用数据类型。基本数据类型由虚拟机预先定义，引用数据类型则需要进行类的加载。 按照 Java 虚拟机规范，从 Class 文件到</description>
    </item>
    
    <item>
      <title>18、字节码指令集与解析举例（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1058%E5%AD%97%E8%8A%82%E7%A0%81%E6%8C%87%E4%BB%A4%E9%9B%86%E4%B8%8E%E8%A7%A3%E6%9E%90%E4%B8%BE%E4%BE%8B/</link>
      <pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1058%E5%AD%97%E8%8A%82%E7%A0%81%E6%8C%87%E4%BB%A4%E9%9B%86%E4%B8%8E%E8%A7%A3%E6%9E%90%E4%B8%BE%E4%BE%8B/</guid>
      <description>这章主要是方法体的内容，即Code属性 概述 Java 字节码对于虚拟机，就好像汇编语言对于计算机，属于基本执行命令。 Java 虚拟机的指令由一个字节长度的、代</description>
    </item>
    
    <item>
      <title>17、Class文件结构（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1057class%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/</link>
      <pubDate>Thu, 01 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1057class%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/</guid>
      <description>引言 笔记来源JVM中篇 概述 字节码文件的跨平台性 Java 语言：跨平台的语言（write once, run anywhere） 当Java源代码成功编译成字节码之后，如</description>
    </item>
    
    <item>
      <title>16、垃圾回收器（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1056%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8/</link>
      <pubDate>Tue, 05 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1056%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8/</guid>
      <description>GC 分类与性能指标 垃圾回收器概述 垃圾收集器没有在规范中进行过多的规定，可以由不同的厂商、不同版本的JVM来实现。 由于JDK的版本处于高速迭代过</description>
    </item>
    
    <item>
      <title>15、垃圾回收相关概念（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1055%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1055%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</guid>
      <description>System.gc() 的理解 在默认情况下，通过System.gc()者Runtime.getRuntime().gc() 的调用，会显式触发Full GC，同时对老</description>
    </item>
    
    <item>
      <title>14、垃圾回收概述和相关算法（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1054%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%A6%82%E8%BF%B0%E5%92%8C%E7%9B%B8%E5%85%B3%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sun, 03 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1054%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%A6%82%E8%BF%B0%E5%92%8C%E7%9B%B8%E5%85%B3%E7%AE%97%E6%B3%95/</guid>
      <description>垃圾回收概述 Java 和 C++语言的区别，就在于垃圾收集技术和内存动态分配上，C++语言没有垃圾收集技术，需要程序员手动的收集。 垃圾收集，不是Jav</description>
    </item>
    
    <item>
      <title>13、StringTable(字符串常量池)（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1053stringtable%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E9%87%8F%E6%B1%A0/</link>
      <pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1053stringtable%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E9%87%8F%E6%B1%A0/</guid>
      <description>String的基本特性 String：字符串，使用一对 “” 引起来表示 String s1 = &amp;#34;atguigu&amp;#34; ; // 字面量的定义方式 String s2 = new String(&amp;#34;hello&amp;#34;); // new 对象的方式 String被声明为f</description>
    </item>
    
    <item>
      <title>12、执行引擎（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1052%E6%89%A7%E8%A1%8C%E5%BC%95%E6%93%8E/</link>
      <pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1052%E6%89%A7%E8%A1%8C%E5%BC%95%E6%93%8E/</guid>
      <description>执行引擎概述 执行引擎概述 执行引擎是Java虚拟机核心的组成部分之一。 “虚拟机”是一个相对于“物理机”的概念，这两种机器都有代码执行能力，其区</description>
    </item>
    
    <item>
      <title>11、直接内存（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1051%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98/</link>
      <pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1051%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98/</guid>
      <description>直接内存概述 不是虚拟机运行时数据区的一部分，也不是《Java虚拟机规范》中定义的内存区域。 直接内存是在Java堆外的、直接向系统申请的内存区</description>
    </item>
    
    <item>
      <title>10、对象的实例化内存布局与访问定位（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1050%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80%E4%B8%8E%E8%AE%BF%E9%97%AE%E5%AE%9A%E4%BD%8D/</link>
      <pubDate>Wed, 29 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1050%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80%E4%B8%8E%E8%AE%BF%E9%97%AE%E5%AE%9A%E4%BD%8D/</guid>
      <description>对象的实例化 大厂面试题 美团： 对象在JVM中是怎么存储的？ 对象头信息里面有哪些东西？ 蚂蚁金服： 二面：java对象头里有什么 对象创建的方式 new</description>
    </item>
    
    <item>
      <title>9、方法区（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1049%E6%96%B9%E6%B3%95%E5%8C%BA/</link>
      <pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1049%E6%96%B9%E6%B3%95%E5%8C%BA/</guid>
      <description>栈、堆、方法区的交互关系 从线程共享与否的角度来看 ThreadLocal：如何保证多个线程在并发环境下的安全性？典型场景就是数据库连接管理，以</description>
    </item>
    
    <item>
      <title>8、堆（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1048%E5%A0%86/</link>
      <pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1048%E5%A0%86/</guid>
      <description>堆的核心概述 堆与进程 堆针对一个JVM进程来说是唯一的。也就是一个进程只有一个JVM实例，一个JVM实例中就有一个运行时数据区，一个运行时数据</description>
    </item>
    
    <item>
      <title>7、本地方法栈（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1047%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88/</link>
      <pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1047%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88/</guid>
      <description>本地方法栈 Java虚拟机栈于管理Java方法的调用，而本地方法栈用于管理本地方法的调用。 本地方法栈，也是线程私有的。 允许被实现成固定或者是可</description>
    </item>
    
    <item>
      <title>6、本地方法接口（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1046%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Sat, 25 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1046%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%8E%A5%E5%8F%A3/</guid>
      <description>本地方法 简单地讲，一个Native Method是一个Java调用非Java代码的接囗一个Native Method是这样一个Java方法：该方</description>
    </item>
    
    <item>
      <title>5、虚拟机栈（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1045%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88/</link>
      <pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1045%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88/</guid>
      <description>简介 虚拟机栈的出现背景 由于跨平台性的设计，Java的指令都是根据栈来设计的。不同平台CPU架构不同，所以不能设计为基于寄存器的【如果设计成基</description>
    </item>
    
    <item>
      <title>4、程序计数器（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1044%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8/</link>
      <pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1044%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8/</guid>
      <description>PC寄存器介绍 官方文档网址：https://docs.oracle.com/javase/specs/jvms/se8/html/index</description>
    </item>
    
    <item>
      <title>3、运行时数据区（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1043%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA/</link>
      <pubDate>Wed, 22 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1043%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA/</guid>
      <description>此章把运行时数据区里比较少的地方讲一下。虚拟机栈，堆，方法区这些地方后续再讲。 运行时数据区概述及线程 前言 本节主要讲的是运行时数据区，也就是下</description>
    </item>
    
    <item>
      <title>2、类加载子系统（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1042%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%AD%90%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1042%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%AD%90%E7%B3%BB%E7%BB%9F/</guid>
      <description>内存结构概述 简图 详细图 英文版 中文版 注意：方法区只有HotSpot虚拟机有，J9，JRockit都没有 如果自己想手写一个Java虚拟机的话，主</description>
    </item>
    
    <item>
      <title>1、JVM与Java体系结构（JVM）</title>
      <link>https://yiguan1573.gitee.io/post/1041jvm%E4%B8%8Ejava%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1041jvm%E4%B8%8Ejava%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</guid>
      <description>前言 你是否也遇到过这些问题？ 运行着的线上系统突然卡死，系统无法访问，甚至直接OOM！ 想解决线上JVM GC问题，但却无从下手。 新项目上线，对各</description>
    </item>
    
    <item>
      <title>1、ElasticSearch（ElasticSearch）</title>
      <link>https://yiguan1573.gitee.io/post/1039elasticsearch/</link>
      <pubDate>Sat, 18 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1039elasticsearch/</guid>
      <description>Elasticsearch学习笔记</description>
    </item>
    
    <item>
      <title>4、Netty优化和源码（Netty）</title>
      <link>https://yiguan1573.gitee.io/post/1038netty%E4%BC%98%E5%8C%96%E5%92%8C%E6%BA%90%E7%A0%81/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1038netty%E4%BC%98%E5%8C%96%E5%92%8C%E6%BA%90%E7%A0%81/</guid>
      <description>1. 优化 1.1 扩展序列化算法 序列化，反序列化主要用在消息正文的转换上 序列化时，需要将 Java 对象变为要传输的数据（可以是 byte[]，或 json 等，最终都需要</description>
    </item>
    
    <item>
      <title>3、Netty进阶（Netty）</title>
      <link>https://yiguan1573.gitee.io/post/1037netty%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1037netty%E8%BF%9B%E9%98%B6/</guid>
      <description>1. 粘包与半包 1.1 粘包现象 服务端代码 public class HelloWorldServer { static final Logger log = LoggerFactory.getLogger(HelloWorldServer.class); void start() { NioEventLoopGroup boss = new NioEventLoopGroup(1); NioEventLoopGroup worker = new NioEventLoopGroup(); try { ServerBootstrap serverBootstrap = new ServerBootstrap(); serverBootstrap.channel(NioServerSocketChannel.class); serverBootstrap.group(boss, worker); serverBootstrap.childHandler(new ChannelInitializer&amp;lt;SocketChannel&amp;gt;() { @Override protected void initChannel(SocketChannel ch) throws Exception { ch.pipeline().addLast(new LoggingHandler(LogLevel.DEBUG)); ch.pipeline().addLast(new ChannelInboundHandlerAdapter() { @Override public void channelActive(ChannelHandlerContext ctx)</description>
    </item>
    
    <item>
      <title>2、Netty入门（Netty）</title>
      <link>https://yiguan1573.gitee.io/post/1036netty%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1036netty%E5%85%A5%E9%97%A8/</guid>
      <description>1. 概述 1.1 Netty 是什么？ Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp;amp; clients. Netty 是一个异步的、基于事件驱动的网络应用框架，用于快速开发可维护、高性能的网络服务器和</description>
    </item>
    
    <item>
      <title>1、NIO（Netty）</title>
      <link>https://yiguan1573.gitee.io/post/1035nio/</link>
      <pubDate>Sat, 14 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1035nio/</guid>
      <description>1. 三大组件 non-blocking io 非阻塞 IO 1.1 Channel &amp;amp; Buffer channel 有一点类似于 stream，它就是读写数据的双向通道，可以从 channel 将数据读入 buffer，也可以将 buffer 的数据写入 ch</description>
    </item>
    
    <item>
      <title>5、SpringSecurity oauth2（SpringSecurity）</title>
      <link>https://yiguan1573.gitee.io/post/1034springsecurity-oauth2/</link>
      <pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1034springsecurity-oauth2/</guid>
      <description>简单介绍和使用 Oauth2是什么&amp;amp;怎么用 基于spring-security-oauth2实现oauth2 SpringBoot + Spring Security OAuth2基本使用</description>
    </item>
    
    <item>
      <title>4、SpringSecurity 微服务权限方案（SpringSecurity）</title>
      <link>https://yiguan1573.gitee.io/post/1033springsecurity-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90%E6%96%B9%E6%A1%88/</link>
      <pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1033springsecurity-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90%E6%96%B9%E6%A1%88/</guid>
      <description>微服务认证与授权实现思路 认证授权过程分析 如果是基于 Session，那么 Spring-security 会对 cookie 里的 sessionid 进行解析，找到服务器存储的 session 信息，然后判断当前用户是否符</description>
    </item>
    
    <item>
      <title>3、SpringSecurity Web权限方案（SpringSecurity）</title>
      <link>https://yiguan1573.gitee.io/post/1032springsecurity-web-%E6%9D%83%E9%99%90%E6%96%B9%E6%A1%88/</link>
      <pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1032springsecurity-web-%E6%9D%83%E9%99%90%E6%96%B9%E6%A1%88/</guid>
      <description>设置登录系统的账号、密码 方式一：在 application.properties spring.security.user.name=atguigu spring.security.user.password=atguigu 方式二：编写类实现接口 package com.atguigu.config; @Configuration public class SecurityConfig { // 注入 PasswordEncoder 类到 spring 容器中 @Bean public PasswordEncoder passwordEncoder(){ return new BCryptPasswordEncoder(); } } package com.atguigu.service; @Service public class LoginService implements UserDetailsService { @Override public UserDetails loadUserByUsername(String</description>
    </item>
    
    <item>
      <title>2、SpringSecurity 入门案例（SpringSecurity）</title>
      <link>https://yiguan1573.gitee.io/post/1031springsecurity-%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Tue, 10 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1031springsecurity-%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B/</guid>
      <description>创建项目 新建springboot工程 增加依赖 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-security&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; 添加一个配置类： @Configuration public class SecurityConfigextends WebSecurityConfigurerAdapter { @Override protected void configure(HttpSecurity http) throws Exception { http.formLogin() // 表单登录 .and() .authorizeRequests() // 认证配置 .anyRequest() // 任何请求 .authenticated(); // 都</description>
    </item>
    
    <item>
      <title>1、SpringSecurity 框架简介（SpringSecurity）</title>
      <link>https://yiguan1573.gitee.io/post/1030springsecurity%E6%A1%86%E6%9E%B6%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Mon, 09 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1030springsecurity%E6%A1%86%E6%9E%B6%E6%A6%82%E8%BF%B0/</guid>
      <description>概要 Spring 是非常流行和成功的 Java 应用开发框架，Spring Security 正是 Spring 家族中的成员。Spring Security 基于 Spring 框架，提供了一套 Web 应用安全性的完整解决方案。 关</description>
    </item>
    
    <item>
      <title>mysql数据备份</title>
      <link>https://yiguan1573.gitee.io/post/1029mysql%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/</link>
      <pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1029mysql%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/</guid>
      <description>前言 公司很久以前的一个库查询太慢，需要做主从复制和读写分离，但是这个库数据量大几百G而且不能停机，所以需要将数据热备份到从库后再做其他操作 DataX</description>
    </item>
    
    <item>
      <title>11、高级特性（ActiveMQ）</title>
      <link>https://yiguan1573.gitee.io/post/1027%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/</link>
      <pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1027%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/</guid>
      <description>异步投递 异步投递是什么 官网介绍 此处的异步是指生产者和broker之间发送消息的异步。不是指生产者和消费者之间异步 对于一个Slow Consum</description>
    </item>
    
    <item>
      <title>1、DataX（DataX）</title>
      <link>https://yiguan1573.gitee.io/post/1028datax/</link>
      <pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1028datax/</guid>
      <description>安装和使用 安装 前提-需要有java8以及Python2.7以上的环境 wget http://datax-opensource.oss-cn-hangzhou.aliyuncs.com/datax.tar.gz tar -zxvf datax.tar.gz 可能遇到的问题 运行官方案例 bin/datax.py /job/job.json 直接报错，说找不到plugin,</description>
    </item>
    
    <item>
      <title>10、ActiveMQ多节点集群（ActiveMQ）</title>
      <link>https://yiguan1573.gitee.io/post/1026activemq%E5%A4%9A%E8%8A%82%E7%82%B9%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Fri, 06 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1026activemq%E5%A4%9A%E8%8A%82%E7%82%B9%E9%9B%86%E7%BE%A4/</guid>
      <description>ActiveMQ多节点集群 引入消息中间件后如何保证其高可用——搭建集群 基于zookeeper和LevelDB搭建ActiveMQ集群。集群仅</description>
    </item>
    
    <item>
      <title>9、ActiveMQ的消息存储和持久化（ActiveMQ）</title>
      <link>https://yiguan1573.gitee.io/post/1025activemq%E7%9A%84%E6%B6%88%E6%81%AF%E5%AD%98%E5%82%A8%E5%92%8C%E6%8C%81%E4%B9%85%E5%8C%96/</link>
      <pubDate>Thu, 05 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1025activemq%E7%9A%84%E6%B6%88%E6%81%AF%E5%AD%98%E5%82%A8%E5%92%8C%E6%8C%81%E4%B9%85%E5%8C%96/</guid>
      <description>介绍 此处持久化和之前的持久化的区别 MQ高可用：事务、可持久、签收，是属于MQ自身特性，自带的。这里的持久化是外力，是外部插件。之前讲的持久化</description>
    </item>
    
    <item>
      <title>8、ActiveMQ的传输协议（ActiveMQ）</title>
      <link>https://yiguan1573.gitee.io/post/1024activemq%E7%9A%84%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Wed, 04 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1024activemq%E7%9A%84%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/</guid>
      <description>简介 ActiveMQ支持的client-broker通讯协议有：TVP、NIO、UDP、SSL、Http(s)、VM。其中配置Transpo</description>
    </item>
    
    <item>
      <title>7、SpringBoot整合ActiveMQ（ActiveMQ）</title>
      <link>https://yiguan1573.gitee.io/post/1023springboot%E6%95%B4%E5%90%88activemq/</link>
      <pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1023springboot%E6%95%B4%E5%90%88activemq/</guid>
      <description>queue生产者 pom.xml &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;parent&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-parent&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.1.5.RELEASE&amp;lt;/version&amp;gt; &amp;lt;relativePath/&amp;gt; &amp;lt;!--lookup parent from repository --&amp;gt; &amp;lt;/parent&amp;gt; &amp;lt;groupId&amp;gt;com.at.boot.activemq&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;boot_mq_produce&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt; &amp;lt;maven.compiler.source&amp;gt;1.8&amp;lt;/maven.compiler.source&amp;gt; &amp;lt;maven.compiler.target&amp;gt;1.8&amp;lt;/maven.compiler.target&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-test&amp;lt;/artifactId&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!--spring boot整合activemq的jar</description>
    </item>
    
    <item>
      <title>6、Spring整合ActiveMQ（ActiveMQ）</title>
      <link>https://yiguan1573.gitee.io/post/1022spring%E6%95%B4%E5%90%88activemq/</link>
      <pubDate>Mon, 02 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1022spring%E6%95%B4%E5%90%88activemq/</guid>
      <description>pom.xml添加依赖 &amp;lt;dependencies&amp;gt; &amp;lt;!--activemq核心依赖包 --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.activemq&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;activemq-all&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;5.10.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!--嵌入式activemq的broker所需要的依赖包</description>
    </item>
    
    <item>
      <title>5、ActiveMQ的broker（ActiveMQ）</title>
      <link>https://yiguan1573.gitee.io/post/1021activemq%E7%9A%84broker/</link>
      <pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1021activemq%E7%9A%84broker/</guid>
      <description>broker是什么 相当于一个ActiveMQ服务器实例。说白了，Broker其实就是实现了用代码的形式启动ActiveMQ将MQ嵌入到Jav</description>
    </item>
    
    <item>
      <title>4、JMS规范（ActiveMQ）</title>
      <link>https://yiguan1573.gitee.io/post/1020jms%E8%A7%84%E8%8C%83/</link>
      <pubDate>Sat, 30 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1020jms%E8%A7%84%E8%8C%83/</guid>
      <description>JMS是什么 什么是Java消息服务？ Java消息服务指的是两个应用程序之间进行异步通信的API，它为标准协议和消息服务提供了一组通用接口，包</description>
    </item>
    
    <item>
      <title>3、入门案例、MQ标准、API详解（ActiveMQ）</title>
      <link>https://yiguan1573.gitee.io/post/1019%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8Bmq%E6%A0%87%E5%87%86api%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 29 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1019%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8Bmq%E6%A0%87%E5%87%86api%E8%AF%A6%E8%A7%A3/</guid>
      <description>pom.xml导入依赖 &amp;lt;dependencies&amp;gt; &amp;lt;!--activemq 所需要的jar 包--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.activemq&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;activemq-all&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;5.15.9&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!--activemq 和 spring 整合的基础包 --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.xbean&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;xbean-spring&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.16&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; JMS编码总体规范 Destination简介</description>
    </item>
    
    <item>
      <title>2、ActiveMQ安装和控制台（ActiveMQ）</title>
      <link>https://yiguan1573.gitee.io/post/1018activemq%E5%AE%89%E8%A3%85%E5%92%8C%E6%8E%A7%E5%88%B6%E5%8F%B0/</link>
      <pubDate>Thu, 28 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1018activemq%E5%AE%89%E8%A3%85%E5%92%8C%E6%8E%A7%E5%88%B6%E5%8F%B0/</guid>
      <description>ActiveMQ安装 官方下载 官网地址： http://activemq.apache.org/ 安装步骤 参考文档 启动activemq cd /opt mkdir activemq cd activemq #上传文件 rz tar -xzvf apache-activemq-5.14.3-bin.tar.gz cd bin #启动 ./activemq start #关闭 ./activemq stop 查看进程 #</description>
    </item>
    
    <item>
      <title>2、MongoDB基础（MongoDB）</title>
      <link>https://yiguan1573.gitee.io/post/987mongodb%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Thu, 28 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/987mongodb%E5%9F%BA%E7%A1%80/</guid>
      <description>1 MongoDB相关概念 1.1 业务应用场景 传统的关系型数据库（如MySQL），在数据操作的“三高”需求以及应对Web2.0的网站需求面前，显得力</description>
    </item>
    
    <item>
      <title>1、MongoDB的使用简化版（MongoDB）</title>
      <link>https://yiguan1573.gitee.io/post/985mongodb%E7%9A%84%E4%BD%BF%E7%94%A8%E7%AE%80%E5%8C%96%E7%89%88/</link>
      <pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/985mongodb%E7%9A%84%E4%BD%BF%E7%94%A8%E7%AE%80%E5%8C%96%E7%89%88/</guid>
      <description>MongoDB 官方文档：https://docs.mongodb.com/manual/mongo/ 中文社区：https://mongoing.com 官</description>
    </item>
    
    <item>
      <title>1、入门概述（ActiveMQ）</title>
      <link>https://yiguan1573.gitee.io/post/1017%E5%85%A5%E9%97%A8%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1017%E5%85%A5%E9%97%A8%E6%A6%82%E8%BF%B0/</guid>
      <description>MQ的产品种类和对比 MQ就是消息中间件。MQ是一种理念，ActiveMQ是MQ的落地产品。不管是哪款消息中间件，都有如下一些技术维度： kafka 编程</description>
    </item>
    
    <item>
      <title>10、大表excel读取（Java）</title>
      <link>https://yiguan1573.gitee.io/post/986%E5%A4%A7%E8%A1%A8excel%E8%AF%BB%E5%8F%96/</link>
      <pubDate>Fri, 22 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/986%E5%A4%A7%E8%A1%A8excel%E8%AF%BB%E5%8F%96/</guid>
      <description>使用xlsx-streamer读取 maven引入 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.monitorjbl&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;xlsx-streamer&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.2.1&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 测试数据为12W条 正常读取 使用xlsx-streamer 使用 Workbook wb = StreamingReader.builder() .rowCacheSize(50000) //缓存到内</description>
    </item>
    
    <item>
      <title>9、Quartz（Java）</title>
      <link>https://yiguan1573.gitee.io/post/984quartz/</link>
      <pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/984quartz/</guid>
      <description>Quartz Java 实现定时任务的三种方法 但是都不能动态地控制定时时间 quartz的持久化数据库 quartz的持久化数据库简化版 几种定时器 Quartz持久化</description>
    </item>
    
    <item>
      <title>2、MinIO的JavaApi（MinIO）</title>
      <link>https://yiguan1573.gitee.io/post/983minio%E7%9A%84javaapi/</link>
      <pubDate>Thu, 31 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/983minio%E7%9A%84javaapi/</guid>
      <description>参考 官网中文站点 分布式MinIO快速入门 Java Client API参考文档 springboot集成minio完全版（避坑必看） minio - 服务的搭建和使用 MinIO</description>
    </item>
    
    <item>
      <title>1、MinIO安装（MinIO）</title>
      <link>https://yiguan1573.gitee.io/post/982minio%E5%AE%89%E8%A3%85/</link>
      <pubDate>Wed, 30 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/982minio%E5%AE%89%E8%A3%85/</guid>
      <description>第一步 创建文件夹 cd /opt mikdir MinIO #用于存放数据 mikdir -p MinIO/data cd MinIO #日志 touch minio.log 第二步 wget下载安装包 wget https://dl.min.io/server/minio/release/linux-amd64/minio 这时虚拟机报错如下 要么安装证书要么加入参数 wget --no-check-certificate https://dl.min.io/server/minio/release/linux-amd64/minio 下载完</description>
    </item>
    
    <item>
      <title>10、企业级调优（Hive）</title>
      <link>https://yiguan1573.gitee.io/post/1010%E4%BC%81%E4%B8%9A%E7%BA%A7%E8%B0%83%E4%BC%98/</link>
      <pubDate>Tue, 22 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1010%E4%BC%81%E4%B8%9A%E7%BA%A7%E8%B0%83%E4%BC%98/</guid>
      <description>执行计划（Explain） 基本语法 EXPLAIN [EXTENDED | DEPENDENCY | AUTHORIZATION] query 案例实操 Fetch 抓取 Fetch 抓取是指，Hive 中对某些情况的查询可以不必使用 MapReduce 计算。例如：SELECT *</description>
    </item>
    
    <item>
      <title>9、压缩和存储（Hive）</title>
      <link>https://yiguan1573.gitee.io/post/1009%E5%8E%8B%E7%BC%A9%E5%92%8C%E5%AD%98%E5%82%A8/</link>
      <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1009%E5%8E%8B%E7%BC%A9%E5%92%8C%E5%AD%98%E5%82%A8/</guid>
      <description>Hadoop 压缩配置 MR支持的压缩编码 压缩参数配置 开启 Map 输出阶段压缩（MR引擎） 开启 Reduce 输出阶段压缩 文件存储格式 Hive 支持的存储数据的格式主要有：TEXTF</description>
    </item>
    
    <item>
      <title>6、HBase 实战之谷粒微博（HBase）</title>
      <link>https://yiguan1573.gitee.io/post/1016hbase-%E5%AE%9E%E6%88%98%E4%B9%8B%E8%B0%B7%E7%B2%92%E5%BE%AE%E5%8D%9A/</link>
      <pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1016hbase-%E5%AE%9E%E6%88%98%E4%B9%8B%E8%B0%B7%E7%B2%92%E5%BE%AE%E5%8D%9A/</guid>
      <description>需求分析 微博内容的浏览，数据库表设计 用户社交体现：关注用户，取关用户 拉取关注的人的微博内容 代码实现 代码设计总览： 创建命名空间以及表名的定义 创</description>
    </item>
    
    <item>
      <title>5、HBase优化（HBase）</title>
      <link>https://yiguan1573.gitee.io/post/1015hbase%E4%BC%98%E5%8C%96/</link>
      <pubDate>Wed, 09 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1015hbase%E4%BC%98%E5%8C%96/</guid>
      <description>高可用 ​ 在HBase中HMaster负责监控HRegionServer的生命周期，均衡RegionServer的负载，如果HMaster挂掉</description>
    </item>
    
    <item>
      <title>8、函数（Hive）</title>
      <link>https://yiguan1573.gitee.io/post/1008%E5%87%BD%E6%95%B0/</link>
      <pubDate>Wed, 09 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1008%E5%87%BD%E6%95%B0/</guid>
      <description>系统内置函数 常用内置函数 空字段赋值 CASE WHEN THEN ELSE END 行转列 列转行 窗口函数（开窗函数） 窗口函数partition by name order by date后面不需要加窗口的位置</description>
    </item>
    
    <item>
      <title>4、HBase API（HBase）</title>
      <link>https://yiguan1573.gitee.io/post/1014hbase-api/</link>
      <pubDate>Tue, 08 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1014hbase-api/</guid>
      <description>环境准备 新建项目后在 pom.xml 中添加依赖： &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.hbase&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;hbase-server&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.3.1&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.hbase&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;hbase-client&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.3.1&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; HBaseAPI 获取 Configuration 对象 public static Configuration conf; static{ //使用 HBaseConfiguration 的单例方法实例化 conf = HBaseConfiguration.create(); conf.set(&amp;#34;hbase.zookeeper.quorum&amp;#34;, &amp;#34;192.166.9.102&amp;#34;); conf.set(&amp;#34;hbase.zookeeper.property.clientPort&amp;#34;, &amp;#34;2181&amp;#34;); } 判断表是否存在 public static boolean isTableExist(String</description>
    </item>
    
    <item>
      <title>7、分区表和分桶表（Hive）</title>
      <link>https://yiguan1573.gitee.io/post/1007%E5%88%86%E5%8C%BA%E8%A1%A8%E5%92%8C%E5%88%86%E6%A1%B6%E8%A1%A8/</link>
      <pubDate>Tue, 08 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1007%E5%88%86%E5%8C%BA%E8%A1%A8%E5%92%8C%E5%88%86%E6%A1%B6%E8%A1%A8/</guid>
      <description>分区表 分区表实际上就是对应一个 HDFS 文件系统上的独立的文件夹，该文件夹下是该分区所有的数据文件。Hive 中的分区就是分目录，把一个大的数据集根据</description>
    </item>
    
    <item>
      <title>3、HBase进阶（HBase）</title>
      <link>https://yiguan1573.gitee.io/post/1013hbase%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1013hbase%E8%BF%9B%E9%98%B6/</guid>
      <description>架构原理 1 ）StoreFile ​ 保存实际数据的物理文件，StoreFile以HFile的形式存储在HDFS上。每个Store会有一个或多个S</description>
    </item>
    
    <item>
      <title>6、查询（Hive）</title>
      <link>https://yiguan1573.gitee.io/post/1006%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1006%E6%9F%A5%E8%AF%A2/</guid>
      <description>基本查询（Select…From） 查询语句语法： SELECT [ALL | DISTINCT] select_expr, select_expr, ... FROM table_reference [WHERE where_condition] [GROUP BY col_list] [ORDER BY col_list] [CLUSTER BY col_list | [DISTRIBUTE BY col_list] [SORT BY col_list] ] [LIMIT number] 全表和特定列查询 数据准备 全表查询</description>
    </item>
    
    <item>
      <title>2、HBase快速入门（HBase）</title>
      <link>https://yiguan1573.gitee.io/post/1012hbase%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1012hbase%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</guid>
      <description>HBase 安装部署 Zookeeper 正常部署 首先保证 Zookeeper 集群的正常部署，并启动之： [atguigu@hadoop102 zookeeper-3.4.10]$ bin/zkServer.sh start [atguigu@hadoop103 zookeeper-3.4.10]$ bin/zkServer.sh start [atguigu@hadoop104 zookeeper-3.4.10]$ bin/zkServer.sh start Hadoop 正常部署 Hadoop 集群的正常部署并启动： [atguigu@hadoop102 hadoop-2.7.2]$ sbin/start-dfs.sh [atguigu@hadoop103 hadoop-2.7.2]$ sbin/start-yarn.sh HBase 的解压 解压 Hbase</description>
    </item>
    
    <item>
      <title>1、HBase简介（HBase）</title>
      <link>https://yiguan1573.gitee.io/post/1011hbase%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Sat, 05 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1011hbase%E7%AE%80%E4%BB%8B/</guid>
      <description>HBase定义 HBase 是一种分布式、可扩展、支持海量数据存储的 NoSQL 数据库 HBase数据模型 逻辑上，HBase 的数据模型同关系型数据库很类似，数据存储</description>
    </item>
    
    <item>
      <title>5、DML数据操作（Hive）</title>
      <link>https://yiguan1573.gitee.io/post/1005dml%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sat, 05 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1005dml%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/</guid>
      <description>数据导入 向表中装载数据（Load） 语法 例子 hive&amp;gt; load data [local] inpath &amp;#39;数据的 path&amp;#39; [overwrite] into table student [partition (partcol1=val1,…)]; load data:表示加载数</description>
    </item>
    
    <item>
      <title>4、DDL数据定义（Hive）</title>
      <link>https://yiguan1573.gitee.io/post/1004ddl%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89/</link>
      <pubDate>Fri, 04 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1004ddl%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89/</guid>
      <description>创建数据库 CREATE DATABASE [IF NOT EXISTS] database_name [COMMENT database_comment] [LOCATION hdfs_path] [WITH DBPROPERTIES (property_name=property_value, ...)]; 创建一个数据库，数据库在 HDFS 上的默认存储路径是/user/hive/warehouse/*.db hive (default)&amp;gt; create database</description>
    </item>
    
    <item>
      <title>3、Hive数据类型（Hive）</title>
      <link>https://yiguan1573.gitee.io/post/1003hive%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Thu, 03 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1003hive%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>基本数据类型 集合数据类型 案例实操 假设某表有如下一行，我们用 JSON 格式来表示其数据结构。在 Hive 下访问的格式为 { &amp;#34;name&amp;#34;: &amp;#34;songsong&amp;#34;, &amp;#34;friends&amp;#34;: [&amp;#34;bingbing&amp;#34; , &amp;#34;lili&amp;#34;] , //列表 Array, &amp;#34;children&amp;#34;: { //键值 Map,</description>
    </item>
    
    <item>
      <title>2、Hive安装（Hive）</title>
      <link>https://yiguan1573.gitee.io/post/1002hive%E5%AE%89%E8%A3%85/</link>
      <pubDate>Wed, 02 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1002hive%E5%AE%89%E8%A3%85/</guid>
      <description>Hive 安装地址 Hive 官网地址 http://hive.apache.org/ 文档查看地址 https://cwiki.apache.org/confluence/display/Hive/GettingStarted 下载地址 http://archive.apache.org/dist/hive/ github 地址 https://github.com/apache/hive Hive 安装部署 安装 Hive 把 apache-hive-3.1.2-bin.tar.gz 上传到 linux 的/opt/software 目录下 解压 apache-hive-3.1.2-bin.tar.gz 到/opt/mod</description>
    </item>
    
    <item>
      <title>1、Hive基本概念（Hive）</title>
      <link>https://yiguan1573.gitee.io/post/1001hive%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1001hive%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</guid>
      <description>什么是 Hive hive 简介 Hive：由 Facebook 开源用于解决海量结构化日志的数据统计工具。 Hive 是基于 Hadoop 的一个数据仓库工具，可以将结构化的数据文件映射为一张表，并提</description>
    </item>
    
    <item>
      <title>4、SparkStreaming（Spark）</title>
      <link>https://yiguan1573.gitee.io/post/944sparkstreaming/</link>
      <pubDate>Tue, 07 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/944sparkstreaming/</guid>
      <description>SparkStreaming 概述 Spark Streaming 是什么 Spark 流使得构建可扩展的容错流应用程序变得更加容易。 **Spark Streaming 用于流式数据的处理。**Spark Streaming 支持的数据输入源很多，例如：Kafk</description>
    </item>
    
    <item>
      <title>3、SparkSql（Spark）</title>
      <link>https://yiguan1573.gitee.io/post/943sparksql/</link>
      <pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/943sparksql/</guid>
      <description>SparkSQL 概述 SparkSQL 是什么 Spark SQL 是 Spark 用于结构化数据(structured data)处理的 Spark 模块。 Hive and SparkSQL SparkSQL 的前身是 Shark，给熟悉 RDBMS 但又不理解 MapReduce 的技术人员</description>
    </item>
    
    <item>
      <title>2、SparkCore核心编程（Spark）</title>
      <link>https://yiguan1573.gitee.io/post/942sparkcore%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/942sparkcore%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/</guid>
      <description>Spark 计算框架为了能够进行高并发和高吞吐的数据处理，封装了三大数据结构，用于处理不同的应用场景。三大数据结构分别是： RDD : 弹性分布式数据集 累加器：</description>
    </item>
    
    <item>
      <title>1、SparkCore（Spark）</title>
      <link>https://yiguan1573.gitee.io/post/941sparkcore/</link>
      <pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/941sparkcore/</guid>
      <description>Spark概述 Spark 是什么 Spark 是一种基于内存的快速、通用、可扩展的大数据分析计算引擎。 Spark and Hadoop 首先从时间节点上来看: Hadoop 2006 年 1 月，Doug Cutting 加入Yah</description>
    </item>
    
    <item>
      <title>11、CompletableFuture（JUC）</title>
      <link>https://yiguan1573.gitee.io/post/910completablefuture/</link>
      <pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/910completablefuture/</guid>
      <description>JDK1.8新特性CompletableFuture总结 理解Java8里面CompletableFuture异步编程 Future和Compl</description>
    </item>
    
    <item>
      <title>2、Scala补充（Scala）</title>
      <link>https://yiguan1573.gitee.io/post/932scala%E8%A1%A5%E5%85%85/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/932scala%E8%A1%A5%E5%85%85/</guid>
      <description></description>
    </item>
    
    <item>
      <title>1、Scala（Scala）</title>
      <link>https://yiguan1573.gitee.io/post/931scala/</link>
      <pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/931scala/</guid>
      <description>Scala语言入门 Scala（发音为/ˈskɑːlə, ˈskeɪlə/）是一门多范式的编程语言，设计初衷是要集成面向对象编程和函数式编程的各</description>
    </item>
    
    <item>
      <title>7、Hadoop补充（Hadoop）</title>
      <link>https://yiguan1573.gitee.io/post/927hadoop%E8%A1%A5%E5%85%85/</link>
      <pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/927hadoop%E8%A1%A5%E5%85%85/</guid>
      <description>Hadoop中DBInputFormat和DBOutputFormat使用 Hadoop中的DBInputFormat 使用DBInputFor</description>
    </item>
    
    <item>
      <title>8、Scheduled定时任务（Java）</title>
      <link>https://yiguan1573.gitee.io/post/981scheduled%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</link>
      <pubDate>Tue, 23 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/981scheduled%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</guid>
      <description>@Scheduled注解 Spring中@Scheduled注解的使用 SpringBoot中使用@Scheduled注解 Spring中配置该注</description>
    </item>
    
    <item>
      <title>6、源码解析（Hadoop）</title>
      <link>https://yiguan1573.gitee.io/post/926%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/926%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</guid>
      <description></description>
    </item>
    
    <item>
      <title>5、生产调优（Hadoop）</title>
      <link>https://yiguan1573.gitee.io/post/925%E7%94%9F%E4%BA%A7%E8%B0%83%E4%BC%98/</link>
      <pubDate>Sun, 24 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/925%E7%94%9F%E4%BA%A7%E8%B0%83%E4%BC%98/</guid>
      <description>HDFS—核心参数 NameNode内存生产配置 NameNode心跳并发配置 ​ 开启回收站配置 开启回收站功能，可以将删除的文件在不超时的情况下，</description>
    </item>
    
    <item>
      <title>4、Yarn（Hadoop）</title>
      <link>https://yiguan1573.gitee.io/post/924yarn/</link>
      <pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/924yarn/</guid>
      <description>Yarn调度器 Yarn是一个资源调度平台，负责为运算程序提供服务器运算资源，相当于一个分布式的操作系统平台，而MapReduce等运算程序则</description>
    </item>
    
    <item>
      <title>3、MapReduce（Hadoop）</title>
      <link>https://yiguan1573.gitee.io/post/923mapreduce/</link>
      <pubDate>Fri, 22 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/923mapreduce/</guid>
      <description>MapReduce概述 定义 MapReduce是一个分布式运算程序的编程框架，是用户开发“基于Hadoop的数据分析应用”的核心框架。 MapR</description>
    </item>
    
    <item>
      <title>2、HDFS（Hadoop）</title>
      <link>https://yiguan1573.gitee.io/post/922hdfs/</link>
      <pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/922hdfs/</guid>
      <description>HDFS概述 背景及定义 HDFS产生背景 随着数据量越来越大，在一个操作系统存不下所有的数据，那么就分配到更多的操作系统管理的磁盘中，但是不方便</description>
    </item>
    
    <item>
      <title>1、Hadoop入门（Hadoop）</title>
      <link>https://yiguan1573.gitee.io/post/921hadoop%E5%85%A5%E9%97%A8/</link>
      <pubDate>Wed, 20 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/921hadoop%E5%85%A5%E9%97%A8/</guid>
      <description>Hadoop概述 Hadoop是什么 Hadoop是一个由Apache基金 会所开发的分布式系统基础架构。 主要解决，海量数据的存储和海量数据的分析</description>
    </item>
    
    <item>
      <title>10、Future（JUC）</title>
      <link>https://yiguan1573.gitee.io/post/909future/</link>
      <pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/909future/</guid>
      <description>简介 Future是java 1.5引入的一个interface，可以方便的用于异步结果的获取。 方法 get（）方法可以当任务结束后返回一个结果，</description>
    </item>
    
    <item>
      <title>6、Kafka监控（Kafka）</title>
      <link>https://yiguan1573.gitee.io/post/916kafka%E7%9B%91%E6%8E%A7/</link>
      <pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/916kafka%E7%9B%91%E6%8E%A7/</guid>
      <description>Kafka Eagle Kafka Eagle是开源可视化和管理软件。它允许您查询、可视化、提醒和探索您的指标，无论它们存储在哪里。简单地说，它为您提供了将kafka集群</description>
    </item>
    
    <item>
      <title>5、自定义 Interceptor（Kafka）</title>
      <link>https://yiguan1573.gitee.io/post/915%E8%87%AA%E5%AE%9A%E4%B9%89-interceptor/</link>
      <pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/915%E8%87%AA%E5%AE%9A%E4%B9%89-interceptor/</guid>
      <description>原理 Producer 拦截器(interceptor)是在 Kafka 0.10 版本被引入的，主要用于实现 clients 端的定制化控制逻辑。 对于 producer 而言， interceptor 使得用户在消息发送前以及 producer 回调逻</description>
    </item>
    
    <item>
      <title>4、Kafka API（Kafka）</title>
      <link>https://yiguan1573.gitee.io/post/914kafka-api/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/914kafka-api/</guid>
      <description>xsync Producer API 消息发送流程 Kafka 的 Producer 发送消息采用的是异步发送的方式。在消息发送的过程中，涉及到了两个线程——main 线程和 Sender 线程，以及一个线程共享变量—</description>
    </item>
    
    <item>
      <title>7、JUC辅助类（JUC）</title>
      <link>https://yiguan1573.gitee.io/post/897juc%E8%BE%85%E5%8A%A9%E7%B1%BB/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/897juc%E8%BE%85%E5%8A%A9%E7%B1%BB/</guid>
      <description>减少计数CountDownLatch CountDownLatch(int count)构造一个用给定计数初始化的CountDownLatch在这里插入代码片 两个常用的主要方法 await()</description>
    </item>
    
    <item>
      <title>7、Kafka补充（Kafka）</title>
      <link>https://yiguan1573.gitee.io/post/917kafka%E8%A1%A5%E5%85%85/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/917kafka%E8%A1%A5%E5%85%85/</guid>
      <description>SpringBoot集成Kafka 最全面的案例 简单案例 Kafka connect 命令行使用方法 Kafka connect介绍、部署及开发 kafka connect java客户端的使用 Kafka Stream 简单案例</description>
    </item>
    
    <item>
      <title>8、阻塞队列（JUC）</title>
      <link>https://yiguan1573.gitee.io/post/898%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/898%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97/</guid>
      <description>BlockingQueue 简介 阻塞队列是共享队列（多线程操作），一端输入，一端输出 不能无限放队列，满了之后就会进入阻塞，取出也同理 当队列是空的，从队列中获取元素的操</description>
    </item>
    
    <item>
      <title>9、线程池（JUC）</title>
      <link>https://yiguan1573.gitee.io/post/899%E7%BA%BF%E7%A8%8B%E6%B1%A0/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/899%E7%BA%BF%E7%A8%8B%E6%B1%A0/</guid>
      <description>概述 线程池（英语：thread pool）：一种线程使用模式。线程过多会带来调度开销，进而影响缓存局部性和整体性能。而线程池维护着多个线程，等</description>
    </item>
    
    <item>
      <title>3、Kafka 架构深入（Kafka）</title>
      <link>https://yiguan1573.gitee.io/post/913kafka%E6%9E%B6%E6%9E%84%E6%B7%B1%E5%85%A5/</link>
      <pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/913kafka%E6%9E%B6%E6%9E%84%E6%B7%B1%E5%85%A5/</guid>
      <description>Kafka工作流程及文件存储机制 工作流程 Kafka 中消息是以 topic 进行分类的， producer生产消息，consumer消费消息，都是面向 topic的。</description>
    </item>
    
    <item>
      <title>6、Callable接口（JUC）</title>
      <link>https://yiguan1573.gitee.io/post/896callable%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/896callable%E6%8E%A5%E5%8F%A3/</guid>
      <description>简介 创建线程的多种方式： 继承Thread类 实现Runnable接口 Callable接口 线程池 Runnable 缺少的一项功能是，当线程终止时（即 run（）完</description>
    </item>
    
    <item>
      <title>2、Kafka快速入门（Kafka）</title>
      <link>https://yiguan1573.gitee.io/post/912kafka%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 11 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/912kafka%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</guid>
      <description>安装部署 集群规划 hadoop102 hadoop103 hadoop104 zk zk zk kafka kafka kafka jar包下载 官网下载 集群部署 解压安装包 [atguigu@hadoop102 software]$ tar -zxvf kafka_2.11-0.11.0.0.tgz -C /opt/module/ 修改解压后的文件名称 [atguigu@hadoop102 module]$ mv kafka_2.11-0.11.0.0/ kafka 在/opt/module</description>
    </item>
    
    <item>
      <title>5、多线程锁（JUC）</title>
      <link>https://yiguan1573.gitee.io/post/895%E5%A4%9A%E7%BA%BF%E7%A8%8B%E9%94%81/</link>
      <pubDate>Mon, 11 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/895%E5%A4%9A%E7%BA%BF%E7%A8%8B%E9%94%81/</guid>
      <description>Synchronized锁的作用域 synchronized实现同步的基础:Java中的每一个对象都可以作为锁，具体表现为以下3种形式。 对于普</description>
    </item>
    
    <item>
      <title>1、Kafka概述（Kafka）</title>
      <link>https://yiguan1573.gitee.io/post/911kafka%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/911kafka%E6%A6%82%E8%BF%B0/</guid>
      <description>官网 官方中文文档 官方最新文档 中文教程 定义 Kafka 是一个分布式的基于发布/订阅模式的消息队列（Message Queue），主要应用于大数据实时处理领</description>
    </item>
    
    <item>
      <title>4、集合的线程安全（JUC）</title>
      <link>https://yiguan1573.gitee.io/post/894%E9%9B%86%E5%90%88%E7%9A%84%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8/</link>
      <pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/894%E9%9B%86%E5%90%88%E7%9A%84%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8/</guid>
      <description>前沿 创建集合 List&amp;lt;String&amp;gt; list = new ArrayList&amp;lt;&amp;gt;(); 创建30个线程向集合中添加元素 for (int i = 0; i &amp;lt;30; i++) { new Thread(()-&amp;gt;{ //向集合添加内容 list.add(UUID.randomUUID().toString().substring(0,8)); System.out.println(list); },String.valueOf(i)).start(); } java.util.Concurrent</description>
    </item>
    
    <item>
      <title>3、线程间通信（JUC）</title>
      <link>https://yiguan1573.gitee.io/post/893%E7%BA%BF%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/</link>
      <pubDate>Sat, 09 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/893%E7%BA%BF%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/</guid>
      <description>概述 线程间通信的模型有两种：共享内存和消息传递 线程间的通信具体步骤 创建资源类，在资源类中船舰属性和操作方法 在资源类操作方法：判断、操作、通知</description>
    </item>
    
    <item>
      <title>2、Lock接口（JUC）</title>
      <link>https://yiguan1573.gitee.io/post/892lock%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Fri, 08 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/892lock%E6%8E%A5%E5%8F%A3/</guid>
      <description>Synchronized synchronized 是 Java 中的关键字，是一种同步锁。它修饰的对象有以下几种： 修饰一个代码块，被修饰的代码块称为同步语句块，其作用的范围是大括号{}括起来的代码</description>
    </item>
    
    <item>
      <title>1、JUC概述（JUC）</title>
      <link>https://yiguan1573.gitee.io/post/891juc%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Thu, 07 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/891juc%E6%A6%82%E8%BF%B0/</guid>
      <description>简介 在 Java 中，线程部分是一个重点，本篇文章说的 JUC 也是关于线程的。JUC 就是 java.util .concurrent 工具包的简称。这是一个处理线程的工具包，JDK 1.5 开始出现的。 进程</description>
    </item>
    
    <item>
      <title>7、源码解析（Zookeeper）</title>
      <link>https://yiguan1573.gitee.io/post/877%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Thu, 07 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/877%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</guid>
      <description>算法基础 Paxos算法 造成这种情况的原因是系统中有一个以上的 Proposer，多个 Proposers 相互争夺 Acceptor，造成迟迟无法达成一致的情况。*</description>
    </item>
    
    <item>
      <title>6、面试问题（Zookeeper）</title>
      <link>https://yiguan1573.gitee.io/post/876%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/876%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/</guid>
      <description>选举机制 生产集群安装多少 zk 合适 常用命令 ls、get、create、delete</description>
    </item>
    
    <item>
      <title>5、ZooKeeper 分布式（Zookeeper）</title>
      <link>https://yiguan1573.gitee.io/post/875zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</link>
      <pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/875zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</guid>
      <description>概念 比如说&amp;quot;进程 1&amp;quot;在使用该资源的时候，会先去获得锁，&amp;ldquo;进程 1&amp;quot;获得锁以后会对该资源 保持独占，这样</description>
    </item>
    
    <item>
      <title>4、服务器动态上下线监听案例（Zookeeper）</title>
      <link>https://yiguan1573.gitee.io/post/874%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A8%E6%80%81%E4%B8%8A%E4%B8%8B%E7%BA%BF%E7%9B%91%E5%90%AC%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/874%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A8%E6%80%81%E4%B8%8A%E4%B8%8B%E7%BA%BF%E7%9B%91%E5%90%AC%E6%A1%88%E4%BE%8B/</guid>
      <description>需求 某分布式系统中，主节点可以有多台，可以动态上下线，任意一台客户端都能实时感知 到主节点服务器的上下线。 需求分析 服务器动态上下线 具体实现 先在</description>
    </item>
    
    <item>
      <title>3、Zookeeper集群操作（Zookeeper）</title>
      <link>https://yiguan1573.gitee.io/post/873zookeeper%E9%9B%86%E7%BE%A4%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/873zookeeper%E9%9B%86%E7%BE%A4%E6%93%8D%E4%BD%9C/</guid>
      <description>集群操作 集群安装 集群规划 在 hadoop102、hadoop103 和 hadoop104 三个节点上都部署 Zookeeper。 解压安装 在 hadoop102 解压 Zookeeper 安装包到/opt/</description>
    </item>
    
    <item>
      <title>2、Zookeeper本地安装（Zookeeper）</title>
      <link>https://yiguan1573.gitee.io/post/872zookeeper%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/872zookeeper%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85/</guid>
      <description>本地模式安装 安装前准备 安装 JDK 拷贝 apache-zookeeper-3.5.7-bin.tar.gz 安装包到 Linux 系统下 解压到指定目录 [atguigu@hadoop102 software]$ tar -zxvf apache-zookeeper-3.5.7-bin.tar.gz -C /opt/module/ 修改名称 [atguigu@hadoop102 module]$ mv apache-zookeeper-3.5.7-bin zookeeper-3.5.7 配置修改 将/opt/module/zooke</description>
    </item>
    
    <item>
      <title>1、Zookeeper入门（Zookeeper）</title>
      <link>https://yiguan1573.gitee.io/post/871zookeeper%E5%85%A5%E9%97%A8/</link>
      <pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/871zookeeper%E5%85%A5%E9%97%A8/</guid>
      <description>概述 Zookeeper 是一个开源的分布式的，为分布式框架提供协调服务的 Apache 项目。 工作机制：Zookeeper从设计模式角度来理解：是一个基 于观察者模式设计的分</description>
    </item>
    
    <item>
      <title>2、Doker详解（Docker）</title>
      <link>https://yiguan1573.gitee.io/post/883docker%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/883docker%E8%AF%A6%E8%A7%A3/</guid>
      <description>概述 开发需要清楚的告诉运维部署团队，用的全部配置文件+所有软件环境。不过，即便如此，仍然常常发生部署失败的状况。Docker镜 像的设计，使得</description>
    </item>
    
    <item>
      <title>2、Java8新特性（Java8）</title>
      <link>https://yiguan1573.gitee.io/post/882java8%E6%96%B0%E7%89%B9%E6%80%A7/</link>
      <pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/882java8%E6%96%B0%E7%89%B9%E6%80%A7/</guid>
      <description>概述 生态 Lambda 表达式 函数式接口 方法引用 / 构造器引用 Stream API 接口中的默认方法 / 静态方法 新时间日期 API 其他新特性 新特性 速度更快 代码更少 强大的 Stream API 便于并行 最</description>
    </item>
    
    <item>
      <title>2、Java7新特性（Java7）</title>
      <link>https://yiguan1573.gitee.io/post/881java7%E6%96%B0%E7%89%B9%E6%80%A7/</link>
      <pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/881java7%E6%96%B0%E7%89%B9%E6%80%A7/</guid>
      <description>概述 泛型实例的创建可以通过类型推断来简化，可以去掉后面new部分的泛型类型，只用&amp;lt;&amp;gt;就可以了。 并发工具增强： fork-join框</description>
    </item>
    
    <item>
      <title>2、springcloud踩坑或经验记录（SpringCloud）</title>
      <link>https://yiguan1573.gitee.io/post/852springcloud%E8%B8%A9%E5%9D%91%E6%88%96%E7%BB%8F%E9%AA%8C%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Wed, 28 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/852springcloud%E8%B8%A9%E5%9D%91%E6%88%96%E7%BB%8F%E9%AA%8C%E8%AE%B0%E5%BD%95/</guid>
      <description>引入OpenFeign启动项目报错 Error creating bean with name &amp;lsquo;com.yiguan.service.users.TestService&amp;rsquo;: FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Method has too many Body parameters: public abstract java.lang.String com.yiguan.service.users.TestService.getConfig(java.lang.String,java.lang.String) 原来是在@FeignClient()接口类中，使用@R</description>
    </item>
    
    <item>
      <title>8、React扩展（React）</title>
      <link>https://yiguan1573.gitee.io/post/908%E6%89%A9%E5%B1%95/</link>
      <pubDate>Tue, 20 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/908%E6%89%A9%E5%B1%95/</guid>
      <description>1. setState setState更新状态的2种写法 (1). setState(stateChange, [callback])------对象式的setState 1.stateChange为状态改变对象</description>
    </item>
    
    <item>
      <title>7、redux（React）</title>
      <link>https://yiguan1573.gitee.io/post/907redux/</link>
      <pubDate>Mon, 19 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/907redux/</guid>
      <description>简介 redux是一个专门用于做状态管理的JS库(不是react插件库)，它可以用在react, angular, vue等项目中, 但基本与react配合使用，</description>
    </item>
    
    <item>
      <title>6、React UI组件库（React）</title>
      <link>https://yiguan1573.gitee.io/post/906react-ui%E7%BB%84%E4%BB%B6%E5%BA%93/</link>
      <pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/906react-ui%E7%BB%84%E4%BB%B6%E5%BA%93/</guid>
      <description>antd的按需引入+自定主题 安装依赖：yarn add react-app-rewired customize-cra babel-plugin-import less less-loader 修改package.json &amp;quot;scripts&amp;quot;: { &amp;quot;start&amp;quot;: &amp;quot;react-app-rewired start&amp;quot;, &amp;quot;build&amp;quot;: &amp;quot;react-app-rewired build&amp;quot;, &amp;quot;test&amp;quot;: &amp;quot;react-app-rewired test&amp;quot;, &amp;quot;eject&amp;quot;: &amp;quot;react-scripts eject&amp;quot; }, 根目录下创建config</description>
    </item>
    
    <item>
      <title>5、React路由（React）</title>
      <link>https://yiguan1573.gitee.io/post/905react%E8%B7%AF%E7%94%B1/</link>
      <pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/905react%E8%B7%AF%E7%94%B1/</guid>
      <description>简介 理解：一个路由就是一个映射关系(key:value)，key为路径, value可能是function或component。 后端路由： 理解</description>
    </item>
    
    <item>
      <title>4、React网络请求（React）</title>
      <link>https://yiguan1573.gitee.io/post/904react%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</link>
      <pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/904react%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</guid>
      <description>简介 React本身只关注于界面, 并不包含发送ajax请求的代码，react应用中需要集成第三方ajax库(或自己封装) 常用的ajax请求库 jQuery:</description>
    </item>
    
    <item>
      <title>3、React应用（React）</title>
      <link>https://yiguan1573.gitee.io/post/903react%E5%BA%94%E7%94%A8/</link>
      <pubDate>Wed, 14 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/903react%E5%BA%94%E7%94%A8/</guid>
      <description>使用create-react-app创建react应用 创建项目并启动 第一步，全局安装：npm i -g create-react-app 第二步，切换到想创项目的目录，使用命令：c</description>
    </item>
    
    <item>
      <title>2、React面向组件编程（React）</title>
      <link>https://yiguan1573.gitee.io/post/902react%E9%9D%A2%E5%90%91%E7%BB%84%E4%BB%B6%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/902react%E9%9D%A2%E5%90%91%E7%BB%84%E4%BB%B6%E7%BC%96%E7%A8%8B/</guid>
      <description>基本理解和使用 注意：组件名必须首字母大写、虚拟DOM元素只能有一个根元素、虚拟DOM元素必须有结束标签。 函数式组件 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;ti</description>
    </item>
    
    <item>
      <title>1、React入门（React）</title>
      <link>https://yiguan1573.gitee.io/post/901react%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 12 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/901react%E5%85%A5%E9%97%A8/</guid>
      <description>React简介 描述 用于动态构建用户界面的 JavaScript 库(只关注于视图) 由Facebook开源 特点 声明式编码 组件化编码 React Native 编写原生应用 高效（优秀的Dif</description>
    </item>
    
    <item>
      <title>2、索引（MySQL）</title>
      <link>https://yiguan1573.gitee.io/post/862%E7%B4%A2%E5%BC%95/</link>
      <pubDate>Wed, 07 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/862%E7%B4%A2%E5%BC%95/</guid>
      <description>索引</description>
    </item>
    
    <item>
      <title>1、主从复制（MySQL）</title>
      <link>https://yiguan1573.gitee.io/post/861%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</link>
      <pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/861%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</guid>
      <description>环境介绍 LNMP（centos7，mysql5.6） vmware workstation pro配置了3个虚拟机，均安装了LNMP环境： master： 192.168.0.105 slave： 192.168.0.106 、192</description>
    </item>
    
    <item>
      <title>4、经济管理系统</title>
      <link>https://yiguan1573.gitee.io/post/824%E7%BB%8F%E6%B5%8E%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/824%E7%BB%8F%E6%B5%8E%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</guid>
      <description>docker安装postgreSQL Linux环境下使用Docker安装Postgresql12 postgreSQL设置主键自增 postgr</description>
    </item>
    
    <item>
      <title>1、springcloud笔记（SpringCloud）</title>
      <link>https://yiguan1573.gitee.io/post/851springcloud/</link>
      <pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/851springcloud/</guid>
      <description>springcloud课程笔记</description>
    </item>
    
    <item>
      <title>3、毕业设计（拼车app客户端）</title>
      <link>https://yiguan1573.gitee.io/post/823%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E6%8B%BC%E8%BD%A6app%E5%AE%A2%E6%88%B7%E7%AB%AF/</link>
      <pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/823%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E6%8B%BC%E8%BD%A6app%E5%AE%A2%E6%88%B7%E7%AB%AF/</guid>
      <description>正则表达式验证密码问题 问题：js正则表达式test第一次为true，第二次为false 解决办法：重新创建一个正则表达式 原因：为什么使用正则t</description>
    </item>
    
    <item>
      <title>12、Mybatis-plus(MyBatis)</title>
      <link>https://yiguan1573.gitee.io/post/662mybatis-plus/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/662mybatis-plus/</guid>
      <description>官方文档 条件构造器</description>
    </item>
    
    <item>
      <title>17、Spring Boot2(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/617spring-boot2/</link>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/617spring-boot2/</guid>
      <description>springboot2资料</description>
    </item>
    
    <item>
      <title>2、后端(扫书项目)</title>
      <link>https://yiguan1573.gitee.io/post/822%E6%89%AB%E4%B9%A6%E9%A1%B9%E7%9B%AE-%E5%90%8E%E7%AB%AF/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/822%E6%89%AB%E4%B9%A6%E9%A1%B9%E7%9B%AE-%E5%90%8E%E7%AB%AF/</guid>
      <description>警告：Establishing SSL connection without server’s identity verification is not recommended SpringBoot启动时报红 Mon Jun 04 00:53:48 CST 2018 WARN: Establishing SSL connection without server&#39;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+</description>
    </item>
    
    <item>
      <title>2、Shiro其他(Shiro)</title>
      <link>https://yiguan1573.gitee.io/post/819shiro%E5%85%B6%E4%BB%96/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/819shiro%E5%85%B6%E4%BB%96/</guid>
      <description></description>
    </item>
    
    <item>
      <title>1、Shiro&#43;JWT(Shiro)</title>
      <link>https://yiguan1573.gitee.io/post/818shiro/</link>
      <pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/818shiro/</guid>
      <description>Shiro Shiro中文文档 SpringBoot整合Shiro Shiro认证流程 Springboot +Shiro +VUE 前后端分离式权限管理系统 登录拦截 JWT 概念 使用 JWT 生成 Token 代码示例 使用</description>
    </item>
    
    <item>
      <title>1、前端(扫书项目)</title>
      <link>https://yiguan1573.gitee.io/post/821%E6%89%AB%E4%B9%A6%E9%A1%B9%E7%9B%AE-%E5%89%8D%E7%AB%AF/</link>
      <pubDate>Tue, 24 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/821%E6%89%AB%E4%B9%A6%E9%A1%B9%E7%9B%AE-%E5%89%8D%E7%AB%AF/</guid>
      <description>el-popover点击里面的文本时 文本会有一个框 解决：在显示的标签盒子加以下属性 Vue 引用 animate.css 动画不生效 不能安装最新版本 npm install animate.css@3.5.1 --save Vue文件中全局</description>
    </item>
    
    <item>
      <title>7、nginx原理(Nginx)</title>
      <link>https://yiguan1573.gitee.io/post/817nginx%E5%8E%9F%E7%90%86/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/817nginx%E5%8E%9F%E7%90%86/</guid>
      <description>Nginx原理 mater 和 worker worker 如何进行工作的 一个 master 和多个 woker 有好处 可以使用 nginx –s reload 热部署，利用 nginx 进行热部署操作 每个 woker 是独立的进程，如果有其中的一个 woker 出</description>
    </item>
    
    <item>
      <title>6、nginx配置高可用的集群(Nginx)</title>
      <link>https://yiguan1573.gitee.io/post/816nginx%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Sat, 03 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/816nginx%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/</guid>
      <description>nginx 高可用 原理如下，当主master宕机后使用备用的nginx 需要两台 nginx 服务器 需要 keepalived 需要虚拟 ip 配置高可用的准备工作 需要两台服务器 192.168.17.129 和 192.168.17.131 在两台服</description>
    </item>
    
    <item>
      <title>5、nginx动静分离(Nginx)</title>
      <link>https://yiguan1573.gitee.io/post/815%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/</link>
      <pubDate>Fri, 02 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/815%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/</guid>
      <description>动静分离 Nginx 动静分离简单来说就是把动态跟静态请求分开，不能理解成只是单纯的把动态页面和静态页面物理分离。严格意义上说应该是动态请求跟静态请求分</description>
    </item>
    
    <item>
      <title>4、nginx负载均衡(Nginx)</title>
      <link>https://yiguan1573.gitee.io/post/814nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/814nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</guid>
      <description>负载均衡 实现效果，浏览器地址栏输入地址 http://192.168.17.129/edu/a.html，负载均衡效果，平均8080和8081</description>
    </item>
    
    <item>
      <title>3、nginx反向代理(Nginx)</title>
      <link>https://yiguan1573.gitee.io/post/813nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/</link>
      <pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/813nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/</guid>
      <description>反向代理实例一 实现效果，打开浏览器，在浏览器地址栏输入地址 www.123.com，跳转到 liunx 系统 tomcat 主页面中 准备工作，安装并启动tomcat服务</description>
    </item>
    
    <item>
      <title>2、nginx安装(Nginx)</title>
      <link>https://yiguan1573.gitee.io/post/812nginx%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sun, 27 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/812nginx%E5%AE%89%E8%A3%85/</guid>
      <description>安装步骤 docker search nginx 命令来查看可用版本 docker pull nginx:latest 拉取官方的最新版本的镜像 docker run &amp;ndash;name nginx -p 3737:80 -d nginx将本地 3737 端口映射到容器内部的 80 端口并启动(映射配置文件</description>
    </item>
    
    <item>
      <title>1、nginx简介(Nginx)</title>
      <link>https://yiguan1573.gitee.io/post/811nginx%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Sat, 26 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/811nginx%E7%AE%80%E4%BB%8B/</guid>
      <description>Nginx简介 Nginx (&amp;ldquo;engine x&amp;rdquo;) 是一个高性能的 HTTP 和反向代理服务器,特点是占有内存少，并发能力强，事实上 nginx 的并发能力确实在同类型的网页服务器中表现较好，国</description>
    </item>
    
    <item>
      <title>10、axios(Vue)</title>
      <link>https://yiguan1573.gitee.io/post/810axios/</link>
      <pubDate>Thu, 24 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/810axios/</guid>
      <description>axios的基本使用 功能特点: 在浏览器中发送 XMLHttpRequests 请求 在 node.js 中发送 http请求 支持 Promise API 拦截请求和响应 转换请求和响应数据 支持多种请求方式: axios(config) axios.request(config) axios.get(url[, config]) axios.delete(url[,</description>
    </item>
    
    <item>
      <title>9、Vuex(Vue)</title>
      <link>https://yiguan1573.gitee.io/post/809vuex/</link>
      <pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/809vuex/</guid>
      <description>Vuex Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式 如果多个组件都需要依赖同一个状态，就要将共享的状态抽取出来，交给vuex统一进行管理 Vuex核心概</description>
    </item>
    
    <item>
      <title>8、Promise(Vue)</title>
      <link>https://yiguan1573.gitee.io/post/808promise/</link>
      <pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/808promise/</guid>
      <description>简介 Promise是异步编程的一种解决方案 一种很常见的场景应该就是网络请求了。在封装一个网络请求的函数，因为不能立即拿到结果，不能像简单的3</description>
    </item>
    
    <item>
      <title>7、vue-router(Vue)</title>
      <link>https://yiguan1573.gitee.io/post/807vue-router/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/807vue-router/</guid>
      <description>路由的简介 后端路由 早期的网站开发整个HTML页面是由服务器来渲染的,服务器直接生产渲染好对应的HTML页面, 返回给客户端进行展示 一个页面有自</description>
    </item>
    
    <item>
      <title>6、Vue CLI(Vue)</title>
      <link>https://yiguan1573.gitee.io/post/806vue-cli/</link>
      <pubDate>Sun, 20 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/806vue-cli/</guid>
      <description>Vue CLI简介 CLI是Command-Line Interface, 翻译为命令行界面, 但是俗称脚手架 Vue CLI是一个官方发布 vue.js 项目脚手架，使用 vue-cli 可以快速搭建Vue开</description>
    </item>
    
    <item>
      <title>5、webpack(Vue)</title>
      <link>https://yiguan1573.gitee.io/post/805webpack/</link>
      <pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/805webpack/</guid>
      <description>webpack简介 从本质上来讲，webpack是一个现代的JavaScript应用的静态模块打包工具 前端模块化 在ES6之前，我们要想进行模块</description>
    </item>
    
    <item>
      <title>4、模块化(Vue)</title>
      <link>https://yiguan1573.gitee.io/post/804%E6%A8%A1%E5%9D%97%E5%8C%96/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/804%E6%A8%A1%E5%9D%97%E5%8C%96/</guid>
      <description>引入 在网页开发的早期，js制作作为一种脚本语言，做一些简单的表单验证或动画实现等，那个时候代码还是很少的 随着ajax异步请求的出现，慢慢形成</description>
    </item>
    
    <item>
      <title>3、组件化开发(Vue)</title>
      <link>https://yiguan1573.gitee.io/post/803%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/803%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91/</guid>
      <description>Vue组件化思想 组件化是Vue.js中的重要思想 它提供了一种抽象，让我们可以开发出一个个独立可复用的小组件来构造我们的应用。 任何的应用都会被</description>
    </item>
    
    <item>
      <title>2、Vue基础语法(Vue)</title>
      <link>https://yiguan1573.gitee.io/post/802vue%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/802vue%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</guid>
      <description>插值操作 Mustache Mustache: 胡子/胡须 可以通过Mustache语法(也就是双大括号)将data中的文本数据，插入到HTML中 v-once 在某些情况下，我们可能不希望界</description>
    </item>
    
    <item>
      <title>1、Vue简介(Vue)</title>
      <link>https://yiguan1573.gitee.io/post/801vue%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/801vue%E7%AE%80%E4%BB%8B/</guid>
      <description>认识Vuejs Vue (读音 /vjuː/，类似于 view)，不要读错。 Vue是一个渐进式的框架，什么是渐进式的呢？ 渐进式意味着你可以将Vue作为你</description>
    </item>
    
    <item>
      <title>25、职责链模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/725%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/725%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F/</guid>
      <description>学校 OA 系统的采购审批项目：需求是 如果金额 小于等于 5000, 由教学主任审批 （0&amp;lt;=x&amp;lt;=5000） 如果金额 小于等于 10000, 由院长审批 (5000&amp;lt;x&amp;lt;=10000) 如果金额 小</description>
    </item>
    
    <item>
      <title>24、策略模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/724%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/724%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</guid>
      <description>编写鸭子项目，具体要求如下 有各种鸭子(比如 野鸭、北京鸭、水鸭等， 鸭子有各种行为，比如 叫、飞行等) 显示鸭子的信息 传统方案解决鸭子问题的分析和代</description>
    </item>
    
    <item>
      <title>23、状态模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/723%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/723%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/</guid>
      <description>APP 抽奖活动问题 假如每参加一次这个活动要扣除用户 50 积分，中奖概率是 10% 奖品数量固定，抽完就不能抽奖 活动有四个状态: 可以抽奖、不能抽奖、发放奖品和</description>
    </item>
    
    <item>
      <title>22、解释器模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/722%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/722%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid>
      <description>四则运算问题 通过解释器模式来实现四则运算，如计算 a+b-c 的值，具体要求 先输入表达式的形式，比如 a+b+c-d+e, 要求表达式的字母不能重复 在分别输入 a ,b, c, d, e 的值 最</description>
    </item>
    
    <item>
      <title>21、备忘录模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/721%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/721%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/</guid>
      <description>游戏角色状态恢复问题 游戏角色有攻击力和防御力，在大战 Boss 前保存自身的状态(攻击力和防御力)，当大战 Boss 后攻击力和防御力下降，从备忘录对象恢复到大</description>
    </item>
    
    <item>
      <title>20、中介者模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/720%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/720%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
      <description>智能家庭项目 智能家庭包括各种设备，闹钟、咖啡机、电视机、窗帘 等 主人要看电视时，各个设备可以协同工作，自动完成看电视的准备工作，比如流程为：闹</description>
    </item>
    
    <item>
      <title>19、观察者模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/719%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/719%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
      <description>天气预报项目需求 气象站可以将每天测量到的温度，湿度，气压等等以公告的形式发布出去(比如发布到自己的网站或第三方)。 需要设计开放型 API，便于</description>
    </item>
    
    <item>
      <title>18、迭代器模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/718%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/718%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid>
      <description>需求 编写程序展示一个学校院系结构：需求是这样，要在一个页面中展示出学校的院系组成，一个学校有多个学院， 一个学院有多个系。如图： 传统的设计方案</description>
    </item>
    
    <item>
      <title>17、访问者模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/717%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/717%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
      <description>测评系统的需求 将观众分为男人和女人，对歌手进行测评，当看完某个歌手表演后，得到他们对该歌手不同的评价(评价有不同的种类，比如 成功、失败等) 传</description>
    </item>
    
    <item>
      <title>16、命令模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/716%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sun, 30 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/716%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/</guid>
      <description>智能生活项目需求 我们买了一套智能家电，有照明灯、风扇、冰箱、洗衣机，我们只要在手机上安装 app 就可以控制对这些家电工作。 这些智能家电来自不同的厂</description>
    </item>
    
    <item>
      <title>15、模板方法模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/715%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 29 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/715%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/</guid>
      <description>豆浆制作问题 制作豆浆的流程 选材&amp;mdash;&amp;gt;添加配料&amp;mdash;&amp;gt;浸泡&amp;mdash;&amp;gt;放到豆浆机打碎 通过添加不同的配料</description>
    </item>
    
    <item>
      <title>14、代理模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/714%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Fri, 28 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/714%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</guid>
      <description>代理模式(Proxy) 代理模式的基本介绍 代理模式：为一个对象提供一个替身，以控制对这个对象的访问。即通过代理对象访问目标对象.这样做的好处是</description>
    </item>
    
    <item>
      <title>13、享元模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/713%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/713%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/</guid>
      <description>展示网站项目需求 小型的外包项目，给客户 A 做一个产品展示网站，客户 A 的朋友感觉效果不错，也希望做这样的产品展示网站，但是要求都有些不同： 有客户</description>
    </item>
    
    <item>
      <title>14、HashMap(数据结构与算法)</title>
      <link>https://yiguan1573.gitee.io/post/744hashmap/</link>
      <pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/744hashmap/</guid>
      <description>Hash冲突的四种解决办法 哈希表简介 非哈希表的特点：关键字在表中的位置和它自检不存在一个确定的关系，查找的过程为给定值一次和各个关系自进行比</description>
    </item>
    
    <item>
      <title>12、外观模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/712%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/712%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/</guid>
      <description>影院管理项目 组建一个家庭影院：DVD 播放器、投影仪、自动屏幕、环绕立体声、爆米花机,要求完成使用家庭影院的功能，其过程为： 直接用遥控器：统筹</description>
    </item>
    
    <item>
      <title>13、程序员常用 10 种算法(数据结构与算法)</title>
      <link>https://yiguan1573.gitee.io/post/743%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B8%B8%E7%94%A810%E7%A7%8D%E7%AE%97%E6%B3%95/</link>
      <pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/743%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B8%B8%E7%94%A810%E7%A7%8D%E7%AE%97%E6%B3%95/</guid>
      <description>二分查找算法(非递归) 代码 package com.yiguan1573.algorithm; public class BinarySearch { public static void main(String[] args) { int[] arr = {1,3, 8, 10, 11, 67, 100}; int index = binarySearch(arr, 100); System.out.println(&amp;quot;index=&amp;quot; + index); } public static int binarySearch(int[] arr,int target){ int left = 0; int right = arr.length-1; while(left &amp;lt;= right){ int mid = (left + right)/2; if(target &amp;gt; arr[mid]){ left</description>
    </item>
    
    <item>
      <title>11、组合模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/711%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 25 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/711%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/</guid>
      <description>学校院系展示需求 编写程序展示一个学校院系结构：需求是这样，要在一个页面中展示出学校的院系组成，一个学校有多个学院， 一个学院有多个系。如图： 传</description>
    </item>
    
    <item>
      <title>12、图(数据结构与算法)</title>
      <link>https://yiguan1573.gitee.io/post/742%E5%9B%BE/</link>
      <pubDate>Tue, 25 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/742%E5%9B%BE/</guid>
      <description>图的表示方式 图的表示方式有两种：二维数组表示（邻接矩阵）；链表表示（邻接表） 邻接矩阵 邻接矩阵是表示图形中顶点之间相邻关系的矩阵，对于 n 个顶点</description>
    </item>
    
    <item>
      <title>10、装饰者模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/710%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/710%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
      <description>星巴克咖啡订单项目（咖啡馆） 咖啡种类/单品咖啡：Espresso(意大利浓咖啡)、ShortBlack、LongBlack(美式咖啡)、De</description>
    </item>
    
    <item>
      <title>11、多路查找树(数据结构与算法)</title>
      <link>https://yiguan1573.gitee.io/post/741%E5%A4%9A%E8%B7%AF%E6%9F%A5%E6%89%BE%E6%A0%91/</link>
      <pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/741%E5%A4%9A%E8%B7%AF%E6%9F%A5%E6%89%BE%E6%A0%91/</guid>
      <description>二叉树与 B 树 二叉树的问题分析 二叉树的操作效率较高，但是也存在问题, 请看下面的二叉树 二叉树需要加载到内存的，如果二叉树的节点少，没有什么问题，</description>
    </item>
    
    <item>
      <title>10、树结构实际应用(数据结构与算法)</title>
      <link>https://yiguan1573.gitee.io/post/740%E6%A0%91%E7%BB%93%E6%9E%84%E7%9A%84%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8/</link>
      <pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/740%E6%A0%91%E7%BB%93%E6%9E%84%E7%9A%84%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8/</guid>
      <description>堆排序 堆排序基本介绍 堆排序是利用堆这种数据结构而设计的一种排序算法，堆排序是一种选择排序，它的最坏，最好，平均时间复 杂度均为 O(nlogn)</description>
    </item>
    
    <item>
      <title>9、桥接模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/709%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/709%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/</guid>
      <description>手机操作问题 现在对不同手机类型的不同品牌实现操作编程(比如:开机、关机、上网，打电话等)，如图 传统方案解决手机操作问题 传统方案解决手机操作问</description>
    </item>
    
    <item>
      <title>8、适配器模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/708%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/708%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid>
      <description>现实生活中的适配器例子 泰国插座用的是两孔的（欧标），可以买个多功能转换插头 (适配器) ，这样就可以使用了 基本介绍 适配器模式(Adapter Pa</description>
    </item>
    
    <item>
      <title>9、树结构的基础部分(数据结构与算法)</title>
      <link>https://yiguan1573.gitee.io/post/739%E6%A0%91%E7%BB%93%E6%9E%84%E7%9A%84%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/</link>
      <pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/739%E6%A0%91%E7%BB%93%E6%9E%84%E7%9A%84%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/</guid>
      <description>二叉树 为什么需要树这种数据结构 数组存储方式的分析 优点：通过下标方式访问元素，速度快。对于有序数组，还可使用二分查找提高检索速度。 缺点：如果要</description>
    </item>
    
    <item>
      <title>7、建造者模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/707%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/707%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
      <description>盖房项目需求 需要建房子：这一过程为打桩、砌墙、封顶 房子有各种各样的，比如普通房，高楼，别墅，各种房子的过程虽然一样，但是要求不要相同的. 传统</description>
    </item>
    
    <item>
      <title>8、哈希表(数据结构与算法)</title>
      <link>https://yiguan1573.gitee.io/post/738%E5%93%88%E5%B8%8C%E8%A1%A8/</link>
      <pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/738%E5%93%88%E5%B8%8C%E8%A1%A8/</guid>
      <description>哈希表(散列)-Google 上机题 有一个公司,当有新的员工来报道时,要求将该员工的信息加入(id,性别,年龄,住址..),当输入该员工的 id 时</description>
    </item>
    
    <item>
      <title>6、原型模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/706%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/706%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>克隆羊问题 现在有一只羊 tom，姓名为: tom, 年龄为：1，颜色为：白色，请编写程序创建和 tom 羊 属性完全相同的 10只羊 传统方式 思路分析(图解) 代码 package com.atguigu.prototype;</description>
    </item>
    
    <item>
      <title>7、查找算法(数据结构与算法)</title>
      <link>https://yiguan1573.gitee.io/post/737%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</link>
      <pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/737%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</guid>
      <description>查找算法介绍 在 java 中，我们常用的查找有四种: 顺序(线性)查找 二分查找/折半查找 插值查找 斐波那契查找 线性查找算法 二分查找算法 二分查找算法的思路 二</description>
    </item>
    
    <item>
      <title>5、工厂模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/705%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/705%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</guid>
      <description>简单工厂模式 需求 看一个披萨的项目：要便于披萨种类的扩展，要便于维护 披萨的种类很多(比如 GreekPizz、CheesePizz 等) 披萨的制作</description>
    </item>
    
    <item>
      <title>6、排序算法(数据结构与算法)</title>
      <link>https://yiguan1573.gitee.io/post/736%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
      <pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/736%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid>
      <description>排序算法的介绍 排序也称排序算法(Sort Algorithm)，排序是将一组数据，依指定的顺序进行排列的过程。 排序的分类 内部排序: 指将需要处理</description>
    </item>
    
    <item>
      <title>4、单例设计模式(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/704%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/704%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
      <description>单例设计模式介绍 所谓类的单例设计模式，就是采取一定的方法保证在整个的软件系统中，对某个类只能存在一个对象实例，并且该类只提供一个取得其对象实</description>
    </item>
    
    <item>
      <title>5、递归(数据结构与算法)</title>
      <link>https://yiguan1573.gitee.io/post/735%E9%80%92%E5%BD%92/</link>
      <pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/735%E9%80%92%E5%BD%92/</guid>
      <description>递归应用场景 看个实际应用场景，迷宫问题(回溯)， 递归(Recursion) 递归的概念 递归就是方法自己调用自己,每次调用时传入不同的变量.递归</description>
    </item>
    
    <item>
      <title>3、设计模式概述(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/703%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/703%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%A6%82%E8%BF%B0/</guid>
      <description>设计模式类型 设计模式分为三种类型，共 23 种 创建型模式：单例模式、抽象工厂模式、原型模式、建造者模式、工厂模式 结构型模式：适配器模式、桥接模式、</description>
    </item>
    
    <item>
      <title>4、栈(数据结构与算法)</title>
      <link>https://yiguan1573.gitee.io/post/734%E6%A0%88/</link>
      <pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/734%E6%A0%88/</guid>
      <description>栈的一个实际需求 栈的介绍 栈的英文为(stack) 栈是一个先入后出(FILO-First In Last Out)的有序列表。 栈(stack)是限制线性表中</description>
    </item>
    
    <item>
      <title>2、UML类图(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/702uml%E7%B1%BB%E5%9B%BE/</link>
      <pubDate>Sun, 16 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/702uml%E7%B1%BB%E5%9B%BE/</guid>
      <description>UML 基本介绍 介绍 UML——Unified modeling language UML (统一建模语言)，是一种用于软件系统分析和设计的语言工具，它用于帮助软件开发人员进行思考和记录思</description>
    </item>
    
    <item>
      <title>3、链表(数据结构与算法)</title>
      <link>https://yiguan1573.gitee.io/post/733%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Sun, 16 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/733%E9%93%BE%E8%A1%A8/</guid>
      <description>链表(Linked List)介绍 链表是有序的列表，但是它在内存中是存储如下 小结上图: 链表是以节点的方式来存储,是链式存储 每个节点包含 data 域， next</description>
    </item>
    
    <item>
      <title>1、数据结构与算法概述(数据结构与算法)</title>
      <link>https://yiguan1573.gitee.io/post/731%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Sat, 15 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/731%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0/</guid>
      <description>数据结构和算法的关系 数据 data 结构(structure)是一门研究组织数据方式的学科，有了编程语言也就有了数据结构.学好数据结构可以 编写出更加漂</description>
    </item>
    
    <item>
      <title>1、设计模式七大原则(设计模式)</title>
      <link>https://yiguan1573.gitee.io/post/701%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B8%83%E5%A4%A7%E5%8E%9F%E5%88%99/</link>
      <pubDate>Sat, 15 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/701%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B8%83%E5%A4%A7%E5%8E%9F%E5%88%99/</guid>
      <description>设计模式的目的 编写软件过程中，程序员面临着来自耦合性，内聚性以及可维护性，可扩展性，重用性，灵活性等多方面的挑战，设计模式是为了让程序(软件</description>
    </item>
    
    <item>
      <title>2、稀疏数组和队列(数据结构与算法)</title>
      <link>https://yiguan1573.gitee.io/post/732%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84%E5%92%8C%E9%98%9F%E5%88%97/</link>
      <pubDate>Sat, 15 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/732%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84%E5%92%8C%E9%98%9F%E5%88%97/</guid>
      <description>稀疏 sparsearray 数组 先看一个实际的需求 编写的五子棋程序中，有存盘退出和续上盘的功能 分析问题:因为该二维数组的很多值是默认值 0, 因此记录了很多没有意义的数</description>
    </item>
    
    <item>
      <title>11、Mybatis 注解开发(MyBatis)</title>
      <link>https://yiguan1573.gitee.io/post/661mybatis-%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/</link>
      <pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/661mybatis-%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/</guid>
      <description>mybatis 的常用注解说明 @Insert:实现新增 @Update:实现更新 @Delete:实现删除 @Select:实现查询 @Result:实现结果集封</description>
    </item>
    
    <item>
      <title>10、Mybatis 缓存(MyBatis)</title>
      <link>https://yiguan1573.gitee.io/post/660mybatis-%E7%BC%93%E5%AD%98/</link>
      <pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/660mybatis-%E7%BC%93%E5%AD%98/</guid>
      <description>Mybatis 一级缓存 一级缓存是 SqlSession 级别的缓存，只要 SqlSession 没有 flush 或 close，它就存在 一级缓存的分析 一级缓存是 SqlSession 范围的缓存，当调用 SqlSession 的修改，添加，删除，com</description>
    </item>
    
    <item>
      <title>9、Mybatis 延迟加载策略(MyBatis)</title>
      <link>https://yiguan1573.gitee.io/post/659mybatis-%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E7%AD%96%E7%95%A5/</link>
      <pubDate>Wed, 12 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/659mybatis-%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E7%AD%96%E7%95%A5/</guid>
      <description>延迟加载概念 就是在需要用到数据时才进行加载，不需要用到数据时就不加载数据。延迟加载也称懒加载 好处： 先从单表查询，需要时再从关联表去关联查询，</description>
    </item>
    
    <item>
      <title>8、Mybatis多表查询(MyBatis)</title>
      <link>https://yiguan1573.gitee.io/post/658mybatis-%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/658mybatis-%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/</guid>
      <description>一对一查询(多对一) 需求：查询所有账户信息，关联查询下单用户信息 注意：因为一个账户信息只能供某个用户使用，所以从查询账户信息出发关联查询用户</description>
    </item>
    
    <item>
      <title>7、Mybatis 连接池与事务深入(MyBatis)</title>
      <link>https://yiguan1573.gitee.io/post/657mybatis-%E8%BF%9E%E6%8E%A5%E6%B1%A0%E4%B8%8E%E4%BA%8B%E5%8A%A1%E6%B7%B1%E5%85%A5/</link>
      <pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/657mybatis-%E8%BF%9E%E6%8E%A5%E6%B1%A0%E4%B8%8E%E4%BA%8B%E5%8A%A1%E6%B7%B1%E5%85%A5/</guid>
      <description>Mybatis 的连接池技术 Mybatis 连接池的分类 Mybatis 将它自己的数据源分为三类： UNPOOLED 不使用连接池的数据源 POOLED 使用连接池的数据源 JNDI 使用 JNDI 实现的数据源 相应地，MyBatis</description>
    </item>
    
    <item>
      <title>6、SqlMapConfig.xml配置文件(MyBatis)</title>
      <link>https://yiguan1573.gitee.io/post/656sqlmapconfig.xml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/656sqlmapconfig.xml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</guid>
      <description>配置内容 SqlMapConfig.xml 中配置的内容和顺序 properties（属性） 在使用 properties 标签配置时，我们可以采用两种方式指定属性配置 第一种 &amp;lt;properties&amp;gt; &amp;lt;property name=&amp;quot;jdbc.driver&amp;quot; value=&amp;quot;com.mysql.jdbc.Driver&amp;quot;/&amp;gt; &amp;lt;property name=&amp;quot;jdbc.url&amp;quot; value=&amp;quot;jdbc:mysql://localhost:3306/eesy&amp;quot;/&amp;gt; &amp;lt;property name=&amp;quot;jdbc.username&amp;quot; value=&amp;quot;root&amp;quot;/&amp;gt; &amp;lt;property name=&amp;quot;jdbc.password&amp;quot; value=&amp;quot;1234&amp;quot;/&amp;gt;</description>
    </item>
    
    <item>
      <title>5、Mybatis 的输出结果封装(MyBatis)</title>
      <link>https://yiguan1573.gitee.io/post/655mybatis-%E7%9A%84%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E5%B0%81%E8%A3%85/</link>
      <pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/655mybatis-%E7%9A%84%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E5%B0%81%E8%A3%85/</guid>
      <description>resultType 配置结果类型 resultType 属性可以指定结果集的类型，它支持基本类型和实体类类型 需要注意的是，它和 parameterType 一样，如果注册过类型别名的，可以直接使用别名。没有注</description>
    </item>
    
    <item>
      <title>4、基于代理 Dao 实现 CRUD 操作(MyBatis)</title>
      <link>https://yiguan1573.gitee.io/post/644%E5%9F%BA%E4%BA%8E%E4%BB%A3%E7%90%86dao%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Fri, 07 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/644%E5%9F%BA%E4%BA%8E%E4%BB%A3%E7%90%86dao%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/</guid>
      <description>根据 ID 查询 在持久层接口中添加 findById 方法 User findById(Integer userId); 在用户的映射配置文件中配置 &amp;lt;!-- 根据 id 查询 --&amp;gt; &amp;lt;select id=&amp;quot;findById&amp;quot; resultType=&amp;quot;com.itheima.domain.User&amp;quot; parameterType=&amp;quot;int&amp;quot;&amp;gt; select * from user where id = #{uid} &amp;lt;/select&amp;gt; 细节： resultType 属性： 用于指定结果集的类型</description>
    </item>
    
    <item>
      <title>3、自定义Mybatis(MyBatis)</title>
      <link>https://yiguan1573.gitee.io/post/643%E8%87%AA%E5%AE%9A%E4%B9%89mybatis/</link>
      <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/643%E8%87%AA%E5%AE%9A%E4%B9%89mybatis/</guid>
      <description>自定义 Mybatis 的设计模式说明 工厂模式（SqlSessionFactory） 代理模式(MapperProxyFactory) 构建者模式(SqlSes</description>
    </item>
    
    <item>
      <title>2、 Mybatis 框架快速入门(MyBatis)</title>
      <link>https://yiguan1573.gitee.io/post/642mybatis%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/642mybatis%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</guid>
      <description>搭建 Mybatis 开发环境 创建 maven 工程 创建 mybatis01 的工程，工程信息如下： Groupid:com.itheima ArtifactId:mybatis01 Packing:jar 添加 Mybatis3.4.5 的坐标 在 pom.xml 文件中添加 Mybatis3.4.5 的坐标，如下： &amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.mybatis&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mybatis&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.4.5&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;4.10&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;mysql&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mysql-connector-java&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;5.1.6&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;log4j&amp;lt;/groupId&amp;gt;</description>
    </item>
    
    <item>
      <title>1、MyBatis概述(MyBatis)</title>
      <link>https://yiguan1573.gitee.io/post/641mybatis%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/641mybatis%E6%A6%82%E8%BF%B0/</guid>
      <description>概述 mybatis 是一个优秀的基于 java 的持久层框架，它内部封装了 jdbc，使开发者只需要关注 sql 语句本身，而不需要花费精力去处理加载驱动、创建连接、创建 statement 等</description>
    </item>
    
    <item>
      <title>9、SSM整合SpringMVC(SpringMVC)</title>
      <link>https://yiguan1573.gitee.io/post/639ssm%E6%95%B4%E5%90%88springmvc/</link>
      <pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/639ssm%E6%95%B4%E5%90%88springmvc/</guid>
      <description>搭建整合环境 整合说明：SSM整合可以使用多种方式，咱们会选择XML + 注解的方式 整合的思路 先搭建整合的环境 先把Spring的配置搭建完成 再使用</description>
    </item>
    
    <item>
      <title>8、SpringMVC框架中的拦截器(SpringMVC)</title>
      <link>https://yiguan1573.gitee.io/post/638springmvc%E6%A1%86%E6%9E%B6%E4%B8%AD%E7%9A%84%E6%8B%A6%E6%88%AA%E5%99%A8/</link>
      <pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/638springmvc%E6%A1%86%E6%9E%B6%E4%B8%AD%E7%9A%84%E6%8B%A6%E6%88%AA%E5%99%A8/</guid>
      <description>拦截器的概述 SpringMVC框架中的拦截器用于对处理器进行预处理和后处理的技术 可以定义拦截器链，连接器链就是将拦截器按着一定的顺序结成一条</description>
    </item>
    
    <item>
      <title>7、SpringMVC的异常处理(SpringMVC)</title>
      <link>https://yiguan1573.gitee.io/post/637springmvc%E7%9A%84%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</link>
      <pubDate>Fri, 31 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/637springmvc%E7%9A%84%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</guid>
      <description>异常处理思路 Controller调用service，service调用dao，异常都是向上抛出的，最终有DispatcherServlet找</description>
    </item>
    
    <item>
      <title>6、SpringMVC实现文件上传(SpringMVC)</title>
      <link>https://yiguan1573.gitee.io/post/636springmvc%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</link>
      <pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/636springmvc%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</guid>
      <description>文件上传的回顾 导入文件上传的jar包 编写文件上传的JSP页面 编写文件上传的Controller控制器 SpringMVC传统方式文件上传 Spr</description>
    </item>
    
    <item>
      <title>5、响应数据和结果视图(SpringMVC)</title>
      <link>https://yiguan1573.gitee.io/post/635%E5%93%8D%E5%BA%94%E6%95%B0%E6%8D%AE%E5%92%8C%E7%BB%93%E6%9E%9C%E8%A7%86%E5%9B%BE/</link>
      <pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/635%E5%93%8D%E5%BA%94%E6%95%B0%E6%8D%AE%E5%92%8C%E7%BB%93%E6%9E%9C%E8%A7%86%E5%9B%BE/</guid>
      <description>返回值分类 返回字符串 Controller方法返回字符串可以指定逻辑视图的名称，根据视图解析器为物理视图的地址 具体的应用场景 返回值是void 如</description>
    </item>
    
    <item>
      <title>4、常用注解(SpringMVC)</title>
      <link>https://yiguan1573.gitee.io/post/634%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/</link>
      <pubDate>Tue, 28 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/634%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/</guid>
      <description>RequestParam注解 作用：把请求中的指定名称的参数传递给控制器中的形参赋值 属性 required：请求参数中是否必须提供此参数，默认值</description>
    </item>
    
    <item>
      <title>3、请求参数的绑定(SpringMVC)</title>
      <link>https://yiguan1573.gitee.io/post/633%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0%E7%9A%84%E7%BB%91%E5%AE%9A/</link>
      <pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/633%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0%E7%9A%84%E7%BB%91%E5%AE%9A/</guid>
      <description>请求参数的绑定说明 绑定机制 表单提交的数据都是k=v格式的 username=haha&amp;amp;password=123 SpringMVC的参数绑定过程是把表单提交的请求参数，作为控制器中方法的参数进行</description>
    </item>
    
    <item>
      <title>2、SpringMVC入门(SpringMVC)</title>
      <link>https://yiguan1573.gitee.io/post/632springmvc%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sun, 26 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/632springmvc%E5%85%A5%E9%97%A8/</guid>
      <description>SpringMVC的入门程序 创建WEB工程，引入开发的jar包（具体的坐标如下） 配置核心的控制器（配置DispatcherServlet）,</description>
    </item>
    
    <item>
      <title>1、三层架构和MVC(SpringMVC)</title>
      <link>https://yiguan1573.gitee.io/post/631%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E5%92%8Cmvc/</link>
      <pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/631%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E5%92%8Cmvc/</guid>
      <description>三层架构 开发服务器端程序，一般都基于两种形式，一种C/S架构程序，一种B/S架构程序 使用Java语言基本上都是开发B/S架构的程序，B/S架</description>
    </item>
    
    <item>
      <title>6、Spring5 框架新功能(Spring)</title>
      <link>https://yiguan1573.gitee.io/post/626spring5-%E6%A1%86%E6%9E%B6%E6%96%B0%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/626spring5-%E6%A1%86%E6%9E%B6%E6%96%B0%E5%8A%9F%E8%83%BD/</guid>
      <description>Spring5 框架新功能 整个Spring5框架的代码基于 Java8，运行时兼容 JDK9，许多不建议使用的类和方法在代码库中删除 Spring 5.0 框架自带了通用的日志封</description>
    </item>
    
    <item>
      <title>5、事务操作(Spring)</title>
      <link>https://yiguan1573.gitee.io/post/625%E4%BA%8B%E5%8A%A1%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/625%E4%BA%8B%E5%8A%A1%E6%93%8D%E4%BD%9C/</guid>
      <description>概念 什么事务 事务是数据库操作最基本单元，逻辑上一组操作，要么都成功，如果有一个失败所有操 作都失败 典型场景：银行转账 lucy 转账 100 元 给 mary lucy 少 100，</description>
    </item>
    
    <item>
      <title>4、JdbcTemplate(Spring)</title>
      <link>https://yiguan1573.gitee.io/post/624jdbctemplate/</link>
      <pubDate>Wed, 22 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/624jdbctemplate/</guid>
      <description>概念和准备 概念 Spring 框架对 JDBC 进行封装，使用 JdbcTemplate 方便实现对数据库操作 准备工作 引入相关 jar 包 在 spring 配置文件配置数据库连接池 &amp;lt;!-- 数据库连接池 --&amp;gt; &amp;lt;bean id=&amp;quot;dataSource&amp;quot; class=&amp;quot;com.alibaba.druid.pool.DruidDataSource&amp;quot; destroy-method=&amp;quot;close&amp;quot;&amp;gt; &amp;lt;property name=&amp;quot;url&amp;quot; value=&amp;quot;jdbc:mysql:///user_db&amp;quot; /&amp;gt;</description>
    </item>
    
    <item>
      <title>3、AOP(Spring)</title>
      <link>https://yiguan1573.gitee.io/post/623aop/</link>
      <pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/623aop/</guid>
      <description>概念 面向切面编程（方面），利用 AOP 可以对业务逻辑的各个部分进行隔离，从而使得 业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发</description>
    </item>
    
    <item>
      <title>2、IOC(Spring)</title>
      <link>https://yiguan1573.gitee.io/post/622ioc/</link>
      <pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/622ioc/</guid>
      <description>IOC（概念和原理） 什么是 IOC 控制反转，把对象创建和对象之间的调用过程，交给 Spring 进行管理 使用 IOC 目的：为了耦合度降低 做入门案例就是 IOC 实现 IOC 底层原理</description>
    </item>
    
    <item>
      <title>1、Spring框架概述(Spring)</title>
      <link>https://yiguan1573.gitee.io/post/621spring%E6%A1%86%E6%9E%B6%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Sun, 19 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/621spring%E6%A1%86%E6%9E%B6%E6%A6%82%E8%BF%B0/</guid>
      <description>Spring5 框架概述 Spring 是轻量级的开源的 JavaEE 框架 Spring 可以解决企业应用开发的复杂性 Spring 有两个核心部分：IOC 和 Aop IOC：控制反转，把创建对象过程交给 Spring 进行管理 A</description>
    </item>
    
    <item>
      <title>10、Redis的Java客户端Jedis(Redis)</title>
      <link>https://yiguan1573.gitee.io/post/540redis%E7%9A%84java%E5%AE%A2%E6%88%B7%E7%AB%AFjedis/</link>
      <pubDate>Fri, 17 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/540redis%E7%9A%84java%E5%AE%A2%E6%88%B7%E7%AB%AFjedis/</guid>
      <description>Jedis_测试联通 在Eclipse创建普通Maven工程 pom.xml引入下面关键依赖 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;redis.clients&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;jedis&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.1.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 创建新类，测试连通，源码如下： package com.lun.shang; import redis.clients.jedis.Jedis; public class</description>
    </item>
    
    <item>
      <title>9、Redis的主从复制(Redis)</title>
      <link>https://yiguan1573.gitee.io/post/539redis%E7%9A%84%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</link>
      <pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/539redis%E7%9A%84%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</guid>
      <description>简介 行话：也就是我们所说的主从复制，主机数据更新后根据配置和策略， 自动同步到备机的master/slaver机制，Master以写为主，Sl</description>
    </item>
    
    <item>
      <title>8、Redis的发布订阅(Redis)</title>
      <link>https://yiguan1573.gitee.io/post/538redis%E7%9A%84%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/</link>
      <pubDate>Wed, 15 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/538redis%E7%9A%84%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/</guid>
      <description>简介 用观察者模式理解学习 进程间的一种消息通信模式：发送者(pub)发送消息，订阅者(sub)接收消息。 下图展示了频道 channel1 ， 以及订阅这个频道的三</description>
    </item>
    
    <item>
      <title>7、Redis的事务(Redis)</title>
      <link>https://yiguan1573.gitee.io/post/537redis%E7%9A%84%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Tue, 14 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/537redis%E7%9A%84%E4%BA%8B%E5%8A%A1/</guid>
      <description>简介 可以一次执行多个命令，本质是一组命令的集合。一个事务中的所有命令都会序列化，按顺序地串行化执行而不会被其它命令插入，不许加塞。 一个队列中</description>
    </item>
    
    <item>
      <title>6、Redis的持久化(Redis)</title>
      <link>https://yiguan1573.gitee.io/post/536redis%E7%9A%84%E6%8C%81%E4%B9%85%E5%8C%96/</link>
      <pubDate>Mon, 13 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/536redis%E7%9A%84%E6%8C%81%E4%B9%85%E5%8C%96/</guid>
      <description>持久化之RDB（Redis DataBase） 是什么 在指定的时间间隔内将内存中的数据集快照写入磁盘，也就是行话讲的Snapshot快照，它恢复</description>
    </item>
    
    <item>
      <title>5、Redis配置文件(Redis)</title>
      <link>https://yiguan1573.gitee.io/post/535redis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sun, 12 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/535redis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</guid>
      <description>Redis 的配置文件位于 Redis 安装目录下，文件名为 redis.conf(Windows 名为 redis.windows.conf)。 你可以通过 CONFIG 命令查看或设置配置项。 语法 Redis CONFIG 命令格式如下：</description>
    </item>
    
    <item>
      <title>4、Redis数据类型(Redis)</title>
      <link>https://yiguan1573.gitee.io/post/534redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Sat, 11 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/534redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>Redis的五大数据类型 String（字符串） string是redis最基本的类型，你可以理解成与Memcached一模一样的类型，一个ke</description>
    </item>
    
    <item>
      <title>3、Redis简介(Redis)</title>
      <link>https://yiguan1573.gitee.io/post/533redis%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Fri, 10 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/533redis%E7%AE%80%E4%BB%8B/</guid>
      <description>入门概述 是什么 Redis:REmote DIctionary Server(远程字典服务器)是完全开源免费的，用C语言编写的，遵守BSD协议，是一个高性能的(key/value)分布式</description>
    </item>
    
    <item>
      <title>2、分布式数据库CAP原理(Redis)</title>
      <link>https://yiguan1573.gitee.io/post/532%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93cap%E5%8E%9F%E7%90%86/</link>
      <pubDate>Thu, 09 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/532%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93cap%E5%8E%9F%E7%90%86/</guid>
      <description>传统的ACID分别是什么 A (Atomicity) 原子性 C (Consistency) 一致性 I (Isolation) 独立性 D (Durability) 持久性 关系型数据库遵循ACID规则，事务在英文中是transaction，和现实世</description>
    </item>
    
    <item>
      <title>1、NoSQL入门概述(Redis)</title>
      <link>https://yiguan1573.gitee.io/post/531nosql%E5%85%A5%E9%97%A8%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/531nosql%E5%85%A5%E9%97%A8%E6%A6%82%E8%BF%B0/</guid>
      <description>互联网时代背景下大机遇，为什么用NoSQL 1.单机MySQL的美好年代 在90年代，一个网站的浏览量一般都不大，用单个数据库完全可以轻松应付。</description>
    </item>
    
    <item>
      <title>16、Spring Boot与监控管理(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/616spring-boot%E4%B8%8E%E7%9B%91%E6%8E%A7%E7%AE%A1%E7%90%86/</link>
      <pubDate>Tue, 07 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/616spring-boot%E4%B8%8E%E7%9B%91%E6%8E%A7%E7%AE%A1%E7%90%86/</guid>
      <description>通过引入spring-boot-starter-actuator，可以使用Spring Boot为我们提供的准生产环境下的应用监控和管理功能。</description>
    </item>
    
    <item>
      <title>15、Spring boot与热部署(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/615spring-boot%E4%B8%8E%E7%83%AD%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/615spring-boot%E4%B8%8E%E7%83%AD%E9%83%A8%E7%BD%B2/</guid>
      <description>在开发中我们修改一个Java文件后想看到效果不得不重启应用，这导致大量时间花费，我们希望不重启应用的情况下，程序可以自动部署（热部署）。有以</description>
    </item>
    
    <item>
      <title>14、Spring boot与分布式(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/614spring-boot%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/614spring-boot%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F/</guid>
      <description>分布式应用 分布式应用（distributed application）指的是应用程序分布在不同计算机上，通过网络来共同完成一项任务的工作方式。</description>
    </item>
    
    <item>
      <title>13、Spring boot与安全(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/613spring-boot%E4%B8%8E%E5%AE%89%E5%85%A8/</link>
      <pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/613spring-boot%E4%B8%8E%E5%AE%89%E5%85%A8/</guid>
      <description>安全 应用程序的两个主要区域是“认证”和“授权”（或者访问控制），这两个主要区域是安全的两个目标。 身份验证意味着确认您自己的身份，而授权意味着</description>
    </item>
    
    <item>
      <title>12、Spring boot与任务(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/612spring-boot%E4%B8%8E%E4%BB%BB%E5%8A%A1/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/612spring-boot%E4%B8%8E%E4%BB%BB%E5%8A%A1/</guid>
      <description>异步任务 在Java应用中，绝大多数情况下都是通过同步的方式来实现交互处理的；但是在处理与第三方系统交互的时候，容易造成响应迟缓的情况，之前大</description>
    </item>
    
    <item>
      <title>11、Spring boot与检索(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/611spring-boot%E4%B8%8E%E6%A3%80%E7%B4%A2/</link>
      <pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/611spring-boot%E4%B8%8E%E6%A3%80%E7%B4%A2/</guid>
      <description>ElasticSearch入门 1. ES的简介 简介 我们的应用经常需要添加检索功能，开源的 ElasticSearch 是目前全文搜索引擎的首选。他可以快速的存储、搜索和分析</description>
    </item>
    
    <item>
      <title>10、Spring Boot与消息(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/610spring-boot%E4%B8%8E%E6%B6%88%E6%81%AF/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/610spring-boot%E4%B8%8E%E6%B6%88%E6%81%AF/</guid>
      <description>消息简介 消息代理规范 JMS（Java Message Service）JAVA消息服务 基于JVM消息代理的规范。ActiveMQ、HornetMQ是JMS实</description>
    </item>
    
    <item>
      <title>9、Spring Boot与缓存(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/609spring-boot%E4%B8%8E%E7%BC%93%E5%AD%98/</link>
      <pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/609spring-boot%E4%B8%8E%E7%BC%93%E5%AD%98/</guid>
      <description>JSR107 Spring缓存抽象 几个重要概念&amp;amp;缓存注解 缓存使用 1. 基本使用步骤 1. 引入spring-boot-starter-cache模块 2. @E</description>
    </item>
    
    <item>
      <title>8、自定义starter(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/608%E8%87%AA%E5%AE%9A%E4%B9%89starter/</link>
      <pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/608%E8%87%AA%E5%AE%9A%E4%B9%89starter/</guid>
      <description>starter： ​ 1、这个场景需要使用到的依赖是什么？ ​ 2、如何编写自动配置 @Configuration //指定这个类是一个配置类 @ConditionalOnXXX //在指定条件成立的情况下自动配置</description>
    </item>
    
    <item>
      <title>7、启动配置原理(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/607%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%8E%9F%E7%90%86/</link>
      <pubDate>Sun, 28 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/607%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%8E%9F%E7%90%86/</guid>
      <description>几个重要的事件回调机制 配置在META-INF/spring.factories ApplicationContextInitializer SpringApplicationRunListener 只需要放在ioc容器中 ApplicationRunner CommandLineRunner 启动流程： 1、创建SpringA</description>
    </item>
    
    <item>
      <title>13、IDEA中Maven的配置和使用(Maven)</title>
      <link>https://yiguan1573.gitee.io/post/523idea%E4%B8%ADmaven%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 27 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/523idea%E4%B8%ADmaven%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/</guid>
      <description>配置 不推荐使用默认的Maven，到官网下载解压后配置到IDEA中 打开设置，找到Maven 选择解压后的Maven文件 更换配置文件 修改本地仓库位</description>
    </item>
    
    <item>
      <title>6、SpringBoot与数据访问(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/606springboot%E4%B8%8E%E6%95%B0%E6%8D%AE%E8%AE%BF%E9%97%AE/</link>
      <pubDate>Sat, 27 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/606springboot%E4%B8%8E%E6%95%B0%E6%8D%AE%E8%AE%BF%E9%97%AE/</guid>
      <description>1、JDBC &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-jdbc&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;mysql&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mysql-connector-java&amp;lt;/artifactId&amp;gt; &amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; spring: datasource: username: root password: 123456 url: jdbc:mysql://192.168.15.22:3306/jdbc driver-class-name: com.mysql.jdbc.Driver 效果： ​ 默认是用org.apache.tomcat.jdbc.pool.DataSourc</description>
    </item>
    
    <item>
      <title>12、聚合(Maven)</title>
      <link>https://yiguan1573.gitee.io/post/522%E8%81%9A%E5%90%88/</link>
      <pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/522%E8%81%9A%E5%90%88/</guid>
      <description>聚合 作用: 一键安装各个模块工程。 配置方式:在一个&amp;quot;总的聚合工程”中配置各个参与聚合的模块 使用方式:在聚合工程的pom.xml上点右</description>
    </item>
    
    <item>
      <title>5、Docker(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/605docker/</link>
      <pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/605docker/</guid>
      <description>1、简介 Docker是一个开源的应用容器引擎；是一个轻量级容器技术； Docker支持将软件编译成一个镜像；然后在镜像中各种软件做好配置，将镜</description>
    </item>
    
    <item>
      <title>11、继承(Maven)</title>
      <link>https://yiguan1573.gitee.io/post/521%E7%BB%A7%E6%89%BF/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/521%E7%BB%A7%E6%89%BF/</guid>
      <description>继承 现状 Hello依赖的junit : 4.0 HelloFriend依赖的junit : 4.0 MakeFriends依赖的junit : 4.9 由于test范围的</description>
    </item>
    
    <item>
      <title>4、Web开发(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/604web%E5%BC%80%E5%8F%91/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/604web%E5%BC%80%E5%8F%91/</guid>
      <description>1、简介 使用SpringBoot； 1）、创建SpringBoot应用，选中我们需要的模块； 2）、SpringBoot已经默认将这些场景配置好</description>
    </item>
    
    <item>
      <title>10、生命周期(Maven)</title>
      <link>https://yiguan1573.gitee.io/post/520%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</link>
      <pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/520%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</guid>
      <description>各个构建环节执行的顺序:不能打乱顺序,必须按照既定的正确顺序来执行。 Maven的核心程序中定义了抽象的生命周期,生命周期中各个阶段的具体任务</description>
    </item>
    
    <item>
      <title>3、日志(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/603%E6%97%A5%E5%BF%97/</link>
      <pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/603%E6%97%A5%E5%BF%97/</guid>
      <description>1、日志框架 小张；开发一个大型系统； ​ 1、System.out.println(&amp;quot;&amp;quot;)；将关键数据打印在控制台；去掉？写</description>
    </item>
    
    <item>
      <title>2、配置文件(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/602%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</link>
      <pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/602%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</guid>
      <description>1、配置文件 SpringBoot使用一个全局的配置文件，配置文件名是固定的； •application.properties •applicat</description>
    </item>
    
    <item>
      <title>9、依赖(Maven)</title>
      <link>https://yiguan1573.gitee.io/post/519%E4%BE%9D%E8%B5%96/</link>
      <pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/519%E4%BE%9D%E8%B5%96/</guid>
      <description>依赖（初级） Maven解析依赖信息时会到本地仓库中查找被依赖的jar包。 对于我们自己开发的Maven工程。使用mvn install命令安装后</description>
    </item>
    
    <item>
      <title>1、Spring Boot 入门(SpringBoot)</title>
      <link>https://yiguan1573.gitee.io/post/601spring-boot-%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/601spring-boot-%E5%85%A5%E9%97%A8/</guid>
      <description>一、Spring Boot 入门 1、Spring Boot 简介 简化Spring应用开发的一个框架； 整个Spring技术栈的一个大整合； J2EE开发的一站式解决</description>
    </item>
    
    <item>
      <title>8、仓库(Maven)</title>
      <link>https://yiguan1573.gitee.io/post/518%E4%BB%93%E5%BA%93/</link>
      <pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/518%E4%BB%93%E5%BA%93/</guid>
      <description>仓库的分类 本地仓库：当前电脑上部署的仓库目录,为当前电脑上所有Maven工程服务 远程仓库 私服:搭建在局域网环境中,为局域网范围内的所有Mav</description>
    </item>
    
    <item>
      <title>7、坐标(Maven)</title>
      <link>https://yiguan1573.gitee.io/post/517%E5%9D%90%E6%A0%87/</link>
      <pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/517%E5%9D%90%E6%A0%87/</guid>
      <description>坐标 数学中的坐标 在平面上，使用X、Y两个向量可以唯一的定位平面中的任何一一个点。 在空间中,使用X、Y. Z三个向量可以唯一的定位空间中的任何一</description>
    </item>
    
    <item>
      <title>6、POM(Maven)</title>
      <link>https://yiguan1573.gitee.io/post/516pom/</link>
      <pubDate>Sat, 20 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/516pom/</guid>
      <description>POM 含义: Project Object Model项目对象模型 pom.xml对于Maven工程是核心配置文件,与构建过程相关的一 切设置都在这个文件中进行配置。重要程度相</description>
    </item>
    
    <item>
      <title>5、关于联网问题(Maven)</title>
      <link>https://yiguan1573.gitee.io/post/515%E5%85%B3%E4%BA%8E%E8%81%94%E7%BD%91%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/515%E5%85%B3%E4%BA%8E%E8%81%94%E7%BD%91%E9%97%AE%E9%A2%98/</guid>
      <description></description>
    </item>
    
    <item>
      <title>4、常用Maven命令(Maven)</title>
      <link>https://yiguan1573.gitee.io/post/514%E5%B8%B8%E7%94%A8maven%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/514%E5%B8%B8%E7%94%A8maven%E5%91%BD%E4%BB%A4/</guid>
      <description>注意 执行与构建过程相关的Maven命令,必须进入pom. xml所在的目录。 与构建过程相关:编译、测试、打包&amp;hellip;&amp;hellip; 常</description>
    </item>
    
    <item>
      <title>3、第一个Maven工程(Maven)</title>
      <link>https://yiguan1573.gitee.io/post/513%E7%AC%AC%E4%B8%80%E4%B8%AAmaven%E5%B7%A5%E7%A8%8B/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/513%E7%AC%AC%E4%B8%80%E4%B8%AAmaven%E5%B7%A5%E7%A8%8B/</guid>
      <description>创建约定的目录结构 为什么要遵守约定的目录结构 Maven要负责我们这个项目的自动化构建,以编译为例, Maven要想自动进行编译,那么它必须知道</description>
    </item>
    
    <item>
      <title>2、Maven的相关概念(Maven)</title>
      <link>https://yiguan1573.gitee.io/post/512maven%E7%9A%84%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/512maven%E7%9A%84%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</guid>
      <description>简介 Maven 是 Apache 软件基金会组织维护的一款自动化构建工具，专注服务于 Java 平台的项目构建和依赖管理。Maven 这个单词的本意是：专家，内行。 构建 构建并不</description>
    </item>
    
    <item>
      <title>1、Maven简介(Maven)</title>
      <link>https://yiguan1573.gitee.io/post/511maven%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/511maven%E7%AE%80%E4%BB%8B/</guid>
      <description>真的需要吗？ Maven 是干什么用的？这是很多同学在刚开始接触Maven 时最大的问题。之所以会提出这个问题，是因为即使不使用 Maven 我们仍然可以进行 B/S 结构项</description>
    </item>
    
    <item>
      <title>31、书城项目第九阶段(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/331%E4%B9%A6%E5%9F%8E%E9%A1%B9%E7%9B%AE%E7%AC%AC%E4%B9%9D%E9%98%B6%E6%AE%B5/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/331%E4%B9%A6%E5%9F%8E%E9%A1%B9%E7%9B%AE%E7%AC%AC%E4%B9%9D%E9%98%B6%E6%AE%B5/</guid>
      <description>使用 AJAX 验证用户名是否可用 UserServlet 程序中 ajaxExistsUsername 方法： regist.jsp 页面中的代码： 使用 AJAX 修改把商品添加到购物车 CartServlet 程序 pages/client/index.jsp 页面 html代码 js代码</description>
    </item>
    
    <item>
      <title>30、AJAX(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/330ajax%E8%AF%B7%E6%B1%82/</link>
      <pubDate>Sat, 13 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/330ajax%E8%AF%B7%E6%B1%82/</guid>
      <description>简介 AJAX 即“Asynchronous Javascript And XML”（异步 JavaScript 和 XML），是指一种创建交互式网页应用的网页开发 技术 ajax 是一种浏览器通过 js 异步发起请求，</description>
    </item>
    
    <item>
      <title>29、JSON(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/329json/</link>
      <pubDate>Fri, 12 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/329json/</guid>
      <description>简介 JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。易于人阅读和编写。同时也易于机器解析和生成。JSON 采用完全独立于语言的文本格式，而且很多语言都提供了</description>
    </item>
    
    <item>
      <title>28、书城第八阶段(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/328%E4%B9%A6%E5%9F%8E%E7%AC%AC%E5%85%AB%E9%98%B6%E6%AE%B5/</link>
      <pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/328%E4%B9%A6%E5%9F%8E%E7%AC%AC%E5%85%AB%E9%98%B6%E6%AE%B5/</guid>
      <description>1、使用 Filter 过滤器拦截/pages/manager/所有内容，实 现权限检查 Filter 代码： web.xml 中的配置： 2、ThreadLocal 的使用 ThreadLocal 的作用，它可以</description>
    </item>
    
    <item>
      <title>27、Filter过滤器(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/327filter%E8%BF%87%E6%BB%A4%E5%99%A8/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/327filter%E8%BF%87%E6%BB%A4%E5%99%A8/</guid>
      <description>简介 Filter 过滤器它是 JavaWeb 的三大组件之一。三大组件分别是：Servlet 程序、Listener 监听器、Filter 过滤器 Filter 过滤器它是 JavaEE 的规范。也就是</description>
    </item>
    
    <item>
      <title>10、JDBC总结(JDBC)</title>
      <link>https://yiguan1573.gitee.io/post/510jdbc%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/510jdbc%E6%80%BB%E7%BB%93/</guid>
      <description>总结 @Test public void testUpdateWithTx() { Connection conn = null; try { //1.获取连接的操作（ //① 手写的连接：JDBCUtils.getConnection(); //② 使用数据库连接</description>
    </item>
    
    <item>
      <title>26、验证码(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/326%E9%AA%8C%E8%AF%81%E7%A0%81/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/326%E9%AA%8C%E8%AF%81%E7%A0%81/</guid>
      <description>表单重复提交有三种常见的情况 提交完表单。服务器使用请求转来进行页面跳转。这个时候，用户按下功能键 F5，就会发起最后一次的请求。 造成表单重复提</description>
    </item>
    
    <item>
      <title>9、Apache-DBUtils实现CRUD操作(JDBC)</title>
      <link>https://yiguan1573.gitee.io/post/509apache-dbutils%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/509apache-dbutils%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/</guid>
      <description>Apache-DBUtils简介 commons-dbutils 是 Apache 组织提供的一个开源 JDBC工具类库，它是对JDBC的简单封装，学习成本极低，并且使用dbutils能极</description>
    </item>
    
    <item>
      <title>23、Cookie(1)(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/323cookie1/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/323cookie1/</guid>
      <description>简介 Cookie 翻译过来是饼干的意思 Cookie 是服务器通知客户端保存键值对的一种技术 客户端有了 Cookie 后，每次请求都发送给服务器 每个 Cookie 的大小不能超过 4kb 创建 Cookie 服务器获</description>
    </item>
    
    <item>
      <title>24、Cookie(2)(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/324cookie2/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/324cookie2/</guid>
      <description>浏览器查看 Cookie 谷歌浏览器如何查看 Cookie 火狐浏览器如何查看 Cookie Cookie 生命控制 Cookie 的生命控制指的是如何管理Cookie什么时候被销毁（删除） setMaxAge() 正数，表示在指定</description>
    </item>
    
    <item>
      <title>25、Session 会话(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/325session-%E4%BC%9A%E8%AF%9D/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/325session-%E4%BC%9A%E8%AF%9D/</guid>
      <description>简介 Session 就一个接口（HttpSession） Session 就是会话。它是用来维护一个客户端和服务器之间关联的一种技术 每个客户端都有自己的一个 Session 会话 Session 会话中</description>
    </item>
    
    <item>
      <title>8、数据库连接池(JDBC)</title>
      <link>https://yiguan1573.gitee.io/post/508%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/508%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</guid>
      <description>JDBC数据库连接池的必要性 在使用开发基于数据库的web程序时，传统的模式基本是按以下步骤： 在主程序（如servlet、beans）中建立数</description>
    </item>
    
    <item>
      <title>22、文件的下载(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/322%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8B%E8%BD%BD/</link>
      <pubDate>Sat, 23 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/322%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8B%E8%BD%BD/</guid>
      <description>简介 下载的常用 API 说明： response.getOutputStream(); servletContext.getResourceAsStream(); servletContext.getMimeType(); response.setContentType(); response.setHeader(&amp;ldquo;Content-Disposition&amp;rdquo;, &amp;ldquo;attachment; fileName=1.jpg&amp;rdquo;); 这个响应头告诉浏览器。这是需要下载的。而 attachment 表示附件，也就是下载的一个文件。fileName=后面， 表示下</description>
    </item>
    
    <item>
      <title>7、DAO及相关实现类(JDBC)</title>
      <link>https://yiguan1573.gitee.io/post/507dao%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%AE%9E%E7%8E%B0%E7%B1%BB/</link>
      <pubDate>Sat, 23 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/507dao%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%AE%9E%E7%8E%B0%E7%B1%BB/</guid>
      <description>简介 DAO：Data Access Object访问数据信息的类和接口，包括了对数据的CRUD（Create、Retrival、Update、Delete</description>
    </item>
    
    <item>
      <title>21、文件的上传(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/321%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8A%E4%BC%A0/</link>
      <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/321%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8A%E4%BC%A0/</guid>
      <description>简介 要有一个 form 标签，method=post 请求 form 标签的 encType 属性值必须为 multipart/form-data 值 在 form 标签中使用 input type=file 添加上传的文件 编写服务器代码（Servlet 程序）</description>
    </item>
    
    <item>
      <title>6、数据库事务(JDBC)</title>
      <link>https://yiguan1573.gitee.io/post/506%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/506%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1/</guid>
      <description>数据库事务介绍 事务：一组逻辑操作单元,使数据从一种状态变换到另一种状态。 事务处理（事务操作）：保证所有事务都作为一个工作单元来执行，即使出现</description>
    </item>
    
    <item>
      <title>20、JSTL 标签库(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/320jstl-%E6%A0%87%E7%AD%BE%E5%BA%93/</link>
      <pubDate>Thu, 21 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/320jstl-%E6%A0%87%E7%AD%BE%E5%BA%93/</guid>
      <description>简介 JSTL 标签库 全称是指 JSP Standard Tag Library JSP 标准标签库。是一个不断完善的开放源代码的 JSP 标签库 EL 表达式主要是为了替换 jsp 中的表达式脚本，而标签库则是为了替换代</description>
    </item>
    
    <item>
      <title>5、批量插入(JDBC)</title>
      <link>https://yiguan1573.gitee.io/post/505%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5/</link>
      <pubDate>Thu, 21 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/505%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5/</guid>
      <description>批量执行SQL语句 当需要成批插入或者更新记录时，可以采用Java的批量更新机制，这一机制允许多条语句一次性提交给数据库批量处理。通常情况下比</description>
    </item>
    
    <item>
      <title>19、EL 表达式器(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/319el-%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/319el-%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>简介 EL 表达式的全称是：Expression Language，是表达式语言 EL 表达式的什么作用：EL 表达式主要是代替 jsp 页面中的表达式脚本在 jsp 页面</description>
    </item>
    
    <item>
      <title>4、操作BLOB类型字段(JDBC)</title>
      <link>https://yiguan1573.gitee.io/post/504%E6%93%8D%E4%BD%9Cblob%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/504%E6%93%8D%E4%BD%9Cblob%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5/</guid>
      <description>MySQL BLOB类型 MySQL中，BLOB是一个二进制大型对象，是一个可以存储大量数据的容器，它能容纳不同大小的数据。 插入BLOB类型的数据必须使</description>
    </item>
    
    <item>
      <title>18、Listener 监听器(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/318listener-%E7%9B%91%E5%90%AC%E5%99%A8/</link>
      <pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/318listener-%E7%9B%91%E5%90%AC%E5%99%A8/</guid>
      <description>简介 Listener 监听器它是 JavaWeb 的三大组件之一。JavaWeb 的三大组件分别是：Servlet 程序、Filter 过滤器、Listener 监听器 Listener 它是 JavaEE 的规</description>
    </item>
    
    <item>
      <title>3、使用PreparedStatement实现CRUD操作(JDBC)</title>
      <link>https://yiguan1573.gitee.io/post/503%E4%BD%BF%E7%94%A8preparedstatement%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/503%E4%BD%BF%E7%94%A8preparedstatement%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/</guid>
      <description>操作和访问数据库 数据库连接被用于向数据库服务器发送命令和 SQL 语句，并接受数据库服务器返回的结果。其实一个数据库连接就是一个Socket连接。 在</description>
    </item>
    
    <item>
      <title>2、获取数据库连接(JDBC)</title>
      <link>https://yiguan1573.gitee.io/post/502%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/502%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/</guid>
      <description>要素一：Driver接口实现类 Driver接口介绍 java.sql.Driver 接口是所有 JDBC 驱动程序需要实现的接口。这个接口是提供给数据库厂商使用的，不同数据库厂商提供</description>
    </item>
    
    <item>
      <title>17、jsp进阶(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/317jsp%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/317jsp%E8%BF%9B%E9%98%B6/</guid>
      <description>jsp 中的out输出和response.getWriter输出的区别 response 中表示响应，我们经常用于设置返回给客户端的内容（输出），out 也是给用户做</description>
    </item>
    
    <item>
      <title>1、JDBC概述(JDBC)</title>
      <link>https://yiguan1573.gitee.io/post/501jdbc%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/501jdbc%E6%A6%82%E8%BF%B0/</guid>
      <description>数据的持久化 持久化(persistence)：把数据保存到可掉电式存储设备中以供之后使用。大多数情况下，特别是企业级应用，数据持久化意味着将</description>
    </item>
    
    <item>
      <title>5、字节码操作(Java)</title>
      <link>https://yiguan1573.gitee.io/post/405%E5%AD%97%E8%8A%82%E7%A0%81%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/405%E5%AD%97%E8%8A%82%E7%A0%81%E6%93%8D%E4%BD%9C/</guid>
      <description>简介 JAVA动态性的两种常见实现方式： 反射 字节码操作 运行时操作字节码可以上我们实现如下功能: 动态生成新的类 动态改变某个类的结构(添加删除/修</description>
    </item>
    
    <item>
      <title>16、jsp对象(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/316jsp%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/316jsp%E5%AF%B9%E8%B1%A1/</guid>
      <description>jsp 九大内置对象 jsp 中的内置对象，是指 Tomcat 在翻译 jsp 页面成为 Servlet 源代码后，内部提供的九大对象，叫内置对象 jsp 四大域对象 四个域对象分别是： pageContext (PageContextImpl 类) 当前 jsp 页</description>
    </item>
    
    <item>
      <title>4、脚本引擎执行JS代码(Java)</title>
      <link>https://yiguan1573.gitee.io/post/404%E8%84%9A%E6%9C%AC%E5%BC%95%E6%93%8E%E6%89%A7%E8%A1%8Cjs%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/404%E8%84%9A%E6%9C%AC%E5%BC%95%E6%93%8E%E6%89%A7%E8%A1%8Cjs%E4%BB%A3%E7%A0%81/</guid>
      <description>简介 脚本引擎介绍 使得Java应用程序可以通过一套固定的接口与各种脚本引擎交互,从而达到在Java平台上调用各种脚本语言的目的。 Java 脚本API是</description>
    </item>
    
    <item>
      <title>15、jsp的三种用法(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/315jsp%E7%9A%84%E4%B8%89%E7%A7%8D%E7%94%A8%E6%B3%95/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/315jsp%E7%9A%84%E4%B8%89%E7%A7%8D%E7%94%A8%E6%B3%95/</guid>
      <description>jsp 头部的 page 指令 jsp 的 page 指令可以修改 jsp 页面中一些重要的属性，或者行为 &amp;lt;%@ page contentType=&amp;quot;text/html;charset=UTF-8&amp;quot; language=&amp;quot;java&amp;quot; %&amp;gt; i.language属性 表示 jsp 翻译后是什么语言文件。暂时只支持 ja</description>
    </item>
    
    <item>
      <title>3、动态编译(Java)</title>
      <link>https://yiguan1573.gitee.io/post/403%E5%8A%A8%E6%80%81%E7%BC%96%E8%AF%91/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/403%E5%8A%A8%E6%80%81%E7%BC%96%E8%AF%91/</guid>
      <description>动态编译简介 动态编译的应用场景 可以做一个浏览器端编写java代码,上传服务器编译和运行的在线评测系统 服务器动态加载某些类文件进行编译 动态编译</description>
    </item>
    
    <item>
      <title>14、jsp简介(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/314jsp%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/314jsp%E7%AE%80%E4%BB%8B/</guid>
      <description>jsp作用 jsp 的全称是 java server pages。Java 的服务器页面 jsp 的主要作用是代替 Servlet 程序回传 html 页面的数据 因为 Servlet 程序回传 html 页面数据是一件非常繁锁的事情</description>
    </item>
    
    <item>
      <title>2、反射机制(Java)</title>
      <link>https://yiguan1573.gitee.io/post/402%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/402%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</guid>
      <description>简介 动态语言：程序运行时,可以改变程序结构或变量类型。典型的语言:，Python、 ruby、javascript等 C，C++, JAVA不是动</description>
    </item>
    
    <item>
      <title>13、JAVA三层架构(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/313java%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/313java%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/</guid>
      <description>JAVA三层架构 分层的目的是为了解耦。解耦就是为了降低代码的耦合度。方便项目后期的维护和升级</description>
    </item>
    
    <item>
      <title>1、Annotation注解(Java)</title>
      <link>https://yiguan1573.gitee.io/post/401.annotation%E6%B3%A8%E8%A7%A3/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/401.annotation%E6%B3%A8%E8%A7%A3/</guid>
      <description>简介 Annotation的作用 不是程序本身,可以对程序作出解释。(这一点, 跟注释没什么区别) 可以被其他程序(此如:编译器等)读取。(注解信息</description>
    </item>
    
    <item>
      <title>12、HttpServletResponse 类(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/312httpservletresponse-%E7%B1%BB-/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/312httpservletresponse-%E7%B1%BB-/</guid>
      <description>HttpServletResponse 类的作用 HttpServletResponse 类和 HttpServletRequest 类一样。每次请求进来，Tomcat 服务器都会创建一个 Response 对象传 递给 Servlet 程序去使用。HttpServletRequest 表示请求</description>
    </item>
    
    <item>
      <title>11、HttpServletRequest 类 (JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/311httpservletrequest-%E7%B1%BB-/</link>
      <pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/311httpservletrequest-%E7%B1%BB-/</guid>
      <description>HttpServletRequest 类的作用 每次只要有请求进入 Tomcat 服务器，Tomcat 服务器就会把请求过来的 HTTP 协议信息解析好封装到 Request 对象中。 然后传递到 service 方法（doGet 和 doP</description>
    </item>
    
    <item>
      <title>10、HTTP协议(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/310http%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/310http%E5%8D%8F%E8%AE%AE/</guid>
      <description>简介 协议是指双方，或多方，相互约定好，大家都需要遵守的规则，叫协议 所谓 HTTP 协议，就是指，客户端和服务器之间通信时，发送的数据，需要遵守的规则，</description>
    </item>
    
    <item>
      <title>8、ServletConfig类(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/308servletconfig-%E7%B1%BB/</link>
      <pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/308servletconfig-%E7%B1%BB/</guid>
      <description>简介 ServletConfig 类从类名上来看，就知道是 Servlet 程序的配置信息类 Servlet 程序和 ServletConfig 对象都是由 Tomcat 负责创建，我们负责使用 Servlet 程序默认是第一次访问的时候创建，Servlet</description>
    </item>
    
    <item>
      <title>9、ServletContext类 (JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/309servletcontext-%E7%B1%BB-/</link>
      <pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/309servletcontext-%E7%B1%BB-/</guid>
      <description>简介 ServletContext 是一个接口，它表示 Servlet 上下文对象 一个 web 工程，只有一个 ServletContext 对象实例 ServletContext 对象是一个域对象 ServletContext 是在 web 工程部署启动的时候创建。在 web 工程停止的时候销毁 域</description>
    </item>
    
    <item>
      <title>6、IDEA中动态web工程的操作 (JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/306idea%E4%B8%AD%E5%8A%A8%E6%80%81web%E5%B7%A5%E7%A8%8B%E7%9A%84%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/306idea%E4%B8%AD%E5%8A%A8%E6%80%81web%E5%B7%A5%E7%A8%8B%E7%9A%84%E6%93%8D%E4%BD%9C/</guid>
      <description>IDEA 整合 Tomcat 服务器 操作的菜单如下：File | Settings | Build, Execution, Deployment | Application Servers 配置Tomcat 安装目录 就可以通过创建一个 Model 查看是不是配置成功 IDEA 中创建动态 web 工程 创建</description>
    </item>
    
    <item>
      <title>7、Servlet技术(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/307servlet-%E6%8A%80%E6%9C%AF-/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/307servlet-%E6%8A%80%E6%9C%AF-/</guid>
      <description>Servlet简介 Servlet 是 JavaEE 规范之一。规范就是接口 Servlet 就 JavaWeb 三大组件之一。三大组件分别是：Servlet 程序、Filter 过滤器、Listener 监</description>
    </item>
    
    <item>
      <title>3、xml解析技术(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/303xml%E8%A7%A3%E6%9E%90%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/303xml%E8%A7%A3%E6%9E%90%E6%8A%80%E6%9C%AF/</guid>
      <description>xml解析技术介绍 不管是html文件还是xml文件它们都是标记型文档，都可以使用w3c组织制定的dom技术来解析 早期JDK为我们提供了两种x</description>
    </item>
    
    <item>
      <title>4、Tomcat简介(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/304tomcat%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/304tomcat%E7%AE%80%E4%BB%8B/</guid>
      <description>JavaWeb概念 什么是 JavaWeb JavaWeb 是指，所有通过 Java 语言编写可以通过浏览器访问的程序的总称，叫 JavaWeb。 JavaWeb 是基于请求和响应来开发的。 什么是请求</description>
    </item>
    
    <item>
      <title>5、Tomcat的使用(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/305tomcat%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/305tomcat%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>安装 找到你需要用的 Tomcat 版本对应的 zip 压缩包，解压到需要安装的目录即可 目录介绍 启动 Tomcat 服务器 找到 Tomcat 目录下的 bin 目录下的 startup.bat 文件，双击，就可以启动 Tomcat 服务器</description>
    </item>
    
    <item>
      <title>2、xml语法(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/302xml%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/302xml%E8%AF%AD%E6%B3%95/</guid>
      <description>文档声明 1. 创建一个xml文件 2. 图书有 id 属性表示唯一标识，书名，有作者，价格的信息 xml注释 html和XML注释一样 &amp;lt;!-- html 注释 --&amp;gt; 元素（标签） 什么</description>
    </item>
    
    <item>
      <title>1、xml简介(JavaWeb)</title>
      <link>https://yiguan1573.gitee.io/post/301xml/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/301xml/</guid>
      <description>JavaWeb技术概览 xml简介 xml 是可扩展的标记性语言 xml 的主要作用有： 用来保存数据，而且这些数据具有自我描述性 它还可以做为项目或者模块的配置</description>
    </item>
    
    <item>
      <title>53、async函数(ES6)</title>
      <link>https://yiguan1573.gitee.io/post/53es6_async%E5%87%BD%E6%95%B0/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/53es6_async%E5%87%BD%E6%95%B0/</guid>
      <description>源自ES2017 概念：真正意义上去解决异步回调的问题，同步流程表达异步操作 本质：Generator的语法糖 语法 async function foo(){ await异步操作; aw</description>
    </item>
    
    <item>
      <title>54、class类详解(ES6)</title>
      <link>https://yiguan1573.gitee.io/post/54es6_class%E7%B1%BB%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/54es6_class%E7%B1%BB%E8%AF%A6%E8%A7%A3/</guid>
      <description>通过class定义类/实现类的继承 在类中通过constructor定义构造方法 通过new来创建类的实例 通过extends来实现类的继承 通过s</description>
    </item>
    
    <item>
      <title>55、字符串，数值，数组，对象的扩展(ES6)</title>
      <link>https://yiguan1573.gitee.io/post/55es6_%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E5%80%BC%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%A9%E5%B1%95/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/55es6_%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E5%80%BC%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%A9%E5%B1%95/</guid>
      <description>字符串扩展 includes(str):判断是否包含指定的字符串 staltsWith(str):判断是否以指定字符串开头 endswith(st</description>
    </item>
    
    <item>
      <title>56、深度克隆(ES6)</title>
      <link>https://yiguan1573.gitee.io/post/56es6_%E6%B7%B1%E5%BA%A6%E5%85%8B%E9%9A%86/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/56es6_%E6%B7%B1%E5%BA%A6%E5%85%8B%E9%9A%86/</guid>
      <description>拷贝数据 基本数据类型：拷贝后会生成一份新的数据，修改拷贝以后的数据不会影响原数据 对象/数组：拷贝后不会生成新的数据，而是拷贝是引用。修改拷贝</description>
    </item>
    
    <item>
      <title>57、set,map容器(ES6)</title>
      <link>https://yiguan1573.gitee.io/post/57es6_setmap%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/57es6_setmap%E5%AE%B9%E5%99%A8/</guid>
      <description>Set容器 无序不可重复的多个value的集合体 方法 Set() Set(array) add(vaLue) delete(value) has(value) clear() Map容器 无序的key不重复的多个key-value的集合体 方法 Map() Map(array) set(key, valu</description>
    </item>
    
    <item>
      <title>58、for of用法详解(ES6)</title>
      <link>https://yiguan1573.gitee.io/post/58es6_for-of%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/58es6_for-of%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3/</guid>
      <description>for(let value of target){}循环遍历 遍历数组 遍历Set 遍历Map 遍历字符串 遍历伪数组</description>
    </item>
    
    <item>
      <title>59、方法介绍(ES7)</title>
      <link>https://yiguan1573.gitee.io/post/59es7_%E6%96%B9%E6%B3%95%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/59es7_%E6%96%B9%E6%B3%95%E4%BB%8B%E7%BB%8D/</guid>
      <description>指数运算符(幂):** Array.prototype.includes(value):判断数组中是否包含指定value</description>
    </item>
    
    <item>
      <title>46、对象的简写方式(ES6)</title>
      <link>https://yiguan1573.gitee.io/post/46es6_%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%AE%80%E5%86%99%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/46es6_%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%AE%80%E5%86%99%E6%96%B9%E5%BC%8F/</guid>
      <description>简化的对象写法 省略同名的属性值 省略方法的function</description>
    </item>
    
    <item>
      <title>47、箭头函数(ES6)</title>
      <link>https://yiguan1573.gitee.io/post/47es6_%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/47es6_%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/</guid>
      <description>作用：定义匿名函数 基本语法 没有参数: () =&amp;gt; console.Log( &amp;lsquo;xxx&amp;rsquo;) 一个参数: i =&amp;gt; i+2 大于一个参数: (i,j) =&amp;gt; i+j 函数体不用大括号:默认返回结果 函数体如果有多个语句，需要用{</description>
    </item>
    
    <item>
      <title>48、三点运算符(ES6)</title>
      <link>https://yiguan1573.gitee.io/post/48es6_%E4%B8%89%E7%82%B9%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/48es6_%E4%B8%89%E7%82%B9%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>rest(可变参数) 用来取代arguments但比arguments灵活,只能是最后部分形参参数 function foo(a,b){ console.log(arguments); arguments.callee();</description>
    </item>
    
    <item>
      <title>49、形参默认值(ES6)</title>
      <link>https://yiguan1573.gitee.io/post/49es6_%E5%BD%A2%E5%8F%82%E9%BB%98%E8%AE%A4%E5%80%BC/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/49es6_%E5%BD%A2%E5%8F%82%E9%BB%98%E8%AE%A4%E5%80%BC/</guid>
      <description>形参的默认值————当不传入参数的时候默认使用形参里的默认值</description>
    </item>
    
    <item>
      <title>50、promise对象(ES6)</title>
      <link>https://yiguan1573.gitee.io/post/50es6_promise%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/50es6_promise%E5%AF%B9%E8%B1%A1/</guid>
      <description>理解 Promise对象: 代表了未来某个将要发生的事件(通常是一个异步操作) 有了promise对象，可以将异步操作以同步的流程表达出来，避免了</description>
    </item>
    
    <item>
      <title>51、Symbol属性(ES6)</title>
      <link>https://yiguan1573.gitee.io/post/51es6_symbol%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/51es6_symbol%E5%B1%9E%E6%80%A7/</guid>
      <description>简介 ES5中对象的属性名都是字符串，容易造成重名，污染环境 概念：ES6中的添加了一种原始数据类型symbol(已有的原始数据类型: String, Number, boolean, null, undefined,</description>
    </item>
    
    <item>
      <title>52、Generator函数(ES6)</title>
      <link>https://yiguan1573.gitee.io/post/52es6_generator%E5%87%BD%E6%95%B0/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/52es6_generator%E5%87%BD%E6%95%B0/</guid>
      <description>简介 概念 ES6提供的解决异步编程的方案之一 Generator函数是一个状态机， 内部封装了不同状态的数据， 用来生成遍历器对象 可暂停函数(惰性求</description>
    </item>
    
    <item>
      <title>45、模板字符串(ES6)</title>
      <link>https://yiguan1573.gitee.io/post/45es6_%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Sun, 03 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/45es6_%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>模板字符串:简化字符串的拼接 模板字符串必须用``包含 变化的部分使用${xxx}定义</description>
    </item>
    
    <item>
      <title>44、变量的解构赋值(ES6)</title>
      <link>https://yiguan1573.gitee.io/post/44es6_%E5%8F%98%E9%87%8F%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/44es6_%E5%8F%98%E9%87%8F%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC/</guid>
      <description>理解：从对象或数组中提取数据，并赋值给变量(多个) 对象的解构赋值：let {n,a} = {n:&amp;lsquo;tom&amp;rsquo;,a:12} 数组的解构赋值：let [a,b] = [1， &amp;lsquo;atguigu&amp;rsquo;]; 用途：给多个形参赋值</description>
    </item>
    
    <item>
      <title>42、函数扩展(ES5)</title>
      <link>https://yiguan1573.gitee.io/post/42es5_%E5%87%BD%E6%95%B0%E6%89%A9%E5%B1%95/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/42es5_%E5%87%BD%E6%95%B0%E6%89%A9%E5%B1%95/</guid>
      <description>Function.prototype.bind(obj) 作用：将函数内的this绑定为bj,并将函数返回 区别bind()与call()和apply() 都能指定函数中的this call()/app</description>
    </item>
    
    <item>
      <title>43、let const关键字(ES6)</title>
      <link>https://yiguan1573.gitee.io/post/43es6_let%E5%92%8Cconst%E5%85%B3%E9%94%AE%E5%AD%97/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/43es6_let%E5%92%8Cconst%E5%85%B3%E9%94%AE%E5%AD%97/</guid>
      <description>let 作用：与var类似用于声明一个变量 特点：在块作用域内有效，不能重复声明，不会预处理，不存在提升 应用：循环遍历加监听，使用let取代var是</description>
    </item>
    
    <item>
      <title>41、数组的扩展(ES5)</title>
      <link>https://yiguan1573.gitee.io/post/41es5_%E6%95%B0%E7%BB%84%E7%9A%84%E6%89%A9%E5%B1%95/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/41es5_%E6%95%B0%E7%BB%84%E7%9A%84%E6%89%A9%E5%B1%95/</guid>
      <description>Array.prototype.indexOf(value):得到值在数组中的第一个下标 Array.prototype.lastIndexO</description>
    </item>
    
    <item>
      <title>40、Object对象方法扩展(ES5)</title>
      <link>https://yiguan1573.gitee.io/post/40es5_object%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95%E6%89%A9%E5%B1%95/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/40es5_object%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95%E6%89%A9%E5%B1%95/</guid>
      <description>Object.create(prototype, [descriptors]) 作用：以指定对象为原型创建新的对象，为新的对象指定新的属性，并对属性进行描述 value:指定值 writable:标识当前属性值是否是可修</description>
    </item>
    
    <item>
      <title>39、严格模式(ES5)</title>
      <link>https://yiguan1573.gitee.io/post/39es5_%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/39es5_%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F/</guid>
      <description>理解 除了正常运行模式(混杂模式)，ES5添加了第二种运行模式:”严格模式”(strict mode) 顾名思义，这种模式使得Javascript在更严格</description>
    </item>
    
    <item>
      <title>12、jQuery插件开发(jQuery)</title>
      <link>https://yiguan1573.gitee.io/post/212jquery%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</link>
      <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/212jquery%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</guid>
      <description>颜色插件 animate动画不会改变背景颜色，需要使用插件 插件就是用来做扩展功能的 jQuery插件库: jq22.com 省市联动插件 UI插件 jQuery UI 封装插件 给jQ</description>
    </item>
    
    <item>
      <title>11、jQuery补充知识点(jQuery)</title>
      <link>https://yiguan1573.gitee.io/post/211jquery%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86%E7%82%B9/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/211jquery%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86%E7%82%B9/</guid>
      <description>链式编程 通常情况下,只有设置操作才能把链式编程延续下去。因为获取操作的时候,会返回获取到的相应的值,无法返回jQuery对象 each方法 jQ</description>
    </item>
    
    <item>
      <title>10、jQuery事件机制(jQuery)</title>
      <link>https://yiguan1573.gitee.io/post/210jquery%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/210jquery%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/</guid>
      <description>on注册事件 jQuery1.7之后, jQuery用on统一了 所有事件的处理方法 on注册简单事件，不支持动态注册 on注册事件委托，支持动态注册</description>
    </item>
    
    <item>
      <title>9、jQuery尺寸和位置操作(jQuery)</title>
      <link>https://yiguan1573.gitee.io/post/209jquery%E5%B0%BA%E5%AF%B8%E5%92%8C%E4%BD%8D%E7%BD%AE%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/209jquery%E5%B0%BA%E5%AF%B8%E5%92%8C%E4%BD%8D%E7%BD%AE%E6%93%8D%E4%BD%9C/</guid>
      <description>宽高 width()和height()设置或者获取高度,不包括内边距、边框和外边距 获取页面可视区的宽高 innerWidth/innerHeig</description>
    </item>
    
    <item>
      <title>8、jQuery属性操作(jQuery)</title>
      <link>https://yiguan1573.gitee.io/post/208jquery%E5%B1%9E%E6%80%A7%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/208jquery%E5%B1%9E%E6%80%A7%E6%93%8D%E4%BD%9C/</guid>
      <description>attr操作 attr()，设置获取属性 removeAttr()，移除属性 操作布尔类型的属性 原生js设置checked属性，设置为true或者</description>
    </item>
    
    <item>
      <title>7、jQuery节点操作(jQuery)</title>
      <link>https://yiguan1573.gitee.io/post/207jquery%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/207jquery%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C/</guid>
      <description>创建节点 原生js中创建节点:document.write();innerHTML; document.createElement ( ) ; jQuery创建节点的方法html()和$()方法</description>
    </item>
    
    <item>
      <title>6、jQuery动画(jQuery)</title>
      <link>https://yiguan1573.gitee.io/post/206jquery%E5%8A%A8%E7%94%BB/</link>
      <pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/206jquery%E5%8A%A8%E7%94%BB/</guid>
      <description>三组基本动画 显示(show)与隐藏(hide)是一组动画 滑入(slideDown)与滑出(slideUp)与切换(slideToggle) ,</description>
    </item>
    
    <item>
      <title>5、jQuery样式操作(jQuery)</title>
      <link>https://yiguan1573.gitee.io/post/205jquery%E6%A0%B7%E5%BC%8F%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/205jquery%E6%A0%B7%E5%BC%8F%E6%93%8D%E4%BD%9C/</guid>
      <description>Class类操作 添加类addClass(类名) 移除类removeClass(类名) 判断类 切换类</description>
    </item>
    
    <item>
      <title>4、jQuery选择器(jQuery)</title>
      <link>https://yiguan1573.gitee.io/post/204jquery%E9%80%89%E6%8B%A9%E5%99%A8/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/204jquery%E9%80%89%E6%8B%A9%E5%99%A8/</guid>
      <description>基本选择器 层次选择器 过滤选择器 筛选选择器 mouseenter事件和mouseleave事件 mouseover事件在鼠标移动到选取的元素及其子</description>
    </item>
    
    <item>
      <title>3、jQuery基础2(jQuery)</title>
      <link>https://yiguan1573.gitee.io/post/203jquery%E5%9F%BA%E7%A1%802/</link>
      <pubDate>Sat, 18 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/203jquery%E5%9F%BA%E7%A1%802/</guid>
      <description>设置获取文本内容 text(),获取和设置文本的 获取文本：text()方法不给参数 获取id为div1这个标签的文本会获取到这个标签中所有的文本</description>
    </item>
    
    <item>
      <title>1、jQuery简介(jQuery)</title>
      <link>https://yiguan1573.gitee.io/post/201jquery%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/201jquery%E7%AE%80%E4%BB%8B/</guid>
      <description>原生js缺陷 入口函数（window.onload）只能有一个，如果有多个，后面的会将前面的给覆盖掉 原生js的API名字比较复杂 容错性比较差，</description>
    </item>
    
    <item>
      <title>2、jQuery基础1(jQuery)</title>
      <link>https://yiguan1573.gitee.io/post/202jquery%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/202jquery%E5%9F%BA%E7%A1%80/</guid>
      <description>入口函数 写法一 $(document).ready(function(){ }); 写法二 $(function(){ }); jQuery入口函数和window.onload入口函数的区别 jQuery入口函数可以写多个 执行时机不同: jQu</description>
    </item>
    
    <item>
      <title>38、线程机制与事件机制(JS高级)</title>
      <link>https://yiguan1573.gitee.io/post/38%E7%BA%BF%E7%A8%8B%E6%9C%BA%E5%88%B6%E4%B8%8E%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/38%E7%BA%BF%E7%A8%8B%E6%9C%BA%E5%88%B6%E4%B8%8E%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/</guid>
      <description>进程与线程 应用程序必须运行在某个进程的某个线程上 一个进程中至少有一个运行的线程:主线程，进程启动后自动创建 一个进程中也可以同时运行多个线程，</description>
    </item>
    
    <item>
      <title>37、继承模式(JS高级)</title>
      <link>https://yiguan1573.gitee.io/post/37%E7%BB%A7%E6%89%BF%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/37%E7%BB%A7%E6%89%BF%E6%A8%A1%E5%BC%8F/</guid>
      <description>原型链继承 步骤 定义父类型构造函数 给父类型的原型添加方法 定义子类型的构造函数 创建父类型的对象赋值给子类型的原型 将子类型原型的构造属性设置为子类</description>
    </item>
    
    <item>
      <title>36、对象创建模型(JS高级)</title>
      <link>https://yiguan1573.gitee.io/post/36%E5%AF%B9%E8%B1%A1%E5%88%9B%E5%BB%BA%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Tue, 14 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/36%E5%AF%B9%E8%B1%A1%E5%88%9B%E5%BB%BA%E6%A8%A1%E5%9E%8B/</guid>
      <description>Object构造模型 套路:先创建空bject对象，再动态添加属性/方法 适用场景:起始时不确定对象内部数据 问题:语句太多 对象字面量 套路:使用{</description>
    </item>
    
    <item>
      <title>35、闭包(JS高级)</title>
      <link>https://yiguan1573.gitee.io/post/35%E9%97%AD%E5%8C%85/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/35%E9%97%AD%E5%8C%85/</guid>
      <description>闭包的简介 当一个嵌套的内部(子)函数引用了嵌套的外部(父)函数的变量(函数)时，就产生了闭包 理解：闭包是嵌套的内部函数 产生闭包的条件:函数嵌</description>
    </item>
    
    <item>
      <title>34、作用域与作用域链(JS高级)</title>
      <link>https://yiguan1573.gitee.io/post/34%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%B8%8E%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/34%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%B8%8E%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE/</guid>
      <description>作用域与作用域链 作用域是静态的，在编写时就确定了 分类 全局作用域 函数作用域 块作用域（ES6） 作用：隔离变量，不同作用域下同名变量不会发生冲突</description>
    </item>
    
    <item>
      <title>33、执行上下文与执行上下文栈(JS高级)</title>
      <link>https://yiguan1573.gitee.io/post/33%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E4%B8%8E%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%88/</link>
      <pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/33%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E4%B8%8E%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%88/</guid>
      <description>变量提升和函数提升 变量声明提升:通过var定义(声明)的变量，在定义语句之前就可以访问到 函数声明提升:通过function声明的函数，在之前</description>
    </item>
    
    <item>
      <title>32、原型与原型链(JS高级)</title>
      <link>https://yiguan1573.gitee.io/post/32%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/32%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE/</guid>
      <description>函数的prototype 每个函数都有一个prototype属性， 它默认指向一个object空对象(即称为:原型对象) 原型对象中有一个属性co</description>
    </item>
    
    <item>
      <title>31、JSON(JS)</title>
      <link>https://yiguan1573.gitee.io/post/31json/</link>
      <pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/31json/</guid>
      <description>简介 JS中的对象只有JS自己认识，其他的语言都不认识 JSON就是一个特殊格式的字符串，这个字符串可以被任意的语言所识别，并且可以转换为任意语</description>
    </item>
    
    <item>
      <title>30、类的操作(JS)</title>
      <link>https://yiguan1573.gitee.io/post/30%E7%B1%BB%E7%9A%84%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/30%E7%B1%BB%E7%9A%84%E6%93%8D%E4%BD%9C/</guid>
      <description>通过style属性来修改元素的样式，每修改一 个样式，浏览器就需要重新渲染一次页面，这样的执行的性能是比较差的 当修改多个样式时并不方便 可以通过</description>
    </item>
    
    <item>
      <title>29、定时器(JS)</title>
      <link>https://yiguan1573.gitee.io/post/29%E5%AE%9A%E6%97%B6%E5%99%A8/</link>
      <pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/29%E5%AE%9A%E6%97%B6%E5%99%A8/</guid>
      <description>定时器简介 setInterval()，定时调用，可以将一个函数， 每隔一段时间执行一次 参数： 回调函数，该函数会每隔一段时间被调用一次 每次调用间</description>
    </item>
    
    <item>
      <title>28、BOM(JS)</title>
      <link>https://yiguan1573.gitee.io/post/28bom/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/28bom/</guid>
      <description>BOM（浏览器对象模型） BOM可以使我们通过JS来操作浏览器 在BOM中为我们提供了一组对象，用来完成对浏览器的操作 BOM对象 Window——</description>
    </item>
    
    <item>
      <title>27、键盘的事件(JS)</title>
      <link>https://yiguan1573.gitee.io/post/27%E9%94%AE%E7%9B%98%E7%9A%84%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/27%E9%94%AE%E7%9B%98%E7%9A%84%E4%BA%8B%E4%BB%B6/</guid>
      <description>语法 键盘事件 onkeydown——按键被按下；如果一直按着某个按键不松手，则事件会一直触发 onkeyup——按键被松开 键盘事件一般都会绑定给</description>
    </item>
    
    <item>
      <title>26、滚轮的事件(JS)</title>
      <link>https://yiguan1573.gitee.io/post/26%E6%BB%9A%E8%BD%AE%E7%9A%84%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/26%E6%BB%9A%E8%BD%AE%E7%9A%84%E4%BA%8B%E4%BB%B6/</guid>
      <description>语法 onmousewheel鼠标滚轮滚动的事件，会在滚轮滚动时触发，但是火狐不支持该属性 在火狐中需要使用DOMMouseScroll来绑定滚</description>
    </item>
    
    <item>
      <title>25、事件的练习：拖拽(JS)</title>
      <link>https://yiguan1573.gitee.io/post/25%E4%BA%8B%E4%BB%B6%E7%9A%84%E7%BB%83%E4%B9%A0%E6%8B%96%E6%8B%BD/</link>
      <pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/25%E4%BA%8B%E4%BB%B6%E7%9A%84%E7%BB%83%E4%B9%A0%E6%8B%96%E6%8B%BD/</guid>
      <description>拖拽的流程 当鼠标在被拖拽元素上按下时，开始拖拽onmousedown 当鼠标移动时被拖拽元素跟随鼠标移动onmousemove 当鼠标松开时，被</description>
    </item>
    
    <item>
      <title>24、事件(JS)</title>
      <link>https://yiguan1573.gitee.io/post/24%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Thu, 26 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/24%E4%BA%8B%E4%BB%B6/</guid>
      <description>事件对象 当响应函数被调用时，浏览器每次都会将一个事件对象作为实参传递进响应函数中，这个事件对象中封装了当前事件的相关信息，比如：鼠标的坐标，</description>
    </item>
    
    <item>
      <title>23、DOM对CSS的操作(JS)</title>
      <link>https://yiguan1573.gitee.io/post/23dom%E5%AF%B9css%E7%9A%84%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 24 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/23dom%E5%AF%B9css%E7%9A%84%E6%93%8D%E4%BD%9C/</guid>
      <description>读取和修改内联样式 使用style属性来操作元素的内联样式 读取内联样式 语法：元素.style.样式名 例子 元素.style.width 元素.st</description>
    </item>
    
    <item>
      <title>19、Shell编程(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/119shell%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/119shell%E7%BC%96%E7%A8%8B/</guid>
      <description>介绍 Linux 运维工程师在进行服务器集群管理时，需要编写 Shell 程序来进行服务器管理。 对于 JavaEE 和 Python 程序员来说，工作的需要，你的老大会要求你编写一些 Shell 脚本进行</description>
    </item>
    
    <item>
      <title>18、JavaEE定制篇搭建JavaEE环境(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/118javaee-%E5%AE%9A%E5%88%B6%E7%AF%87-%E6%90%AD%E5%BB%BA-javaee-%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/118javaee-%E5%AE%9A%E5%88%B6%E7%AF%87-%E6%90%AD%E5%BB%BA-javaee-%E7%8E%AF%E5%A2%83/</guid>
      <description>概述 示意图 安装JDK 安装JDK 先将软件通过 xftp5 上传到 /opt下 解压缩到 /opt 配置环境变量的配置文件 vim /etc/profile #JAVA_HOME export JAVA_HOME=/opt/jdk1.8.0_161 export JRE_HOME=${JAVA_HOME}/jre export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib:$CLASSPATH export JAVA_PATH=${JAVA_HOME}/bin:${JRE_HOME}/bin export PATH=$PATH:${JAVA_PATH} 需要如下操作才能生效 在</description>
    </item>
    
    <item>
      <title>17、RPM和YUM(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/117rpm%E5%92%8Cyum/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/117rpm%E5%92%8Cyum/</guid>
      <description>rpm 包的管理 介绍 一种用于互联网下载包的打包及安装工具，它包含在某些 Linux 分发版中。它生成具有.RPM 扩展名的文件。RPM 是 RedHat Package Manager（Re</description>
    </item>
    
    <item>
      <title>16、进程管理(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/116%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/116%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</guid>
      <description>进程的基本介绍 在 LINUX 中，每个执行的程序（代码）都称为一个进程。每一个进程都分配一个ID号 每一个进程，都会对应一个父进程，而这个父进程可以复制多</description>
    </item>
    
    <item>
      <title>15、网络配置(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/115%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/115%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</guid>
      <description>linux 网络环境配置 第一种方法(自动获取) 缺点: linux 启动后会自动获取 IP,缺点是每次自动获取的 ip 地址可能不一样。这个不适用于做服务器，因为我们的服务</description>
    </item>
    
    <item>
      <title>14、磁盘和分区(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/114%E7%A3%81%E7%9B%98%E5%92%8C%E5%88%86%E5%8C%BA/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/114%E7%A3%81%E7%9B%98%E5%92%8C%E5%88%86%E5%8C%BA/</guid>
      <description>分区基础知识 分区的方式 mbr分区 最多支持四个主分区 系统只能安装在主分区 扩展分区要占一个主分区 MBR 最大只支持 2TB，但拥有最好的兼容性 gtp分区</description>
    </item>
    
    <item>
      <title>10、搜索查找类(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/110%E6%90%9C%E7%B4%A2%E6%9F%A5%E6%89%BE%E7%B1%BB/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/110%E6%90%9C%E7%B4%A2%E6%9F%A5%E6%89%BE%E7%B1%BB/</guid>
      <description>find指令 find 指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件或者目录显示在终端 基本语法 find [搜索范围] [选项] 选项说明 案例 按文件</description>
    </item>
    
    <item>
      <title>11、压缩和解压缩(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/111%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B%E7%BC%A9/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/111%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B%E7%BC%A9/</guid>
      <description>gzip/gunzip指令 gzip 用于压缩文件，gunzip用于解压的 基本语法 gzip 文件 （功能描述：压缩文件，只能将文件压缩为*.gz 文件） gunzip 文件.g</description>
    </item>
    
    <item>
      <title>12、组管理和权限管理(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/112%E7%BB%84%E7%AE%A1%E7%90%86%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/112%E7%BB%84%E7%AE%A1%E7%90%86%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</guid>
      <description>Linux组基本介绍 在 linux 中的每个用户必须属于一个组，不能独立于组外。在 linux 中每个文件有所有者、所在组、其它组的概念 文件/目录所有者 一般为文件的</description>
    </item>
    
    <item>
      <title>13、crond任务调度(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/113crond%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/113crond%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/</guid>
      <description>原理示意图 crontab 进行 定时任务的设置 概述 任务调度：是指系统在某个时间执行的特定的命令或程序 任务调度分类 系统工作：有些重要的工作必须周而复始地执行。</description>
    </item>
    
    <item>
      <title>9、时间日期类(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/109%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E7%B1%BB/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/109%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E7%B1%BB/</guid>
      <description>date 指令-显示当前日期 基本语法 date （功能描述：显示当前时间） date +%Y （功能描述：显示当前年份） date +%m （功能描述：显示当前月份） date +%d （功能描述：显示当前</description>
    </item>
    
    <item>
      <title>4、关机重启注销(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/104%E5%85%B3%E6%9C%BA%E9%87%8D%E5%90%AF%E6%B3%A8%E9%94%80/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/104%E5%85%B3%E6%9C%BA%E9%87%8D%E5%90%AF%E6%B3%A8%E9%94%80/</guid>
      <description>关机重启命令 shutdown shutdown -h now ，表示立即关机 shutdown -h 1 ，表示 1 分钟后关机 shutdown -r now: ，立即重启 halt，直接使用，效果等价于关机 reboot，重启系统 sync，</description>
    </item>
    
    <item>
      <title>5、用户管理(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/105%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/105%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</guid>
      <description>创建用户指定密码 基本介绍 Linux系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以</description>
    </item>
    
    <item>
      <title>6、运行级别和找回root密码(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/106%E8%BF%90%E8%A1%8C%E7%BA%A7%E5%88%AB%E5%92%8C%E6%89%BE%E5%9B%9Eroot%E5%AF%86%E7%A0%81/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/106%E8%BF%90%E8%A1%8C%E7%BA%A7%E5%88%AB%E5%92%8C%E6%89%BE%E5%9B%9Eroot%E5%AF%86%E7%A0%81/</guid>
      <description>指令运行级别 运行级别说明 0：关机 1：单用户【找回丢失密码】 2：多用户状态没有网络服务 3：多用户状态有网络服务 4：系统未使用保留给用户 5：图形</description>
    </item>
    
    <item>
      <title>7、帮助指令(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/107%E5%B8%AE%E5%8A%A9%E6%8C%87%E4%BB%A4/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/107%E5%B8%AE%E5%8A%A9%E6%8C%87%E4%BB%A4/</guid>
      <description>使用man获得帮助信息 基本语法 man [命令或配置文件]（功能描述：获得帮助信息） help指令 基本语法 help 命令 （功能描述：获得 shell 内置命令的帮助信息）</description>
    </item>
    
    <item>
      <title>8、文件目录类(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/108%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E7%B1%BB/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/108%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E7%B1%BB/</guid>
      <description>pwd指令 基本语法 pwd 功能描述：显示当前工作目录的绝对路径 ls指令 基本语法 ls [选项] [目录或是文件] -a，显示当前目录所有的文件和目录，包括隐</description>
    </item>
    
    <item>
      <title>21、DOM查询(JS)</title>
      <link>https://yiguan1573.gitee.io/post/21dom%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/21dom%E6%9F%A5%E8%AF%A2/</guid>
      <description>通过具体的元素节点来查询 元素.getElementsByTagName()，通过标签名查询当前元素的指定后代元素 元素.childNodes，</description>
    </item>
    
    <item>
      <title>22、DOM增删(JS)</title>
      <link>https://yiguan1573.gitee.io/post/22dom%E5%A2%9E%E5%88%A0/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/22dom%E5%A2%9E%E5%88%A0/</guid>
      <description>DOM修改 document.createElement()，可以根据标签名创建一个元素节点对象 document.createTextNode</description>
    </item>
    
    <item>
      <title>15、Date对象(JS)</title>
      <link>https://yiguan1573.gitee.io/post/15date%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/15date%E5%AF%B9%E8%B1%A1/</guid>
      <description>Data对象创建 日期的对象，在JS中通过Date对象来表示一个时间 创建一个当前的时间对象 var d = new Date(); console.log(d);//Thu Feb 13 2020 16:56:50 GMT+0800 (中国标准时间) 创建一个指定的</description>
    </item>
    
    <item>
      <title>16、Math(JS)</title>
      <link>https://yiguan1573.gitee.io/post/16math/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/16math/</guid>
      <description>简介 Math属于一个工具类，它不需要我们创建对象，它里边封装了属性运算相关的常量和方法，我们可以直接使用它来进行数学运算相关的操作 方法 Mat</description>
    </item>
    
    <item>
      <title>17、包装类(JS)</title>
      <link>https://yiguan1573.gitee.io/post/17%E5%8C%85%E8%A3%85%E7%B1%BB/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/17%E5%8C%85%E8%A3%85%E7%B1%BB/</guid>
      <description>在JS中为我们提供了三个包装类：String() Boolean() Number()，通过这三个包装类可以创建基本数据类型的对象 var num = new Number(2); var str = new String(&amp;quot;hello&amp;quot;); var bool = new Boolean(true);</description>
    </item>
    
    <item>
      <title>18、字符串的方法(JS)</title>
      <link>https://yiguan1573.gitee.io/post/18%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/18%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>在底层字符串都是以字符数组的形式保存的 length，获取字符串的长度 var str=&amp;quot;hello world&amp;quot;; console.log(str.length); console.log(str[4]); charAt()，根据索引获取指定的字符 charCodeAt(</description>
    </item>
    
    <item>
      <title>19、正则表达式(JS)</title>
      <link>https://yiguan1573.gitee.io/post/19%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/19%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>正则表达式的简介 正则用来定义一些字符串的规则，程序可以根据这些规则来判断一个字符串是否符合规则，也可以将一个字符串中符合规则的内容提取出来 创</description>
    </item>
    
    <item>
      <title>20、DOM(JS)</title>
      <link>https://yiguan1573.gitee.io/post/20dom/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/20dom/</guid>
      <description>DOM（Document Object Model）简介 文档对象模型，通过DOM可以来任意来修改网页中各个内容 文档——指网页，一个网页就是一个文档 对象——</description>
    </item>
    
    <item>
      <title>14、函数的方法(JS)</title>
      <link>https://yiguan1573.gitee.io/post/14%E5%87%BD%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/14%E5%87%BD%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>call()和apply() 当对函数调用call()和apply()都会调用函数执行 function fun(){ alert(this); } fun.apply(); fun.call(); fun(); var obj={}; fun.apply(obj); fun.call(obj); 通过两个方法可以直接调用函数，并且</description>
    </item>
    
    <item>
      <title>10、函数2(JS)</title>
      <link>https://yiguan1573.gitee.io/post/10%E5%87%BD%E6%95%B02/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/10%E5%87%BD%E6%95%B02/</guid>
      <description>使用工厂方法创建对象 使用工厂方法创建的对象，使用的构造函数都是Object，所以创建的对象都是Object这个类型，导致我们无法区分多种不同</description>
    </item>
    
    <item>
      <title>11、toString()(JS)</title>
      <link>https://yiguan1573.gitee.io/post/11tostring/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/11tostring/</guid>
      <description>toString() 当我们直接在页面中打印一个对象时，实际上是输出对象的toString()方法的返回值 function Person(name,age){ this.name = name; this.age = age; } var per=new Person(&amp;quot;孙悟空</description>
    </item>
    
    <item>
      <title>12、垃圾回收(JS)</title>
      <link>https://yiguan1573.gitee.io/post/12%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/12%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</guid>
      <description>垃圾回收（GC） 程序运行过程中会产生垃圾，垃圾积攒过多，会导致程序运行的速度变慢 当一个对象没有设置任何变量或属性对它进行引用，此时将无法操作</description>
    </item>
    
    <item>
      <title>13、数组(JS)</title>
      <link>https://yiguan1573.gitee.io/post/13%E6%95%B0%E7%BB%84/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/13%E6%95%B0%E7%BB%84/</guid>
      <description>数组简介 数组也是一个对象 创建数组对象 var arr = new Array();//或者var arr = []; 向数组中添加元素 数组对象[索引] = 值; arr[0] = 123; arr[1] = &amp;quot;hello&amp;quot;; 使用len</description>
    </item>
    
    <item>
      <title>3、vi和vim(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/103vi%E5%92%8Cvim/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/103vi%E5%92%8Cvim/</guid>
      <description>vi和vim介绍 所有的 Linux 系统都会内建 vi 文本编辑器，Vim 具有程序编辑的能力，可以看做是 Vi 的增强版本，可以主动的以字体颜色辨别语法的正确性，方</description>
    </item>
    
    <item>
      <title>1、CentOS基础(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/101centos%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/101centos%E5%9F%BA%E7%A1%80/</guid>
      <description>虚拟机的网络连接三种形式 桥连接：Linux可以和其他的系统通信，但是可能造成IP冲突 NAT：Linux可以访问外网，不会造成IP地址冲突 主机</description>
    </item>
    
    <item>
      <title>2、远程操作(Linux)</title>
      <link>https://yiguan1573.gitee.io/post/102%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/102%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C/</guid>
      <description>远程登录Linux需要的软件 XShell远程连接配置 XFTP 是一个基于 windows 平台的功能强大的 SFTP、FTP 文件传输软件。使用了 Xftp 以后，windows</description>
    </item>
    
    <item>
      <title>9、函数1(JS)</title>
      <link>https://yiguan1573.gitee.io/post/9%E5%87%BD%E6%95%B01/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/9%E5%87%BD%E6%95%B01/</guid>
      <description>函数（function）的简介 函数也是对象，函数中可以封装一些功能（代码） 创建并调用一个函数对象 var fun = new Function(&amp;quot;con</description>
    </item>
    
    <item>
      <title>7、流程控制语句(JS)</title>
      <link>https://yiguan1573.gitee.io/post/7%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/7%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</guid>
      <description>条件判断语句 条件判断语句也称为if语句 语法一： if(条件表达式){ 语句... } - 执行流程： if语句执行时，会先对条件表达式进行求值判断， 如果</description>
    </item>
    
    <item>
      <title>8、对象(JS)</title>
      <link>https://yiguan1573.gitee.io/post/8%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/8%E5%AF%B9%E8%B1%A1/</guid>
      <description>对象的简介 对象是一种复合数据类型，在对象中可以保存多个不同数据类型的属性 对象的分类 内建对象：由MS标准定义的对象，在任何的ES的实现中都可以</description>
    </item>
    
    <item>
      <title>4、强制类型转换(JS)</title>
      <link>https://yiguan1573.gitee.io/post/4%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/4%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</guid>
      <description>将其他的数据类型转换为Strig 调用被转换数据类型的toString()方法，该方法不会影响到原变量，它会将转换的结果返回；但是null和u</description>
    </item>
    
    <item>
      <title>5、运算符(JS)</title>
      <link>https://yiguan1573.gitee.io/post/5%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/5%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>算数运算符 字符串相加相当于将两个字符串拼接为一个字符串，与Java相同 任何值与字符串做加法运算都会被转换为字符串后再拼串 var a = &amp;quot;123&amp;quot; + 1;//结</description>
    </item>
    
    <item>
      <title>6、Unicode编码表(JS)</title>
      <link>https://yiguan1573.gitee.io/post/6unicode%E7%BC%96%E7%A0%81%E8%A1%A8/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/6unicode%E7%BC%96%E7%A0%81%E8%A1%A8/</guid>
      <description>在字符串中使用转义字符输入Unicode编码： \u四位编码 console.log(&amp;quot;\u0031&amp;quot;); 在网页中使用Unicode编码： &amp;amp;#编码 这里的编码为10进制数 &amp;lt;h1&amp;gt;&amp;amp;#2340&amp;lt;/h1&amp;gt;</description>
    </item>
    
    <item>
      <title>3、基本数据类型(JS)</title>
      <link>https://yiguan1573.gitee.io/post/3%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/3%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>数据类型 数据类型指的就是字面量的类型 在JS中一共六种数据类型 Number 数值 Boolean 布尔值 Null 空值 Undefined 未定义 Object 对象 String 字符串 其中String、Number、Boo</description>
    </item>
    
    <item>
      <title>2、变量(JS)</title>
      <link>https://yiguan1573.gitee.io/post/2%E5%8F%98%E9%87%8F/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/2%E5%8F%98%E9%87%8F/</guid>
      <description>字面量和变量 字面量 都是一些不可改变的量，比如：1 2 3，字面量可以直接使用字面量 变量 可以保存字面量，一般使用变量保存字面量 声明变量 在JS中使用</description>
    </item>
    
    <item>
      <title>1、JS语法基础(JS)</title>
      <link>https://yiguan1573.gitee.io/post/1js%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1js%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</guid>
      <description>JS的Hello World 该函数控制浏览器弹出警告框 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt; &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; alert(&amp;quot;Hello World&amp;quot;); &amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 该函数可以向body中输出内容 document.write(&amp;quot;Hello World&amp;quot;); 该函数可以向控制台输出一个内容</description>
    </item>
    
    <item>
      <title>4、毕业设计（拼车app后端）</title>
      <link>https://yiguan1573.gitee.io/post/823%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E6%8B%BC%E8%BD%A6app%E5%90%8E%E7%AB%AF/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/823%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E6%8B%BC%E8%BD%A6app%E5%90%8E%E7%AB%AF/</guid>
      <description>数据库保存emoji表情 问题描述：java.sql.SQLException: Incorrect string value: &amp;lsquo;\xF0\x9F\x92\xAA&amp;rdqu</description>
    </item>
    
  </channel>
</rss>