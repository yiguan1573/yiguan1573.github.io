<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 亿观的博客</title>
    <link>https://yiguan1573.github.io/post/</link>
    <description>Recent content in Posts on 亿观的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 22 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://yiguan1573.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>1、Spring Boot 入门(SpringBoot)</title>
      <link>https://yiguan1573.github.io/post/601spring-boot-%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/601spring-boot-%E5%85%A5%E9%97%A8/</guid>
      <description>**一、**Spring Boot 入门 1、Spring Boot 简介 简化Spring应用开发的一个框架； 整个Spring技术栈的一个大整合； J2EE开发的一</description>
    </item>
    
    <item>
      <title>31、书城项目第九阶段(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/331%E4%B9%A6%E5%9F%8E%E9%A1%B9%E7%9B%AE%E7%AC%AC%E4%B9%9D%E9%98%B6%E6%AE%B5/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/331%E4%B9%A6%E5%9F%8E%E9%A1%B9%E7%9B%AE%E7%AC%AC%E4%B9%9D%E9%98%B6%E6%AE%B5/</guid>
      <description>使用 AJAX 验证用户名是否可用 UserServlet 程序中 ajaxExistsUsername 方法： regist.jsp 页面中的代码： 使用 AJAX 修改把商品添加到购物车 CartServlet 程序 pages/client/index.jsp 页面 html代码 js代码</description>
    </item>
    
    <item>
      <title>30、AJAX(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/330ajax%E8%AF%B7%E6%B1%82/</link>
      <pubDate>Sat, 13 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/330ajax%E8%AF%B7%E6%B1%82/</guid>
      <description>简介 AJAX 即“Asynchronous Javascript And XML”（异步 JavaScript 和 XML），是指一种创建交互式网页应用的网页开发 技术 ajax 是一种浏览器通过 js 异步发起请求，</description>
    </item>
    
    <item>
      <title>29、JSON(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/329json/</link>
      <pubDate>Fri, 12 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/329json/</guid>
      <description>简介 JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。易于人阅读和编写。同时也易于机器解析和生成。JSON 采用完全独立于语言的文本格式，而且很多语言都提供了</description>
    </item>
    
    <item>
      <title>28、书城第八阶段(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/328%E4%B9%A6%E5%9F%8E%E7%AC%AC%E5%85%AB%E9%98%B6%E6%AE%B5/</link>
      <pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/328%E4%B9%A6%E5%9F%8E%E7%AC%AC%E5%85%AB%E9%98%B6%E6%AE%B5/</guid>
      <description>1、使用 Filter 过滤器拦截/pages/manager/所有内容，实 现权限检查 Filter 代码： web.xml 中的配置： 2、ThreadLocal 的使用 ThreadLocal 的作用，它可以</description>
    </item>
    
    <item>
      <title>27、Filter过滤器(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/327filter%E8%BF%87%E6%BB%A4%E5%99%A8/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/327filter%E8%BF%87%E6%BB%A4%E5%99%A8/</guid>
      <description>简介 Filter 过滤器它是 JavaWeb 的三大组件之一。三大组件分别是：Servlet 程序、Listener 监听器、Filter 过滤器 Filter 过滤器它是 JavaEE 的规范。也就是</description>
    </item>
    
    <item>
      <title>10、JDBC总结(JDBC)</title>
      <link>https://yiguan1573.github.io/post/510jdbc%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/510jdbc%E6%80%BB%E7%BB%93/</guid>
      <description>总结 @Test public void testUpdateWithTx() { Connection conn = null; try { //1.获取连接的操作（ //① 手写的连接：JDBCUtils.getConnection(); //② 使用数据库连接</description>
    </item>
    
    <item>
      <title>26、验证码(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/326%E9%AA%8C%E8%AF%81%E7%A0%81/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/326%E9%AA%8C%E8%AF%81%E7%A0%81/</guid>
      <description>表单重复提交有三种常见的情况 提交完表单。服务器使用请求转来进行页面跳转。这个时候，用户按下功能键 F5，就会发起最后一次的请求。 造成表单重复提</description>
    </item>
    
    <item>
      <title>9、Apache-DBUtils实现CRUD操作(JDBC)</title>
      <link>https://yiguan1573.github.io/post/509apache-dbutils%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/509apache-dbutils%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/</guid>
      <description>Apache-DBUtils简介 commons-dbutils 是 Apache 组织提供的一个开源 JDBC工具类库，它是对JDBC的简单封装，学习成本极低，并且使用dbutils能极</description>
    </item>
    
    <item>
      <title>23、Cookie(1)(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/323cookie1/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/323cookie1/</guid>
      <description>简介 Cookie 翻译过来是饼干的意思 Cookie 是服务器通知客户端保存键值对的一种技术 客户端有了 Cookie 后，每次请求都发送给服务器 每个 Cookie 的大小不能超过 4kb 创建 Cookie 服务器获</description>
    </item>
    
    <item>
      <title>24、Cookie(2)(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/324cookie2/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/324cookie2/</guid>
      <description>浏览器查看 Cookie 谷歌浏览器如何查看 Cookie 火狐浏览器如何查看 Cookie Cookie 生命控制 Cookie 的生命控制指的是如何管理Cookie什么时候被销毁（删除） setMaxAge() 正数，表示在指定</description>
    </item>
    
    <item>
      <title>25、Session 会话(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/325session-%E4%BC%9A%E8%AF%9D/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/325session-%E4%BC%9A%E8%AF%9D/</guid>
      <description>简介 Session 就一个接口（HttpSession） Session 就是会话。它是用来维护一个客户端和服务器之间关联的一种技术 每个客户端都有自己的一个 Session 会话 Session 会话中</description>
    </item>
    
    <item>
      <title>8、数据库连接池(JDBC)</title>
      <link>https://yiguan1573.github.io/post/508%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/508%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</guid>
      <description>JDBC数据库连接池的必要性 在使用开发基于数据库的web程序时，传统的模式基本是按以下步骤： 在主程序（如servlet、beans）中建立数</description>
    </item>
    
    <item>
      <title>22、文件的下载(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/322%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8B%E8%BD%BD/</link>
      <pubDate>Sat, 23 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/322%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8B%E8%BD%BD/</guid>
      <description>简介 下载的常用 API 说明： response.getOutputStream(); servletContext.getResourceAsStream(); servletContext.getMimeType(); response.setContentType(); response.setHeader(&amp;ldquo;Content-Disposition&amp;rdquo;, &amp;ldquo;attachment; fileName=1.jpg&amp;rdquo;); 这个响应头告诉浏览器。这是需要下载的。而 attachment 表示附件，也就是下载的一个文件。fileName=后面， 表示下</description>
    </item>
    
    <item>
      <title>7、DAO及相关实现类(JDBC)</title>
      <link>https://yiguan1573.github.io/post/507dao%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%AE%9E%E7%8E%B0%E7%B1%BB/</link>
      <pubDate>Sat, 23 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/507dao%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%AE%9E%E7%8E%B0%E7%B1%BB/</guid>
      <description>简介 DAO：Data Access Object访问数据信息的类和接口，包括了对数据的CRUD（Create、Retrival、Update、Delete</description>
    </item>
    
    <item>
      <title>21、文件的上传(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/321%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8A%E4%BC%A0/</link>
      <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/321%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8A%E4%BC%A0/</guid>
      <description>简介 要有一个 form 标签，method=post 请求 form 标签的 encType 属性值必须为 multipart/form-data 值 在 form 标签中使用 input type=file 添加上传的文件 编写服务器代码（Servlet 程序）</description>
    </item>
    
    <item>
      <title>6、数据库事务(JDBC)</title>
      <link>https://yiguan1573.github.io/post/506%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/506%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1/</guid>
      <description>数据库事务介绍 事务：一组逻辑操作单元,使数据从一种状态变换到另一种状态。 事务处理（事务操作）：保证所有事务都作为一个工作单元来执行，即使出现</description>
    </item>
    
    <item>
      <title>20、JSTL 标签库(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/320jstl-%E6%A0%87%E7%AD%BE%E5%BA%93/</link>
      <pubDate>Thu, 21 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/320jstl-%E6%A0%87%E7%AD%BE%E5%BA%93/</guid>
      <description>简介 JSTL 标签库 全称是指 JSP Standard Tag Library JSP 标准标签库。是一个不断完善的开放源代码的 JSP 标签库 EL 表达式主要是为了替换 jsp 中的表达式脚本，而标签库则是为了替换代</description>
    </item>
    
    <item>
      <title>5、批量插入(JDBC)</title>
      <link>https://yiguan1573.github.io/post/505%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5/</link>
      <pubDate>Thu, 21 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/505%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5/</guid>
      <description>批量执行SQL语句 当需要成批插入或者更新记录时，可以采用Java的批量更新机制，这一机制允许多条语句一次性提交给数据库批量处理。通常情况下比</description>
    </item>
    
    <item>
      <title>19、EL 表达式器(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/319el-%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/319el-%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>简介 EL 表达式的全称是：Expression Language，是表达式语言 EL 表达式的什么作用：EL 表达式主要是代替 jsp 页面中的表达式脚本在 jsp 页面</description>
    </item>
    
    <item>
      <title>4、操作BLOB类型字段(JDBC)</title>
      <link>https://yiguan1573.github.io/post/504%E6%93%8D%E4%BD%9Cblob%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/504%E6%93%8D%E4%BD%9Cblob%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5/</guid>
      <description>MySQL BLOB类型 MySQL中，BLOB是一个二进制大型对象，是一个可以存储大量数据的容器，它能容纳不同大小的数据。 插入BLOB类型的数据必须使</description>
    </item>
    
    <item>
      <title>18、Listener 监听器(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/318listener-%E7%9B%91%E5%90%AC%E5%99%A8/</link>
      <pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/318listener-%E7%9B%91%E5%90%AC%E5%99%A8/</guid>
      <description>简介 Listener 监听器它是 JavaWeb 的三大组件之一。JavaWeb 的三大组件分别是：Servlet 程序、Filter 过滤器、Listener 监听器 Listener 它是 JavaEE 的规</description>
    </item>
    
    <item>
      <title>3、使用PreparedStatement实现CRUD操作(JDBC)</title>
      <link>https://yiguan1573.github.io/post/503%E4%BD%BF%E7%94%A8preparedstatement%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/503%E4%BD%BF%E7%94%A8preparedstatement%E5%AE%9E%E7%8E%B0crud%E6%93%8D%E4%BD%9C/</guid>
      <description>操作和访问数据库 数据库连接被用于向数据库服务器发送命令和 SQL 语句，并接受数据库服务器返回的结果。其实一个数据库连接就是一个Socket连接。 在</description>
    </item>
    
    <item>
      <title>2、获取数据库连接(JDBC)</title>
      <link>https://yiguan1573.github.io/post/502%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/502%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/</guid>
      <description>要素一：Driver接口实现类 Driver接口介绍 java.sql.Driver 接口是所有 JDBC 驱动程序需要实现的接口。这个接口是提供给数据库厂商使用的，不同数据库厂商提供</description>
    </item>
    
    <item>
      <title>17、jsp进阶(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/317jsp%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/317jsp%E8%BF%9B%E9%98%B6/</guid>
      <description>jsp 中的out输出和response.getWriter输出的区别 response 中表示响应，我们经常用于设置返回给客户端的内容（输出），out 也是给用户做</description>
    </item>
    
    <item>
      <title>1、JDBC概述(JDBC)</title>
      <link>https://yiguan1573.github.io/post/501jdbc%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/501jdbc%E6%A6%82%E8%BF%B0/</guid>
      <description>数据的持久化 持久化(persistence)：把数据保存到可掉电式存储设备中以供之后使用。大多数情况下，特别是企业级应用，数据持久化意味着将</description>
    </item>
    
    <item>
      <title>5、字节码操作(Java)</title>
      <link>https://yiguan1573.github.io/post/405%E5%AD%97%E8%8A%82%E7%A0%81%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/405%E5%AD%97%E8%8A%82%E7%A0%81%E6%93%8D%E4%BD%9C/</guid>
      <description>简介 JAVA动态性的两种常见实现方式： 反射 字节码操作 运行时操作字节码可以上我们实现如下功能: 动态生成新的类 动态改变某个类的结构(添加删除/修</description>
    </item>
    
    <item>
      <title>16、jsp对象(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/316jsp%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/316jsp%E5%AF%B9%E8%B1%A1/</guid>
      <description>jsp 九大内置对象 jsp 中的内置对象，是指 Tomcat 在翻译 jsp 页面成为 Servlet 源代码后，内部提供的九大对象，叫内置对象 jsp 四大域对象 四个域对象分别是： pageContext (PageContextImpl 类) 当前 jsp 页</description>
    </item>
    
    <item>
      <title>4、脚本引擎执行JS代码(Java)</title>
      <link>https://yiguan1573.github.io/post/404%E8%84%9A%E6%9C%AC%E5%BC%95%E6%93%8E%E6%89%A7%E8%A1%8Cjs%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/404%E8%84%9A%E6%9C%AC%E5%BC%95%E6%93%8E%E6%89%A7%E8%A1%8Cjs%E4%BB%A3%E7%A0%81/</guid>
      <description>简介 脚本引擎介绍 使得Java应用程序可以通过一套固定的接口与各种脚本引擎交互,从而达到在Java平台上调用各种脚本语言的目的。 Java 脚本API是</description>
    </item>
    
    <item>
      <title>15、jsp的三种用法(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/315jsp%E7%9A%84%E4%B8%89%E7%A7%8D%E7%94%A8%E6%B3%95/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/315jsp%E7%9A%84%E4%B8%89%E7%A7%8D%E7%94%A8%E6%B3%95/</guid>
      <description>jsp 头部的 page 指令 jsp 的 page 指令可以修改 jsp 页面中一些重要的属性，或者行为 &amp;lt;%@ page contentType=&amp;quot;text/html;charset=UTF-8&amp;quot; language=&amp;quot;java&amp;quot; %&amp;gt; i.language属性 表示 jsp 翻译后是什么语言文件。暂时只支持 ja</description>
    </item>
    
    <item>
      <title>3、动态编译(Java)</title>
      <link>https://yiguan1573.github.io/post/403%E5%8A%A8%E6%80%81%E7%BC%96%E8%AF%91/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/403%E5%8A%A8%E6%80%81%E7%BC%96%E8%AF%91/</guid>
      <description>动态编译简介 动态编译的应用场景 可以做一个浏览器端编写java代码,上传服务器编译和运行的在线评测系统 服务器动态加载某些类文件进行编译 动态编译</description>
    </item>
    
    <item>
      <title>14、jsp简介(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/314jsp%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/314jsp%E7%AE%80%E4%BB%8B/</guid>
      <description>jsp作用 jsp 的全称是 java server pages。Java 的服务器页面 jsp 的主要作用是代替 Servlet 程序回传 html 页面的数据 因为 Servlet 程序回传 html 页面数据是一件非常繁锁的事情</description>
    </item>
    
    <item>
      <title>2、反射机制(Java)</title>
      <link>https://yiguan1573.github.io/post/402%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/402%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</guid>
      <description>简介 动态语言：程序运行时,可以改变程序结构或变量类型。典型的语言:，Python、 ruby、javascript等 C，C++, JAVA不是动</description>
    </item>
    
    <item>
      <title>13、JAVA三层架构(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/313java%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/313java%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/</guid>
      <description>JAVA三层架构 分层的目的是为了解耦。解耦就是为了降低代码的耦合度。方便项目后期的维护和升级</description>
    </item>
    
    <item>
      <title>1、Annotation注解(Java)</title>
      <link>https://yiguan1573.github.io/post/401.annotation%E6%B3%A8%E8%A7%A3/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/401.annotation%E6%B3%A8%E8%A7%A3/</guid>
      <description>简介 Annotation的作用 不是程序本身,可以对程序作出解释。(这一点, 跟注释没什么区别) 可以被其他程序(此如:编译器等)读取。(注解信息</description>
    </item>
    
    <item>
      <title>12、HttpServletResponse 类(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/312httpservletresponse-%E7%B1%BB-/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/312httpservletresponse-%E7%B1%BB-/</guid>
      <description>HttpServletResponse 类的作用 HttpServletResponse 类和 HttpServletRequest 类一样。每次请求进来，Tomcat 服务器都会创建一个 Response 对象传 递给 Servlet 程序去使用。HttpServletRequest 表示请求</description>
    </item>
    
    <item>
      <title>11、HttpServletRequest 类 (JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/311httpservletrequest-%E7%B1%BB-/</link>
      <pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/311httpservletrequest-%E7%B1%BB-/</guid>
      <description>HttpServletRequest 类的作用 每次只要有请求进入 Tomcat 服务器，Tomcat 服务器就会把请求过来的 HTTP 协议信息解析好封装到 Request 对象中。 然后传递到 service 方法（doGet 和 doP</description>
    </item>
    
    <item>
      <title>10、HTTP协议(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/310http%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/310http%E5%8D%8F%E8%AE%AE/</guid>
      <description>简介 协议是指双方，或多方，相互约定好，大家都需要遵守的规则，叫协议 所谓 HTTP 协议，就是指，客户端和服务器之间通信时，发送的数据，需要遵守的规则，</description>
    </item>
    
    <item>
      <title>8、ServletConfig类(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/308servletconfig-%E7%B1%BB/</link>
      <pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/308servletconfig-%E7%B1%BB/</guid>
      <description>简介 ServletConfig 类从类名上来看，就知道是 Servlet 程序的配置信息类 Servlet 程序和 ServletConfig 对象都是由 Tomcat 负责创建，我们负责使用 Servlet 程序默认是第一次访问的时候创建，Servlet</description>
    </item>
    
    <item>
      <title>9、ServletContext类 (JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/309servletcontext-%E7%B1%BB-/</link>
      <pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/309servletcontext-%E7%B1%BB-/</guid>
      <description>简介 ServletContext 是一个接口，它表示 Servlet 上下文对象 一个 web 工程，只有一个 ServletContext 对象实例 ServletContext 对象是一个域对象 ServletContext 是在 web 工程部署启动的时候创建。在 web 工程停止的时候销毁 域</description>
    </item>
    
    <item>
      <title>6、IDEA中动态web工程的操作 (JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/306idea%E4%B8%AD%E5%8A%A8%E6%80%81web%E5%B7%A5%E7%A8%8B%E7%9A%84%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/306idea%E4%B8%AD%E5%8A%A8%E6%80%81web%E5%B7%A5%E7%A8%8B%E7%9A%84%E6%93%8D%E4%BD%9C/</guid>
      <description>IDEA 整合 Tomcat 服务器 操作的菜单如下：File | Settings | Build, Execution, Deployment | Application Servers 配置Tomcat 安装目录 就可以通过创建一个 Model 查看是不是配置成功 IDEA 中创建动态 web 工程 创建</description>
    </item>
    
    <item>
      <title>7、Servlet技术(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/307servlet-%E6%8A%80%E6%9C%AF-/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/307servlet-%E6%8A%80%E6%9C%AF-/</guid>
      <description>Servlet简介 Servlet 是 JavaEE 规范之一。规范就是接口 Servlet 就 JavaWeb 三大组件之一。三大组件分别是：Servlet 程序、Filter 过滤器、Listener 监</description>
    </item>
    
    <item>
      <title>3、xml解析技术(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/303xml%E8%A7%A3%E6%9E%90%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/303xml%E8%A7%A3%E6%9E%90%E6%8A%80%E6%9C%AF/</guid>
      <description>xml解析技术介绍 不管是html文件还是xml文件它们都是标记型文档，都可以使用w3c组织制定的dom技术来解析 早期JDK为我们提供了两种x</description>
    </item>
    
    <item>
      <title>4、Tomcat简介(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/304tomcat%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/304tomcat%E7%AE%80%E4%BB%8B/</guid>
      <description>JavaWeb概念 什么是 JavaWeb JavaWeb 是指，所有通过 Java 语言编写可以通过浏览器访问的程序的总称，叫 JavaWeb。 JavaWeb 是基于请求和响应来开发的。 什么是请求</description>
    </item>
    
    <item>
      <title>5、Tomcat的使用(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/305tomcat%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/305tomcat%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>安装 找到你需要用的 Tomcat 版本对应的 zip 压缩包，解压到需要安装的目录即可 目录介绍 启动 Tomcat 服务器 找到 Tomcat 目录下的 bin 目录下的 startup.bat 文件，双击，就可以启动 Tomcat 服务器</description>
    </item>
    
    <item>
      <title>2、xml语法(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/302xml%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/302xml%E8%AF%AD%E6%B3%95/</guid>
      <description>文档声明 1. 创建一个xml文件 2. 图书有 id 属性表示唯一标识，书名，有作者，价格的信息 xml注释 html和XML注释一样 &amp;lt;!-- html 注释 --&amp;gt; 元素（标签） 什么</description>
    </item>
    
    <item>
      <title>1、xml简介(JavaWeb)</title>
      <link>https://yiguan1573.github.io/post/301xml/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/301xml/</guid>
      <description>JavaWeb技术概览 xml简介 xml 是可扩展的标记性语言 xml 的主要作用有： 用来保存数据，而且这些数据具有自我描述性 它还可以做为项目或者模块的配置</description>
    </item>
    
    <item>
      <title>53、async函数(ES6)</title>
      <link>https://yiguan1573.github.io/post/53es6_async%E5%87%BD%E6%95%B0/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/53es6_async%E5%87%BD%E6%95%B0/</guid>
      <description>源自ES2017 概念：真正意义上去解决异步回调的问题，同步流程表达异步操作 本质：Generator的语法糖 语法 async function foo(){ await异步操作; aw</description>
    </item>
    
    <item>
      <title>54、class类详解(ES6)</title>
      <link>https://yiguan1573.github.io/post/54es6_class%E7%B1%BB%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/54es6_class%E7%B1%BB%E8%AF%A6%E8%A7%A3/</guid>
      <description>通过class定义类/实现类的继承 在类中通过constructor定义构造方法 通过new来创建类的实例 通过extends来实现类的继承 通过s</description>
    </item>
    
    <item>
      <title>55、字符串，数值，数组，对象的扩展(ES6)</title>
      <link>https://yiguan1573.github.io/post/55es6_%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E5%80%BC%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%A9%E5%B1%95/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/55es6_%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E5%80%BC%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%A9%E5%B1%95/</guid>
      <description>字符串扩展 includes(str):判断是否包含指定的字符串 staltsWith(str):判断是否以指定字符串开头 endswith(st</description>
    </item>
    
    <item>
      <title>56、深度克隆(ES6)</title>
      <link>https://yiguan1573.github.io/post/56es6_%E6%B7%B1%E5%BA%A6%E5%85%8B%E9%9A%86/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/56es6_%E6%B7%B1%E5%BA%A6%E5%85%8B%E9%9A%86/</guid>
      <description>拷贝数据 基本数据类型：拷贝后会生成一份新的数据，修改拷贝以后的数据不会影响原数据 对象/数组：拷贝后不会生成新的数据，而是拷贝是引用。修改拷贝</description>
    </item>
    
    <item>
      <title>57、set,map容器(ES6)</title>
      <link>https://yiguan1573.github.io/post/57es6_setmap%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/57es6_setmap%E5%AE%B9%E5%99%A8/</guid>
      <description>Set容器 无序不可重复的多个value的集合体 方法 Set() Set(array) add(vaLue) delete(value) has(value) clear() Map容器 无序的key不重复的多个key-value的集合体 方法 Map() Map(array) set(key, valu</description>
    </item>
    
    <item>
      <title>58、for of用法详解(ES6)</title>
      <link>https://yiguan1573.github.io/post/58es6_for-of%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/58es6_for-of%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3/</guid>
      <description>for(let value of target){}循环遍历 遍历数组 遍历Set 遍历Map 遍历字符串 遍历伪数组</description>
    </item>
    
    <item>
      <title>59、方法介绍(ES7)</title>
      <link>https://yiguan1573.github.io/post/59es7_%E6%96%B9%E6%B3%95%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/59es7_%E6%96%B9%E6%B3%95%E4%BB%8B%E7%BB%8D/</guid>
      <description>指数运算符(幂):** Array.prototype.includes(value):判断数组中是否包含指定value</description>
    </item>
    
    <item>
      <title>46、对象的简写方式(ES6)</title>
      <link>https://yiguan1573.github.io/post/46es6_%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%AE%80%E5%86%99%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/46es6_%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%AE%80%E5%86%99%E6%96%B9%E5%BC%8F/</guid>
      <description>简化的对象写法 省略同名的属性值 省略方法的function</description>
    </item>
    
    <item>
      <title>47、箭头函数(ES6)</title>
      <link>https://yiguan1573.github.io/post/47es6_%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/47es6_%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/</guid>
      <description>作用：定义匿名函数 基本语法 没有参数: () =&amp;gt; console.Log( &amp;lsquo;xxx&amp;rsquo;) 一个参数: i =&amp;gt; i+2 大于一个参数: (i,j) =&amp;gt; i+j 函数体不用大括号:默认返回结果 函数体如果有多个语句，需要用{</description>
    </item>
    
    <item>
      <title>48、三点运算符(ES6)</title>
      <link>https://yiguan1573.github.io/post/48es6_%E4%B8%89%E7%82%B9%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/48es6_%E4%B8%89%E7%82%B9%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>rest(可变参数) 用来取代arguments但比arguments灵活,只能是最后部分形参参数 function foo(a,b){ console.log(arguments); arguments.callee();</description>
    </item>
    
    <item>
      <title>49、形参默认值(ES6)</title>
      <link>https://yiguan1573.github.io/post/49es6_%E5%BD%A2%E5%8F%82%E9%BB%98%E8%AE%A4%E5%80%BC/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/49es6_%E5%BD%A2%E5%8F%82%E9%BB%98%E8%AE%A4%E5%80%BC/</guid>
      <description>形参的默认值————当不传入参数的时候默认使用形参里的默认值</description>
    </item>
    
    <item>
      <title>50、promise对象(ES6)</title>
      <link>https://yiguan1573.github.io/post/50es6_promise%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/50es6_promise%E5%AF%B9%E8%B1%A1/</guid>
      <description>理解 Promise对象: 代表了未来某个将要发生的事件(通常是一个异步操作) 有了promise对象，可以将异步操作以同步的流程表达出来，避免了</description>
    </item>
    
    <item>
      <title>51、Symbol属性(ES6)</title>
      <link>https://yiguan1573.github.io/post/51es6_symbol%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/51es6_symbol%E5%B1%9E%E6%80%A7/</guid>
      <description>简介 ES5中对象的属性名都是字符串，容易造成重名，污染环境 概念：ES6中的添加了一种原始数据类型symbol(已有的原始数据类型: String, Number, boolean, null, undefined,</description>
    </item>
    
    <item>
      <title>52、Generator函数(ES6)</title>
      <link>https://yiguan1573.github.io/post/52es6_generator%E5%87%BD%E6%95%B0/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/52es6_generator%E5%87%BD%E6%95%B0/</guid>
      <description>简介 概念 ES6提供的解决异步编程的方案之一 Generator函数是一个状态机， 内部封装了不同状态的数据， 用来生成遍历器对象 可暂停函数(惰性求</description>
    </item>
    
    <item>
      <title>45、模板字符串(ES6)</title>
      <link>https://yiguan1573.github.io/post/45es6_%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Sun, 03 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/45es6_%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>模板字符串:简化字符串的拼接 模板字符串必须用``包含 变化的部分使用${xxx}定义</description>
    </item>
    
    <item>
      <title>44、变量的解构赋值(ES6)</title>
      <link>https://yiguan1573.github.io/post/44es6_%E5%8F%98%E9%87%8F%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/44es6_%E5%8F%98%E9%87%8F%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC/</guid>
      <description>理解：从对象或数组中提取数据，并赋值给变量(多个) 对象的解构赋值：let {n,a} = {n:&amp;lsquo;tom&amp;rsquo;,a:12} 数组的解构赋值：let [a,b] = [1， &amp;lsquo;atguigu&amp;rsquo;]; 用途：给多个形参赋值</description>
    </item>
    
    <item>
      <title>42、函数扩展(ES5)</title>
      <link>https://yiguan1573.github.io/post/42es5_%E5%87%BD%E6%95%B0%E6%89%A9%E5%B1%95/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/42es5_%E5%87%BD%E6%95%B0%E6%89%A9%E5%B1%95/</guid>
      <description>Function.prototype.bind(obj) 作用：将函数内的this绑定为bj,并将函数返回 区别bind()与call()和apply() 都能指定函数中的this call()/app</description>
    </item>
    
    <item>
      <title>43、let const关键字(ES6)</title>
      <link>https://yiguan1573.github.io/post/43es6_let%E5%92%8Cconst%E5%85%B3%E9%94%AE%E5%AD%97/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/43es6_let%E5%92%8Cconst%E5%85%B3%E9%94%AE%E5%AD%97/</guid>
      <description>let 作用：与var类似用于声明一个变量 特点：在块作用域内有效，不能重复声明，不会预处理，不存在提升 应用：循环遍历加监听，使用let取代var是</description>
    </item>
    
    <item>
      <title>41、数组的扩展(ES5)</title>
      <link>https://yiguan1573.github.io/post/41es5_%E6%95%B0%E7%BB%84%E7%9A%84%E6%89%A9%E5%B1%95/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/41es5_%E6%95%B0%E7%BB%84%E7%9A%84%E6%89%A9%E5%B1%95/</guid>
      <description>Array.prototype.indexOf(value):得到值在数组中的第一个下标 Array.prototype.lastIndexO</description>
    </item>
    
    <item>
      <title>40、Object对象方法扩展(ES5)</title>
      <link>https://yiguan1573.github.io/post/40es5_object%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95%E6%89%A9%E5%B1%95/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/40es5_object%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95%E6%89%A9%E5%B1%95/</guid>
      <description>Object.create(prototype, [descriptors]) 作用：以指定对象为原型创建新的对象，为新的对象指定新的属性，并对属性进行描述 value:指定值 writable:标识当前属性值是否是可修</description>
    </item>
    
    <item>
      <title>39、严格模式(ES5)</title>
      <link>https://yiguan1573.github.io/post/39es5_%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/39es5_%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F/</guid>
      <description>理解 除了正常运行模式(混杂模式)，ES5添加了第二种运行模式:”严格模式”(strict mode) 顾名思义，这种模式使得Javascript在更严格</description>
    </item>
    
    <item>
      <title>12、jQuery插件开发(jQuery)</title>
      <link>https://yiguan1573.github.io/post/212jquery%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</link>
      <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/212jquery%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</guid>
      <description>颜色插件 animate动画不会改变背景颜色，需要使用插件 插件就是用来做扩展功能的 jQuery插件库: jq22.com 省市联动插件 UI插件 jQuery UI 封装插件 给jQ</description>
    </item>
    
    <item>
      <title>11、jQuery补充知识点(jQuery)</title>
      <link>https://yiguan1573.github.io/post/211jquery%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86%E7%82%B9/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/211jquery%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86%E7%82%B9/</guid>
      <description>链式编程 通常情况下,只有设置操作才能把链式编程延续下去。因为获取操作的时候,会返回获取到的相应的值,无法返回jQuery对象 each方法 jQ</description>
    </item>
    
    <item>
      <title>10、jQuery事件机制(jQuery)</title>
      <link>https://yiguan1573.github.io/post/210jquery%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/210jquery%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/</guid>
      <description>on注册事件 jQuery1.7之后, jQuery用on统一了 所有事件的处理方法 on注册简单事件，不支持动态注册 on注册事件委托，支持动态注册</description>
    </item>
    
    <item>
      <title>9、jQuery尺寸和位置操作(jQuery)</title>
      <link>https://yiguan1573.github.io/post/209jquery%E5%B0%BA%E5%AF%B8%E5%92%8C%E4%BD%8D%E7%BD%AE%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/209jquery%E5%B0%BA%E5%AF%B8%E5%92%8C%E4%BD%8D%E7%BD%AE%E6%93%8D%E4%BD%9C/</guid>
      <description>宽高 width()和height()设置或者获取高度,不包括内边距、边框和外边距 获取页面可视区的宽高 innerWidth/innerHeig</description>
    </item>
    
    <item>
      <title>8、jQuery属性操作(jQuery)</title>
      <link>https://yiguan1573.github.io/post/208jquery%E5%B1%9E%E6%80%A7%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/208jquery%E5%B1%9E%E6%80%A7%E6%93%8D%E4%BD%9C/</guid>
      <description>attr操作 attr()，设置获取属性 removeAttr()，移除属性 操作布尔类型的属性 原生js设置checked属性，设置为true或者</description>
    </item>
    
    <item>
      <title>7、jQuery节点操作(jQuery)</title>
      <link>https://yiguan1573.github.io/post/207jquery%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/207jquery%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C/</guid>
      <description>创建节点 原生js中创建节点:document.write();innerHTML; document.createElement ( ) ; jQuery创建节点的方法html()和$()方法</description>
    </item>
    
    <item>
      <title>6、jQuery动画(jQuery)</title>
      <link>https://yiguan1573.github.io/post/206jquery%E5%8A%A8%E7%94%BB/</link>
      <pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/206jquery%E5%8A%A8%E7%94%BB/</guid>
      <description>三组基本动画 显示(show)与隐藏(hide)是一组动画 滑入(slideDown)与滑出(slideUp)与切换(slideToggle) ,</description>
    </item>
    
    <item>
      <title>5、jQuery样式操作(jQuery)</title>
      <link>https://yiguan1573.github.io/post/205jquery%E6%A0%B7%E5%BC%8F%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/205jquery%E6%A0%B7%E5%BC%8F%E6%93%8D%E4%BD%9C/</guid>
      <description>Class类操作 添加类addClass(类名) 移除类removeClass(类名) 判断类 切换类</description>
    </item>
    
    <item>
      <title>4、jQuery选择器(jQuery)</title>
      <link>https://yiguan1573.github.io/post/204jquery%E9%80%89%E6%8B%A9%E5%99%A8/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/204jquery%E9%80%89%E6%8B%A9%E5%99%A8/</guid>
      <description>基本选择器 层次选择器 过滤选择器 筛选选择器 mouseenter事件和mouseleave事件 mouseover事件在鼠标移动到选取的元素及其子</description>
    </item>
    
    <item>
      <title>3、jQuery基础2(jQuery)</title>
      <link>https://yiguan1573.github.io/post/203jquery%E5%9F%BA%E7%A1%802/</link>
      <pubDate>Sat, 18 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/203jquery%E5%9F%BA%E7%A1%802/</guid>
      <description>设置获取文本内容 text(),获取和设置文本的 获取文本：text()方法不给参数 获取id为div1这个标签的文本会获取到这个标签中所有的文本</description>
    </item>
    
    <item>
      <title>1、jQuery简介(jQuery)</title>
      <link>https://yiguan1573.github.io/post/201jquery%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/201jquery%E7%AE%80%E4%BB%8B/</guid>
      <description>原生js缺陷 入口函数（window.onload）只能有一个，如果有多个，后面的会将前面的给覆盖掉 原生js的API名字比较复杂 容错性比较差，</description>
    </item>
    
    <item>
      <title>2、jQuery基础1(jQuery)</title>
      <link>https://yiguan1573.github.io/post/202jquery%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/202jquery%E5%9F%BA%E7%A1%80/</guid>
      <description>入口函数 写法一 $(document).ready(function(){ }); 写法二 $(function(){ }); jQuery入口函数和window.onload入口函数的区别 jQuery入口函数可以写多个 执行时机不同: jQu</description>
    </item>
    
    <item>
      <title>38、线程机制与事件机制(JS高级)</title>
      <link>https://yiguan1573.github.io/post/38%E7%BA%BF%E7%A8%8B%E6%9C%BA%E5%88%B6%E4%B8%8E%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/38%E7%BA%BF%E7%A8%8B%E6%9C%BA%E5%88%B6%E4%B8%8E%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/</guid>
      <description>进程与线程 应用程序必须运行在某个进程的某个线程上 一个进程中至少有一个运行的线程:主线程，进程启动后自动创建 一个进程中也可以同时运行多个线程，</description>
    </item>
    
    <item>
      <title>37、继承模式(JS高级)</title>
      <link>https://yiguan1573.github.io/post/37%E7%BB%A7%E6%89%BF%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/37%E7%BB%A7%E6%89%BF%E6%A8%A1%E5%BC%8F/</guid>
      <description>原型链继承 步骤 定义父类型构造函数 给父类型的原型添加方法 定义子类型的构造函数 创建父类型的对象赋值给子类型的原型 将子类型原型的构造属性设置为子类</description>
    </item>
    
    <item>
      <title>36、对象创建模型(JS高级)</title>
      <link>https://yiguan1573.github.io/post/36%E5%AF%B9%E8%B1%A1%E5%88%9B%E5%BB%BA%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Tue, 14 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/36%E5%AF%B9%E8%B1%A1%E5%88%9B%E5%BB%BA%E6%A8%A1%E5%9E%8B/</guid>
      <description>Object构造模型 套路:先创建空bject对象，再动态添加属性/方法 适用场景:起始时不确定对象内部数据 问题:语句太多 对象字面量 套路:使用{</description>
    </item>
    
    <item>
      <title>35、闭包(JS高级)</title>
      <link>https://yiguan1573.github.io/post/35%E9%97%AD%E5%8C%85/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/35%E9%97%AD%E5%8C%85/</guid>
      <description>闭包的简介 当一个嵌套的内部(子)函数引用了嵌套的外部(父)函数的变量(函数)时，就产生了闭包 理解：闭包是嵌套的内部函数 产生闭包的条件:函数嵌</description>
    </item>
    
    <item>
      <title>34、作用域与作用域链(JS高级)</title>
      <link>https://yiguan1573.github.io/post/34%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%B8%8E%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/34%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%B8%8E%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE/</guid>
      <description>作用域与作用域链 作用域是静态的，在编写时就确定了 分类 全局作用域 函数作用域 块作用域（ES6） 作用：隔离变量，不同作用域下同名变量不会发生冲突</description>
    </item>
    
    <item>
      <title>33、执行上下文与执行上下文栈(JS高级)</title>
      <link>https://yiguan1573.github.io/post/33%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E4%B8%8E%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%88/</link>
      <pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/33%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E4%B8%8E%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%88/</guid>
      <description>变量提升和函数提升 变量声明提升:通过var定义(声明)的变量，在定义语句之前就可以访问到 函数声明提升:通过function声明的函数，在之前</description>
    </item>
    
    <item>
      <title>32、原型与原型链(JS高级)</title>
      <link>https://yiguan1573.github.io/post/32%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/32%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE/</guid>
      <description>函数的prototype 每个函数都有一个prototype属性， 它默认指向一个object空对象(即称为:原型对象) 原型对象中有一个属性co</description>
    </item>
    
    <item>
      <title>31、JSON(JS)</title>
      <link>https://yiguan1573.github.io/post/31json/</link>
      <pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/31json/</guid>
      <description>简介 JS中的对象只有JS自己认识，其他的语言都不认识 JSON就是一个特殊格式的字符串，这个字符串可以被任意的语言所识别，并且可以转换为任意语</description>
    </item>
    
    <item>
      <title>30、类的操作(JS)</title>
      <link>https://yiguan1573.github.io/post/30%E7%B1%BB%E7%9A%84%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/30%E7%B1%BB%E7%9A%84%E6%93%8D%E4%BD%9C/</guid>
      <description>通过style属性来修改元素的样式，每修改一 个样式，浏览器就需要重新渲染一次页面，这样的执行的性能是比较差的 当修改多个样式时并不方便 可以通过</description>
    </item>
    
    <item>
      <title>29、定时器(JS)</title>
      <link>https://yiguan1573.github.io/post/29%E5%AE%9A%E6%97%B6%E5%99%A8/</link>
      <pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/29%E5%AE%9A%E6%97%B6%E5%99%A8/</guid>
      <description>定时器简介 setInterval()，定时调用，可以将一个函数， 每隔一段时间执行一次 参数： 回调函数，该函数会每隔一段时间被调用一次 每次调用间</description>
    </item>
    
    <item>
      <title>28、BOM(JS)</title>
      <link>https://yiguan1573.github.io/post/28bom/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/28bom/</guid>
      <description>BOM（浏览器对象模型） BOM可以使我们通过JS来操作浏览器 在BOM中为我们提供了一组对象，用来完成对浏览器的操作 BOM对象 Window——</description>
    </item>
    
    <item>
      <title>27、键盘的事件(JS)</title>
      <link>https://yiguan1573.github.io/post/27%E9%94%AE%E7%9B%98%E7%9A%84%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/27%E9%94%AE%E7%9B%98%E7%9A%84%E4%BA%8B%E4%BB%B6/</guid>
      <description>语法 键盘事件 onkeydown——按键被按下；如果一直按着某个按键不松手，则事件会一直触发 onkeyup——按键被松开 键盘事件一般都会绑定给</description>
    </item>
    
    <item>
      <title>26、滚轮的事件(JS)</title>
      <link>https://yiguan1573.github.io/post/26%E6%BB%9A%E8%BD%AE%E7%9A%84%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/26%E6%BB%9A%E8%BD%AE%E7%9A%84%E4%BA%8B%E4%BB%B6/</guid>
      <description>语法 onmousewheel鼠标滚轮滚动的事件，会在滚轮滚动时触发，但是火狐不支持该属性 在火狐中需要使用DOMMouseScroll来绑定滚</description>
    </item>
    
    <item>
      <title>25、事件的练习：拖拽(JS)</title>
      <link>https://yiguan1573.github.io/post/25%E4%BA%8B%E4%BB%B6%E7%9A%84%E7%BB%83%E4%B9%A0%E6%8B%96%E6%8B%BD/</link>
      <pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/25%E4%BA%8B%E4%BB%B6%E7%9A%84%E7%BB%83%E4%B9%A0%E6%8B%96%E6%8B%BD/</guid>
      <description>拖拽的流程 当鼠标在被拖拽元素上按下时，开始拖拽onmousedown 当鼠标移动时被拖拽元素跟随鼠标移动onmousemove 当鼠标松开时，被</description>
    </item>
    
    <item>
      <title>24、事件(JS)</title>
      <link>https://yiguan1573.github.io/post/24%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Thu, 26 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/24%E4%BA%8B%E4%BB%B6/</guid>
      <description>事件对象 当响应函数被调用时，浏览器每次都会将一个事件对象作为实参传递进响应函数中，这个事件对象中封装了当前事件的相关信息，比如：鼠标的坐标，</description>
    </item>
    
    <item>
      <title>23、DOM对CSS的操作(JS)</title>
      <link>https://yiguan1573.github.io/post/23dom%E5%AF%B9css%E7%9A%84%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 24 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/23dom%E5%AF%B9css%E7%9A%84%E6%93%8D%E4%BD%9C/</guid>
      <description>读取和修改内联样式 使用style属性来操作元素的内联样式 读取内联样式 语法：元素.style.样式名 例子 元素.style.width 元素.st</description>
    </item>
    
    <item>
      <title>19、Shell编程(Linux)</title>
      <link>https://yiguan1573.github.io/post/119shell%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/119shell%E7%BC%96%E7%A8%8B/</guid>
      <description>介绍 Linux 运维工程师在进行服务器集群管理时，需要编写 Shell 程序来进行服务器管理。 对于 JavaEE 和 Python 程序员来说，工作的需要，你的老大会要求你编写一些 Shell 脚本进行</description>
    </item>
    
    <item>
      <title>18、JavaEE定制篇搭建JavaEE环境(Linux)</title>
      <link>https://yiguan1573.github.io/post/118javaee-%E5%AE%9A%E5%88%B6%E7%AF%87-%E6%90%AD%E5%BB%BA-javaee-%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/118javaee-%E5%AE%9A%E5%88%B6%E7%AF%87-%E6%90%AD%E5%BB%BA-javaee-%E7%8E%AF%E5%A2%83/</guid>
      <description>概述 示意图 安装JDK 安装JDK 先将软件通过 xftp5 上传到 /opt下 解压缩到 /opt 配置环境变量的配置文件 vim /etc/profile 需要如下操作才能生效 在任何目录下就可以使用 java</description>
    </item>
    
    <item>
      <title>17、RPM和YUM(Linux)</title>
      <link>https://yiguan1573.github.io/post/117rpm%E5%92%8Cyum/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/117rpm%E5%92%8Cyum/</guid>
      <description>rpm 包的管理 介绍 一种用于互联网下载包的打包及安装工具，它包含在某些 Linux 分发版中。它生成具有.RPM 扩展名的文件。RPM 是 RedHat Package Manager（Re</description>
    </item>
    
    <item>
      <title>16、进程管理(Linux)</title>
      <link>https://yiguan1573.github.io/post/116%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/116%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</guid>
      <description>进程的基本介绍 在 LINUX 中，每个执行的程序（代码）都称为一个进程。每一个进程都分配一个ID号 每一个进程，都会对应一个父进程，而这个父进程可以复制多</description>
    </item>
    
    <item>
      <title>15、网络配置(Linux)</title>
      <link>https://yiguan1573.github.io/post/115%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/115%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</guid>
      <description>linux 网络环境配置 第一种方法(自动获取) 缺点: linux 启动后会自动获取 IP,缺点是每次自动获取的 ip 地址可能不一样。这个不适用于做服务器，因为我们的服务</description>
    </item>
    
    <item>
      <title>14、磁盘和分区(Linux)</title>
      <link>https://yiguan1573.github.io/post/114%E7%A3%81%E7%9B%98%E5%92%8C%E5%88%86%E5%8C%BA/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/114%E7%A3%81%E7%9B%98%E5%92%8C%E5%88%86%E5%8C%BA/</guid>
      <description>分区基础知识 分区的方式 mbr分区 最多支持四个主分区 系统只能安装在主分区 扩展分区要占一个主分区 MBR 最大只支持 2TB，但拥有最好的兼容性 gtp分区</description>
    </item>
    
    <item>
      <title>10、搜索查找类(Linux)</title>
      <link>https://yiguan1573.github.io/post/110%E6%90%9C%E7%B4%A2%E6%9F%A5%E6%89%BE%E7%B1%BB/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/110%E6%90%9C%E7%B4%A2%E6%9F%A5%E6%89%BE%E7%B1%BB/</guid>
      <description>find指令 find 指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件或者目录显示在终端 基本语法 find [搜索范围] [选项] 选项说明 案例 按文件</description>
    </item>
    
    <item>
      <title>11、压缩和解压缩(Linux)</title>
      <link>https://yiguan1573.github.io/post/111%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B%E7%BC%A9/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/111%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B%E7%BC%A9/</guid>
      <description>gzip/gunzip指令 gzip 用于压缩文件，gunzip用于解压的 基本语法 gzip 文件 （功能描述：压缩文件，只能将文件压缩为*.gz 文件） gunzip 文件.g</description>
    </item>
    
    <item>
      <title>12、组管理和权限管理(Linux)</title>
      <link>https://yiguan1573.github.io/post/112%E7%BB%84%E7%AE%A1%E7%90%86%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/112%E7%BB%84%E7%AE%A1%E7%90%86%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</guid>
      <description>Linux组基本介绍 在 linux 中的每个用户必须属于一个组，不能独立于组外。在 linux 中每个文件有所有者、所在组、其它组的概念 文件/目录所有者 一般为文件的</description>
    </item>
    
    <item>
      <title>13、crond任务调度(Linux)</title>
      <link>https://yiguan1573.github.io/post/113crond%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/113crond%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/</guid>
      <description>原理示意图 crontab 进行 定时任务的设置 概述 任务调度：是指系统在某个时间执行的特定的命令或程序 任务调度分类 系统工作：有些重要的工作必须周而复始地执行。</description>
    </item>
    
    <item>
      <title>9、时间日期类(Linux)</title>
      <link>https://yiguan1573.github.io/post/109%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E7%B1%BB/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/109%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E7%B1%BB/</guid>
      <description>date 指令-显示当前日期 基本语法 date （功能描述：显示当前时间） date +%Y （功能描述：显示当前年份） date +%m （功能描述：显示当前月份） date +%d （功能描述：显示当前</description>
    </item>
    
    <item>
      <title>4、关机重启注销(Linux)</title>
      <link>https://yiguan1573.github.io/post/104%E5%85%B3%E6%9C%BA%E9%87%8D%E5%90%AF%E6%B3%A8%E9%94%80/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/104%E5%85%B3%E6%9C%BA%E9%87%8D%E5%90%AF%E6%B3%A8%E9%94%80/</guid>
      <description>关机重启命令 shutdown shutdown -h now ，表示立即关机 shutdown -h 1 ，表示 1 分钟后关机 shutdown -r now: ，立即重启 halt，直接使用，效果等价于关机 reboot，重启系统 sync，</description>
    </item>
    
    <item>
      <title>5、用户管理(Linux)</title>
      <link>https://yiguan1573.github.io/post/105%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/105%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</guid>
      <description>创建用户指定密码 基本介绍 Linux系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以</description>
    </item>
    
    <item>
      <title>6、运行级别和找回root密码(Linux)</title>
      <link>https://yiguan1573.github.io/post/106%E8%BF%90%E8%A1%8C%E7%BA%A7%E5%88%AB%E5%92%8C%E6%89%BE%E5%9B%9Eroot%E5%AF%86%E7%A0%81/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/106%E8%BF%90%E8%A1%8C%E7%BA%A7%E5%88%AB%E5%92%8C%E6%89%BE%E5%9B%9Eroot%E5%AF%86%E7%A0%81/</guid>
      <description>指令运行级别 运行级别说明 0：关机 1：单用户【找回丢失密码】 2：多用户状态没有网络服务 3：多用户状态有网络服务 4：系统未使用保留给用户 5：图形</description>
    </item>
    
    <item>
      <title>7、帮助指令(Linux)</title>
      <link>https://yiguan1573.github.io/post/107%E5%B8%AE%E5%8A%A9%E6%8C%87%E4%BB%A4/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/107%E5%B8%AE%E5%8A%A9%E6%8C%87%E4%BB%A4/</guid>
      <description>使用man获得帮助信息 基本语法 man [命令或配置文件]（功能描述：获得帮助信息） help指令 基本语法 help 命令 （功能描述：获得 shell 内置命令的帮助信息）</description>
    </item>
    
    <item>
      <title>8、文件目录类(Linux)</title>
      <link>https://yiguan1573.github.io/post/108%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E7%B1%BB/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/108%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E7%B1%BB/</guid>
      <description>pwd指令 基本语法 pwd 功能描述：显示当前工作目录的绝对路径 ls指令 基本语法 ls [选项] [目录或是文件] -a，显示当前目录所有的文件和目录，包括隐</description>
    </item>
    
    <item>
      <title>21、DOM查询(JS)</title>
      <link>https://yiguan1573.github.io/post/21dom%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/21dom%E6%9F%A5%E8%AF%A2/</guid>
      <description>通过具体的元素节点来查询 元素.getElementsByTagName()，通过标签名查询当前元素的指定后代元素 元素.childNodes，</description>
    </item>
    
    <item>
      <title>22、DOM增删(JS)</title>
      <link>https://yiguan1573.github.io/post/22dom%E5%A2%9E%E5%88%A0/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/22dom%E5%A2%9E%E5%88%A0/</guid>
      <description>DOM修改 document.createElement()，可以根据标签名创建一个元素节点对象 document.createTextNode</description>
    </item>
    
    <item>
      <title>15、Date对象(JS)</title>
      <link>https://yiguan1573.github.io/post/15date%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/15date%E5%AF%B9%E8%B1%A1/</guid>
      <description>Data对象创建 日期的对象，在JS中通过Date对象来表示一个时间 创建一个当前的时间对象 var d = new Date(); console.log(d);//Thu Feb 13 2020 16:56:50 GMT+0800 (中国标准时间) 创建一个指定的</description>
    </item>
    
    <item>
      <title>16、Math(JS)</title>
      <link>https://yiguan1573.github.io/post/16math/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/16math/</guid>
      <description>简介 Math属于一个工具类，它不需要我们创建对象，它里边封装了属性运算相关的常量和方法，我们可以直接使用它来进行数学运算相关的操作 方法 Mat</description>
    </item>
    
    <item>
      <title>17、包装类(JS)</title>
      <link>https://yiguan1573.github.io/post/17%E5%8C%85%E8%A3%85%E7%B1%BB/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/17%E5%8C%85%E8%A3%85%E7%B1%BB/</guid>
      <description>在JS中为我们提供了三个包装类：String() Boolean() Number()，通过这三个包装类可以创建基本数据类型的对象 var num = new Number(2); var str = new String(&amp;quot;hello&amp;quot;); var bool = new Boolean(true);</description>
    </item>
    
    <item>
      <title>18、字符串的方法(JS)</title>
      <link>https://yiguan1573.github.io/post/18%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/18%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>在底层字符串都是以字符数组的形式保存的 length，获取字符串的长度 var str=&amp;quot;hello world&amp;quot;; console.log(str.length); console.log(str[4]); charAt()，根据索引获取指定的字符 charCodeAt(</description>
    </item>
    
    <item>
      <title>19、正则表达式(JS)</title>
      <link>https://yiguan1573.github.io/post/19%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/19%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>正则表达式的简介 正则用来定义一些字符串的规则，程序可以根据这些规则来判断一个字符串是否符合规则，也可以将一个字符串中符合规则的内容提取出来 创</description>
    </item>
    
    <item>
      <title>20、DOM(JS)</title>
      <link>https://yiguan1573.github.io/post/20dom/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/20dom/</guid>
      <description>DOM（Document Object Model）简介 文档对象模型，通过DOM可以来任意来修改网页中各个内容 文档——指网页，一个网页就是一个文档 对象——</description>
    </item>
    
    <item>
      <title>14、函数的方法(JS)</title>
      <link>https://yiguan1573.github.io/post/14%E5%87%BD%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/14%E5%87%BD%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>call()和apply() 当对函数调用call()和apply()都会调用函数执行 function fun(){ alert(this); } fun.apply(); fun.call(); fun(); var obj={}; fun.apply(obj); fun.call(obj); 通过两个方法可以直接调用函数，并且</description>
    </item>
    
    <item>
      <title>10、函数2(JS)</title>
      <link>https://yiguan1573.github.io/post/10%E5%87%BD%E6%95%B02/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/10%E5%87%BD%E6%95%B02/</guid>
      <description>使用工厂方法创建对象 使用工厂方法创建的对象，使用的构造函数都是Object，所以创建的对象都是Object这个类型，导致我们无法区分多种不同</description>
    </item>
    
    <item>
      <title>11、toString()(JS)</title>
      <link>https://yiguan1573.github.io/post/11tostring/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/11tostring/</guid>
      <description>toString() 当我们直接在页面中打印一个对象时，实际上是输出对象的toString()方法的返回值 function Person(name,age){ this.name = name; this.age = age; } var per=new Person(&amp;quot;孙悟空</description>
    </item>
    
    <item>
      <title>12、垃圾回收(JS)</title>
      <link>https://yiguan1573.github.io/post/12%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/12%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</guid>
      <description>垃圾回收（GC） 程序运行过程中会产生垃圾，垃圾积攒过多，会导致程序运行的速度变慢 当一个对象没有设置任何变量或属性对它进行引用，此时将无法操作</description>
    </item>
    
    <item>
      <title>13、数组(JS)</title>
      <link>https://yiguan1573.github.io/post/13%E6%95%B0%E7%BB%84/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/13%E6%95%B0%E7%BB%84/</guid>
      <description>数组简介 数组也是一个对象 创建数组对象 var arr = new Array();//或者var arr = []; 向数组中添加元素 数组对象[索引] = 值; arr[0] = 123; arr[1] = &amp;quot;hello&amp;quot;; 使用len</description>
    </item>
    
    <item>
      <title>3、vi和vim(Linux)</title>
      <link>https://yiguan1573.github.io/post/103vi%E5%92%8Cvim/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/103vi%E5%92%8Cvim/</guid>
      <description>vi和vim介绍 所有的 Linux 系统都会内建 vi 文本编辑器，Vim 具有程序编辑的能力，可以看做是 Vi 的增强版本，可以主动的以字体颜色辨别语法的正确性，方</description>
    </item>
    
    <item>
      <title>1、CentOS基础(Linux)</title>
      <link>https://yiguan1573.github.io/post/101centos%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/101centos%E5%9F%BA%E7%A1%80/</guid>
      <description>虚拟机的网络连接三种形式 桥连接：Linux可以和其他的系统通信，但是可能造成IP冲突 NAT：Linux可以访问外网，不会造成IP地址冲突 主机</description>
    </item>
    
    <item>
      <title>2、远程操作(Linux)</title>
      <link>https://yiguan1573.github.io/post/102%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/102%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C/</guid>
      <description>远程登录Linux需要的软件 XShell远程连接配置 XFTP 是一个基于 windows 平台的功能强大的 SFTP、FTP 文件传输软件。使用了 Xftp 以后，windows</description>
    </item>
    
    <item>
      <title>9、函数1(JS)</title>
      <link>https://yiguan1573.github.io/post/9%E5%87%BD%E6%95%B01/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/9%E5%87%BD%E6%95%B01/</guid>
      <description>函数（function）的简介 函数也是对象，函数中可以封装一些功能（代码） 创建并调用一个函数对象 var fun = new Function(&amp;quot;con</description>
    </item>
    
    <item>
      <title>7、流程控制语句(JS)</title>
      <link>https://yiguan1573.github.io/post/7%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/7%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</guid>
      <description>条件判断语句 条件判断语句也称为if语句 语法一： if(条件表达式){ 语句... } - 执行流程： if语句执行时，会先对条件表达式进行求值判断， 如果</description>
    </item>
    
    <item>
      <title>8、对象(JS)</title>
      <link>https://yiguan1573.github.io/post/8%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/8%E5%AF%B9%E8%B1%A1/</guid>
      <description>对象的简介 对象是一种复合数据类型，在对象中可以保存多个不同数据类型的属性 对象的分类 内建对象：由MS标准定义的对象，在任何的ES的实现中都可以</description>
    </item>
    
    <item>
      <title>4、强制类型转换(JS)</title>
      <link>https://yiguan1573.github.io/post/4%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/4%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</guid>
      <description>将其他的数据类型转换为Strig 调用被转换数据类型的toString()方法，该方法不会影响到原变量，它会将转换的结果返回；但是null和u</description>
    </item>
    
    <item>
      <title>5、运算符(JS)</title>
      <link>https://yiguan1573.github.io/post/5%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/5%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>算数运算符 字符串相加相当于将两个字符串拼接为一个字符串，与Java相同 任何值与字符串做加法运算都会被转换为字符串后再拼串 var a = &amp;quot;123&amp;quot; + 1;//结</description>
    </item>
    
    <item>
      <title>6、Unicode编码表(JS)</title>
      <link>https://yiguan1573.github.io/post/6unicode%E7%BC%96%E7%A0%81%E8%A1%A8/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/6unicode%E7%BC%96%E7%A0%81%E8%A1%A8/</guid>
      <description>在字符串中使用转义字符输入Unicode编码： \u四位编码 console.log(&amp;quot;\u0031&amp;quot;); 在网页中使用Unicode编码： &amp;amp;#编码 这里的编码为10进制数 &amp;lt;h1&amp;gt;&amp;amp;#2340&amp;lt;/h1&amp;gt;</description>
    </item>
    
    <item>
      <title>3、基本数据类型(JS)</title>
      <link>https://yiguan1573.github.io/post/3%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/3%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>数据类型 数据类型指的就是字面量的类型 在JS中一共六种数据类型 Number 数值 Boolean 布尔值 Null 空值 Undefined 未定义 Object 对象 String 字符串 其中String、Number、Boo</description>
    </item>
    
    <item>
      <title>2、变量(JS)</title>
      <link>https://yiguan1573.github.io/post/2%E5%8F%98%E9%87%8F/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/2%E5%8F%98%E9%87%8F/</guid>
      <description>字面量和变量 字面量 都是一些不可改变的量，比如：1 2 3，字面量可以直接使用字面量 变量 可以保存字面量，一般使用变量保存字面量 声明变量 在JS中使用</description>
    </item>
    
    <item>
      <title>1、JS语法基础(JS)</title>
      <link>https://yiguan1573.github.io/post/1js%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1js%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</guid>
      <description>JS的Hello World 该函数控制浏览器弹出警告框 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt; &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; alert(&amp;quot;Hello World&amp;quot;); &amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 该函数可以向body中输出内容 document.write(&amp;quot;Hello World&amp;quot;); 该函数可以向控制台输出一个内容</description>
    </item>
    
  </channel>
</rss>