<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SpringSecurity on 亿观的博客</title>
    <link>http://yiguan1573.gitee.io/tags/springsecurity/</link>
    <description>Recent content in SpringSecurity on 亿观的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 13 May 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://yiguan1573.gitee.io/tags/springsecurity/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>5、SpringSecurity oauth2（SpringSecurity）</title>
      <link>http://yiguan1573.gitee.io/post/1034springsecurity-oauth2/</link>
      <pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://yiguan1573.gitee.io/post/1034springsecurity-oauth2/</guid>
      <description>简单介绍和使用 Oauth2是什么&amp;amp;怎么用 基于spring-security-oauth2实现oauth2 SpringBoot + Spring Security OAuth2基本使用</description>
    </item>
    
    <item>
      <title>4、SpringSecurity 微服务权限方案（SpringSecurity）</title>
      <link>http://yiguan1573.gitee.io/post/1033springsecurity-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90%E6%96%B9%E6%A1%88/</link>
      <pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://yiguan1573.gitee.io/post/1033springsecurity-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90%E6%96%B9%E6%A1%88/</guid>
      <description>微服务认证与授权实现思路 认证授权过程分析 如果是基于 Session，那么 Spring-security 会对 cookie 里的 sessionid 进行解析，找到服务器存储的 session 信息，然后判断当前用户是否符</description>
    </item>
    
    <item>
      <title>3、SpringSecurity Web权限方案（SpringSecurity）</title>
      <link>http://yiguan1573.gitee.io/post/1032springsecurity-web-%E6%9D%83%E9%99%90%E6%96%B9%E6%A1%88/</link>
      <pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://yiguan1573.gitee.io/post/1032springsecurity-web-%E6%9D%83%E9%99%90%E6%96%B9%E6%A1%88/</guid>
      <description>设置登录系统的账号、密码 方式一：在 application.properties spring.security.user.name=atguigu spring.security.user.password=atguigu 方式二：编写类实现接口 package com.atguigu.config; @Configuration public class SecurityConfig { // 注入 PasswordEncoder 类到 spring 容器中 @Bean public PasswordEncoder passwordEncoder(){ return new BCryptPasswordEncoder(); } } package com.atguigu.service; @Service public class LoginService implements UserDetailsService { @Override public UserDetails loadUserByUsername(String</description>
    </item>
    
    <item>
      <title>2、SpringSecurity 入门案例（SpringSecurity）</title>
      <link>http://yiguan1573.gitee.io/post/1031springsecurity-%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Tue, 10 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://yiguan1573.gitee.io/post/1031springsecurity-%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B/</guid>
      <description>创建项目 新建springboot工程 增加依赖 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-security&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; 添加一个配置类： @Configuration public class SecurityConfigextends WebSecurityConfigurerAdapter { @Override protected void configure(HttpSecurity http) throws Exception { http.formLogin() // 表单登录 .and() .authorizeRequests() // 认证配置 .anyRequest() // 任何请求 .authenticated(); // 都</description>
    </item>
    
    <item>
      <title>1、SpringSecurity 框架简介（SpringSecurity）</title>
      <link>http://yiguan1573.gitee.io/post/1030springsecurity%E6%A1%86%E6%9E%B6%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Mon, 09 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://yiguan1573.gitee.io/post/1030springsecurity%E6%A1%86%E6%9E%B6%E6%A6%82%E8%BF%B0/</guid>
      <description>概要 Spring 是非常流行和成功的 Java 应用开发框架，Spring Security 正是 Spring 家族中的成员。Spring Security 基于 Spring 框架，提供了一套 Web 应用安全性的完整解决方案。 关</description>
    </item>
    
  </channel>
</rss>