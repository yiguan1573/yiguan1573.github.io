<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on 亿观的博客</title>
    <link>https://yiguan1573.github.io/tags/java/</link>
    <description>Recent content in java on 亿观的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 07 May 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://yiguan1573.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>1、DataX（DataX）</title>
      <link>https://yiguan1573.github.io/post/1028datax/</link>
      <pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1028datax/</guid>
      <description>安装和使用 安装 前提-需要有java8以及Python2.7以上的环境 wget http://datax-opensource.oss-cn-hangzhou.aliyuncs.com/datax.tar.gz tar -zxvf datax.tar.gz 可能遇到的问题 运行官方案例 bin/datax.py /job/job.json 直接报错，说找不到plugin,</description>
    </item>
    
    <item>
      <title>10、大表excel读取（Java）</title>
      <link>https://yiguan1573.github.io/post/986%E5%A4%A7%E8%A1%A8excel%E8%AF%BB%E5%8F%96/</link>
      <pubDate>Fri, 22 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/986%E5%A4%A7%E8%A1%A8excel%E8%AF%BB%E5%8F%96/</guid>
      <description>使用xlsx-streamer读取 maven引入 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.monitorjbl&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;xlsx-streamer&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.2.1&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 测试数据为12W条 正常读取 使用xlsx-streamer 使用 Workbook wb = StreamingReader.builder() .rowCacheSize(50000) //缓存到内</description>
    </item>
    
    <item>
      <title>9、Quartz（Java）</title>
      <link>https://yiguan1573.github.io/post/984quartz/</link>
      <pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/984quartz/</guid>
      <description>Quartz Java 实现定时任务的三种方法 但是都不能动态地控制定时时间 quartz的持久化数据库 quartz的持久化数据库简化版 几种定时器 Quartz持久化</description>
    </item>
    
    <item>
      <title>8、Scheduled定时任务（Java）</title>
      <link>https://yiguan1573.github.io/post/981scheduled%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</link>
      <pubDate>Tue, 23 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/981scheduled%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</guid>
      <description>@Scheduled注解 Spring中@Scheduled注解的使用 SpringBoot中使用@Scheduled注解 Spring中配置该注</description>
    </item>
    
    <item>
      <title>2、Doker详解（Docker）</title>
      <link>https://yiguan1573.github.io/post/883docker%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/883docker%E8%AF%A6%E8%A7%A3/</guid>
      <description>概述 开发需要清楚的告诉运维部署团队，用的全部配置文件+所有软件环境。不过，即便如此，仍然常常发生部署失败的状况。Docker镜 像的设计，使得</description>
    </item>
    
    <item>
      <title>2、Java8新特性（Java8）</title>
      <link>https://yiguan1573.github.io/post/882java8%E6%96%B0%E7%89%B9%E6%80%A7/</link>
      <pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/882java8%E6%96%B0%E7%89%B9%E6%80%A7/</guid>
      <description>概述 生态 Lambda 表达式 函数式接口 方法引用 / 构造器引用 Stream API 接口中的默认方法 / 静态方法 新时间日期 API 其他新特性 新特性 速度更快 代码更少 强大的 Stream API 便于并行 最</description>
    </item>
    
    <item>
      <title>2、Java7新特性（Java7）</title>
      <link>https://yiguan1573.github.io/post/881java7%E6%96%B0%E7%89%B9%E6%80%A7/</link>
      <pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/881java7%E6%96%B0%E7%89%B9%E6%80%A7/</guid>
      <description>概述 泛型实例的创建可以通过类型推断来简化，可以去掉后面new部分的泛型类型，只用&amp;lt;&amp;gt;就可以了。 并发工具增强： fork-join框</description>
    </item>
    
    <item>
      <title>5、字节码操作(Java)</title>
      <link>https://yiguan1573.github.io/post/405%E5%AD%97%E8%8A%82%E7%A0%81%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/405%E5%AD%97%E8%8A%82%E7%A0%81%E6%93%8D%E4%BD%9C/</guid>
      <description>简介 JAVA动态性的两种常见实现方式： 反射 字节码操作 运行时操作字节码可以上我们实现如下功能: 动态生成新的类 动态改变某个类的结构(添加删除/修</description>
    </item>
    
    <item>
      <title>4、脚本引擎执行JS代码(Java)</title>
      <link>https://yiguan1573.github.io/post/404%E8%84%9A%E6%9C%AC%E5%BC%95%E6%93%8E%E6%89%A7%E8%A1%8Cjs%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/404%E8%84%9A%E6%9C%AC%E5%BC%95%E6%93%8E%E6%89%A7%E8%A1%8Cjs%E4%BB%A3%E7%A0%81/</guid>
      <description>简介 脚本引擎介绍 使得Java应用程序可以通过一套固定的接口与各种脚本引擎交互,从而达到在Java平台上调用各种脚本语言的目的。 Java 脚本API是</description>
    </item>
    
    <item>
      <title>3、动态编译(Java)</title>
      <link>https://yiguan1573.github.io/post/403%E5%8A%A8%E6%80%81%E7%BC%96%E8%AF%91/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/403%E5%8A%A8%E6%80%81%E7%BC%96%E8%AF%91/</guid>
      <description>动态编译简介 动态编译的应用场景 可以做一个浏览器端编写java代码,上传服务器编译和运行的在线评测系统 服务器动态加载某些类文件进行编译 动态编译</description>
    </item>
    
    <item>
      <title>2、反射机制(Java)</title>
      <link>https://yiguan1573.github.io/post/402%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/402%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</guid>
      <description>简介 动态语言：程序运行时,可以改变程序结构或变量类型。典型的语言:，Python、 ruby、javascript等 C，C++, JAVA不是动</description>
    </item>
    
    <item>
      <title>1、Annotation注解(Java)</title>
      <link>https://yiguan1573.github.io/post/401.annotation%E6%B3%A8%E8%A7%A3/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/401.annotation%E6%B3%A8%E8%A7%A3/</guid>
      <description>简介 Annotation的作用 不是程序本身,可以对程序作出解释。(这一点, 跟注释没什么区别) 可以被其他程序(此如:编译器等)读取。(注解信息</description>
    </item>
    
  </channel>
</rss>