<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mysql on 亿观的博客</title>
    <link>https://yiguan1573.github.io/tags/mysql/</link>
    <description>Recent content in mysql on 亿观的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 26 Nov 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://yiguan1573.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>26、mysql基础补充(MySQL8其他新特性)</title>
      <link>https://yiguan1573.github.io/post/1096mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85mysql8%E5%85%B6%E4%BB%96%E6%96%B0%E7%89%B9%E6%80%A7/</link>
      <pubDate>Sat, 26 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1096mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85mysql8%E5%85%B6%E4%BB%96%E6%96%B0%E7%89%B9%E6%80%A7/</guid>
      <description>第18章_MySQL8其他新特性 1. MySQL8新特性概述 MySQL从5.7版本直接跳跃发布了8.0版本 ，可见这是一个令人兴奋的里程碑版本。M</description>
    </item>
    
    <item>
      <title>25、mysql基础补充(触发器)</title>
      <link>https://yiguan1573.github.io/post/1095mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E8%A7%A6%E5%8F%91%E5%99%A8/</link>
      <pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1095mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E8%A7%A6%E5%8F%91%E5%99%A8/</guid>
      <description>第17章_触发器 在实际开发中，我们经常会遇到这样的情况：有 2 个或者多个相互关联的表，如 商品信息 和 库存信息 分 别存放在 2 个不同的数据表中，我们在</description>
    </item>
    
    <item>
      <title>24、mysql基础补充(变量、流程控制与游标)</title>
      <link>https://yiguan1573.github.io/post/1094mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E5%8F%98%E9%87%8F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E4%B8%8E%E6%B8%B8%E6%A0%87/</link>
      <pubDate>Thu, 24 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1094mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E5%8F%98%E9%87%8F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E4%B8%8E%E6%B8%B8%E6%A0%87/</guid>
      <description>第16章_变量、流程控制与游标 在MySQL数据库的存储过程和函数中，可以使用变量来存储查询或计算的中间结果数据，或者输出最终的结果数据。 1. 变</description>
    </item>
    
    <item>
      <title>23、mysql基础补充(存储过程与函数)</title>
      <link>https://yiguan1573.github.io/post/1093mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E4%B8%8E%E5%87%BD%E6%95%B0/</link>
      <pubDate>Wed, 23 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1093mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E4%B8%8E%E5%87%BD%E6%95%B0/</guid>
      <description>第15章_存储过程与函数 MySQL从5.0版本开始支持存储过程和函数。存储过程和函数能够将复杂的SQL逻辑封装在一起，应用程 序无须关注存储过</description>
    </item>
    
    <item>
      <title>22、mysql基础补充(视图)</title>
      <link>https://yiguan1573.github.io/post/1092mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E8%A7%86%E5%9B%BE/</link>
      <pubDate>Tue, 22 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1092mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85%E8%A7%86%E5%9B%BE/</guid>
      <description>第14章_视图 1. 常见的数据库对象 对象 描述 表(TABLE) 表是存储数据的逻辑单元，以行和列的形式存在，列就是字段，行就是记录 数据字典 就是系统表</description>
    </item>
    
    <item>
      <title>21、mysql基础补充(DDL和数据类型)</title>
      <link>https://yiguan1573.github.io/post/1091mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85ddl/</link>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1091mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85ddl/</guid>
      <description>第十章_创建和管理表 1. 基础知识 1) 标识符命名规则 数据库名、表名不得超过30个字符，变量名限制为29个 必须只能包含 A–Z, a–z, 0–9, _共6</description>
    </item>
    
    <item>
      <title>20、mysql基础补充(DML)</title>
      <link>https://yiguan1573.github.io/post/1090mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85dml/</link>
      <pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1090mysql%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85dml/</guid>
      <description>导入表的问题 导入数据时外键约束问题 数据导入指令： source d:\xxx.sql 通过FOREIGN_KEY_CHECKS解决，用法如下： set FOREIGN_KEY_CHECKS=0; #在导入前设置为不检查外键约</description>
    </item>
    
    <item>
      <title>19、数据库备份与恢复（日志与备份篇）</title>
      <link>https://yiguan1573.github.io/post/1089%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</link>
      <pubDate>Mon, 03 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1089%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</guid>
      <description>1. 物理备份与逻辑备份 **物理备份：**备份数据文件，转储数据库物理文件到某一目录。物理备份恢复速度比较快，但占用空间比较大，MySQL中可以</description>
    </item>
    
    <item>
      <title>18、主从复制（日志与备份篇）</title>
      <link>https://yiguan1573.github.io/post/1088%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</link>
      <pubDate>Sun, 02 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1088%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</guid>
      <description>1. 主从复制概述 1.1 如何提升数据库并发能力 在实际工作中，我们常常将Redis作为缓存与MySQL配合来使用，当有请求的时候，首先会从缓存中进行查</description>
    </item>
    
    <item>
      <title>17、其他数据库日志（日志与备份篇）</title>
      <link>https://yiguan1573.github.io/post/1087%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A5%E5%BF%97/</link>
      <pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1087%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A5%E5%BF%97/</guid>
      <description>千万不要小看日志。很多看似奇怪的问题，答案往往就藏在日志里。很多情况下，只有通过查看日志才 能发现问题的原因，真正解决问题。所以，一定要学会查</description>
    </item>
    
    <item>
      <title>16、多版本并发控制（事务篇）</title>
      <link>https://yiguan1573.github.io/post/1086%E5%A4%9A%E7%89%88%E6%9C%AC%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6mvcc/</link>
      <pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1086%E5%A4%9A%E7%89%88%E6%9C%AC%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6mvcc/</guid>
      <description>1. 什么是MVCC MVCC （Multiversion Concurrency Control），多版本并发控制。顾名思义，MVCC 是通过数据行的多个版本管理来实现数据库的 并</description>
    </item>
    
    <item>
      <title>15、锁（事务篇）</title>
      <link>https://yiguan1573.github.io/post/1085%E9%94%81/</link>
      <pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1085%E9%94%81/</guid>
      <description>1. 概述 在数据库中，除传统的计算资源（如CPU、RAM、I/O等）的争用以外，数据也是一种供许多用户共享的 资源。为保证数据的一致性，需要对 并发</description>
    </item>
    
    <item>
      <title>14、MySQL事务日志（事务篇）</title>
      <link>https://yiguan1573.github.io/post/1084mysql%E4%BA%8B%E5%8A%A1%E6%97%A5%E5%BF%97/</link>
      <pubDate>Tue, 27 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1084mysql%E4%BA%8B%E5%8A%A1%E6%97%A5%E5%BF%97/</guid>
      <description>事务有4种特性：原子性、一致性、隔离性和持久性。那么事务的四种特性到底是基于什么机制实现呢？ 事务的隔离性由 锁机制 实现。 而事务的原子性、一致性</description>
    </item>
    
    <item>
      <title>13、事务基础知识（事务篇）</title>
      <link>https://yiguan1573.github.io/post/1083%E4%BA%8B%E5%8A%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1083%E4%BA%8B%E5%8A%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>1. 数据库事务概述 1.1 存储引擎支持情况 SHOW ENGINES 命令来查看当前 MySQL 支持的存储引擎都有哪些，以及这些存储引擎是否支持事务。 能看出在 MySQL 中，只有InnoDB 是</description>
    </item>
    
    <item>
      <title>12、数据库其他调优策略（索引与调优篇）</title>
      <link>https://yiguan1573.github.io/post/1082%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B6%E4%BB%96%E8%B0%83%E4%BC%98%E7%AD%96%E7%95%A5/</link>
      <pubDate>Sun, 25 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1082%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B6%E4%BB%96%E8%B0%83%E4%BC%98%E7%AD%96%E7%95%A5/</guid>
      <description>1. 数据库调优的措施 1.1 调优的目标 尽可能节省系统资源 ，以便系统可以提供更大负荷的服务。（吞吐量更大） 合理的结构设计和参数调整，以提高用户操作响应</description>
    </item>
    
    <item>
      <title>11、数据库的设计规范（索引与调优篇）</title>
      <link>https://yiguan1573.github.io/post/1081%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/</link>
      <pubDate>Sat, 24 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1081%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/</guid>
      <description>1. 为什么需要数据库设计 2. 范 式 2.1 范式简介 在关系型数据库中，关于数据表设计的基本原则、规则就称为范式。可以理解为，一张数据表的设计结 构需要满足的</description>
    </item>
    
    <item>
      <title>10、索引优化与查询优化（索引与调优篇）</title>
      <link>https://yiguan1573.github.io/post/1080%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E4%B8%8E%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/</link>
      <pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1080%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E4%B8%8E%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/</guid>
      <description>都有哪些维度可以进行数据库调优？简言之： 索引失效、没有充分利用到索引——建立索引 关联查询太多JOIN（设计缺陷或不得已的需求）——SQL优化</description>
    </item>
    
    <item>
      <title>9、性能分析工具的使用（索引与调优篇）</title>
      <link>https://yiguan1573.github.io/post/1079%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 22 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1079%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>在数据库调优中，我们的目标是 响应时间更快, 吞吐量更大 。利用宏观的监控工具和微观的日志分析可以帮我们快速找到调优的思路和方式。 1. 数据库服务器的</description>
    </item>
    
    <item>
      <title>8、索引的创建与设计原则（索引与调优篇）</title>
      <link>https://yiguan1573.github.io/post/1078%E7%B4%A2%E5%BC%95%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</link>
      <pubDate>Wed, 21 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1078%E7%B4%A2%E5%BC%95%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</guid>
      <description>1. 索引的声明与使用 1.1 索引的分类 MySQL的索引包括普通索引、唯一性索引、全文索引、单列索引、多列索引和空间索引等。 从 功能逻辑 上说，索引主要有</description>
    </item>
    
    <item>
      <title>7、InnoDB数据存储结构（索引与调优篇）</title>
      <link>https://yiguan1573.github.io/post/1077innodb%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/</link>
      <pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1077innodb%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/</guid>
      <description>1. 数据库的存储结构：页 1.1 磁盘与内存交互基本单位：页 1.2 页结构概述 1.3 页的大小 不同的数据库管理系统（简称DBMS）的页大小不同。比如在 MySQL 的 InnoDB 存储引</description>
    </item>
    
    <item>
      <title>6、索引的数据结构（索引与调优篇）</title>
      <link>https://yiguan1573.github.io/post/1076%E7%B4%A2%E5%BC%95%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1076%E7%B4%A2%E5%BC%95%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>1. 为什么使用索引 索引是存储引擎用于快速找到数据记录的一种数据结构，就好比一本教科书的目录部分，通过目录中找到对应文章的页码，便可快速定位到需</description>
    </item>
    
    <item>
      <title>5、存储引擎（MySQL架构篇）</title>
      <link>https://yiguan1573.github.io/post/1075%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</link>
      <pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1075%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</guid>
      <description>1. 查看存储引擎 查看mysql提供什么存储引擎 show engines; 2. 设置系统默认的存储引擎 查看默认的存储引擎 show variables like &amp;#39;%storage_engine%&amp;#39;; #或 SELECT @@default_storage_engine; 修改默认的存储引擎 如果在创建表的语</description>
    </item>
    
    <item>
      <title>4、逻辑架构（MySQL架构篇）</title>
      <link>https://yiguan1573.github.io/post/1074%E9%80%BB%E8%BE%91%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Sat, 17 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1074%E9%80%BB%E8%BE%91%E6%9E%B6%E6%9E%84/</guid>
      <description>1. 逻辑架构剖析 1.1 服务器处理客户端请求 首先MySQL是典型的C/S架构，即Clinet/Server 架构，服务端程序使用的mysqld。 不论客</description>
    </item>
    
    <item>
      <title>3、用户与权限管理（MySQL架构篇）</title>
      <link>https://yiguan1573.github.io/post/1073%E7%94%A8%E6%88%B7%E4%B8%8E%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</link>
      <pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1073%E7%94%A8%E6%88%B7%E4%B8%8E%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</guid>
      <description>用户管理 1.1 登录MySQL服务器 1.2 创建用户 1.3 修改用户 1.4 删除用户 1.5 设置当前用户密码 1.6 修改其它用户密码 1.7 MySQL8密码管理(了解) 权限管理 2.1 权限</description>
    </item>
    
    <item>
      <title>2、MySQL的数据目录（MySQL架构篇）</title>
      <link>https://yiguan1573.github.io/post/1072mysql%E7%9A%84%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1072mysql%E7%9A%84%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95/</guid>
      <description>MySQL8的主要目录结构 1.1 数据库文件的存放路径 1.2 相关命令目录 1.3 配置文件目录 数据库和文件系统的关系 2.1 查看默认数据库 2.2 数据库在文件系统中的表示</description>
    </item>
    
    <item>
      <title>1、Linux下MySQL的安装与使用（MySQL架构篇）</title>
      <link>https://yiguan1573.github.io/post/1071linux%E4%B8%8Bmysql%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 14 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1071linux%E4%B8%8Bmysql%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid>
      <description>安装前说明 1.1 Linux系统及工具的准备 1.2 查看是否安装过MySQL 1.3 MySQL的卸载 MySQL的Linux版安装 2.1 MySQL的4大版本 2.2 下载M</description>
    </item>
    
    <item>
      <title>mysql数据备份</title>
      <link>https://yiguan1573.github.io/post/1029mysql%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/</link>
      <pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/1029mysql%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/</guid>
      <description>前言 公司很久以前的一个库查询太慢，需要做主从复制和读写分离，但是这个库数据量大几百G而且不能停机，所以需要将数据热备份到从库后再做其他操作 DataX</description>
    </item>
    
    <item>
      <title>2、索引（MySQL）</title>
      <link>https://yiguan1573.github.io/post/862%E7%B4%A2%E5%BC%95/</link>
      <pubDate>Wed, 07 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/862%E7%B4%A2%E5%BC%95/</guid>
      <description>索引</description>
    </item>
    
    <item>
      <title>1、主从复制（MySQL）</title>
      <link>https://yiguan1573.github.io/post/861%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</link>
      <pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.github.io/post/861%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</guid>
      <description>环境介绍 LNMP（centos7，mysql5.6） vmware workstation pro配置了3个虚拟机，均安装了LNMP环境： master： 192.168.0.105 slave： 192.168.0.106 、192</description>
    </item>
    
  </channel>
</rss>