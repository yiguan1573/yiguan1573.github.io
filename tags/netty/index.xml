<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Netty on 亿观的博客</title>
    <link>https://yiguan1573.gitee.io/tags/netty/</link>
    <description>Recent content in Netty on 亿观的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 18 May 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://yiguan1573.gitee.io/tags/netty/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>4、Netty优化和源码（Netty）</title>
      <link>https://yiguan1573.gitee.io/post/1038netty%E4%BC%98%E5%8C%96%E5%92%8C%E6%BA%90%E7%A0%81/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1038netty%E4%BC%98%E5%8C%96%E5%92%8C%E6%BA%90%E7%A0%81/</guid>
      <description>1. 优化 1.1 扩展序列化算法 序列化，反序列化主要用在消息正文的转换上 序列化时，需要将 Java 对象变为要传输的数据（可以是 byte[]，或 json 等，最终都需要</description>
    </item>
    
    <item>
      <title>3、Netty进阶（Netty）</title>
      <link>https://yiguan1573.gitee.io/post/1037netty%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1037netty%E8%BF%9B%E9%98%B6/</guid>
      <description>1. 粘包与半包 1.1 粘包现象 服务端代码 public class HelloWorldServer { static final Logger log = LoggerFactory.getLogger(HelloWorldServer.class); void start() { NioEventLoopGroup boss = new NioEventLoopGroup(1); NioEventLoopGroup worker = new NioEventLoopGroup(); try { ServerBootstrap serverBootstrap = new ServerBootstrap(); serverBootstrap.channel(NioServerSocketChannel.class); serverBootstrap.group(boss, worker); serverBootstrap.childHandler(new ChannelInitializer&amp;lt;SocketChannel&amp;gt;() { @Override protected void initChannel(SocketChannel ch) throws Exception { ch.pipeline().addLast(new LoggingHandler(LogLevel.DEBUG)); ch.pipeline().addLast(new ChannelInboundHandlerAdapter() { @Override public void channelActive(ChannelHandlerContext ctx)</description>
    </item>
    
    <item>
      <title>2、Netty入门（Netty）</title>
      <link>https://yiguan1573.gitee.io/post/1036netty%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1036netty%E5%85%A5%E9%97%A8/</guid>
      <description>1. 概述 1.1 Netty 是什么？ Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp;amp; clients. Netty 是一个异步的、基于事件驱动的网络应用框架，用于快速开发可维护、高性能的网络服务器和</description>
    </item>
    
    <item>
      <title>1、NIO（Netty）</title>
      <link>https://yiguan1573.gitee.io/post/1035nio/</link>
      <pubDate>Sat, 14 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yiguan1573.gitee.io/post/1035nio/</guid>
      <description>1. 三大组件 non-blocking io 非阻塞 IO 1.1 Channel &amp;amp; Buffer channel 有一点类似于 stream，它就是读写数据的双向通道，可以从 channel 将数据读入 buffer，也可以将 buffer 的数据写入 ch</description>
    </item>
    
  </channel>
</rss>